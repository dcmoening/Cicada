
cicada.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003254  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     0000000c  20000000  00003254  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000015c  2000000c  00003260  0002000c  2**2
                  ALLOC
  3 .stack        00002000  20000168  000033bc  0002000c  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY
  6 .debug_info   000272ec  00000000  00000000  0002008d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000369d  00000000  00000000  00047379  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00006ab6  00000000  00000000  0004aa16  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000710  00000000  00000000  000514cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000006f0  00000000  00000000  00051bdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001a109  00000000  00000000  000522cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000be7c  00000000  00000000  0006c3d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0008d600  00000000  00000000  00078251  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  000013ec  00000000  00000000  00105854  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
/* This function is an example for reading sensor data
 *	\param: None
 *	\return: communication result
 */
s32 bmp280_data_readout_template(void)
{
       0:	68 21 00 20 39 12 00 00 35 12 00 00 35 12 00 00     h!. 9...5...5...
	...
	 *	standard resolution		x4			x1
	 *	high resolution			x8			x2
	 *	ultra high resolution		x16			x2
	 */
	/* The oversampling settings are set by using the following API*/
	com_rslt += bmp280_set_work_mode(BMP280_ULTRA_LOW_POWER_MODE);
      2c:	c9 06 00 00 00 00 00 00 00 00 00 00 f1 06 00 00     ................
	 *	Usage Hint : BMP280_set_standbydur(BMP280_STANDBYTIME_125_MS)*/

	com_rslt += bmp280_set_standby_durn(BMP280_STANDBY_TIME_1_MS);

	/* This API used to read back the written value of standby time*/
	com_rslt += bmp280_get_standby_durn(&v_standby_time_u8);
      3c:	35 07 00 00 35 12 00 00 35 12 00 00 35 12 00 00     5...5...5...5...
*---------------------------------------------------------------------*/
	/* API is used to read the uncompensated temperature*/
	com_rslt += bmp280_read_uncomp_temperature(&v_data_uncomp_tem_s32);

	/* API is used to read the uncompensated pressure*/
	com_rslt += bmp280_read_uncomp_pressure(&v_data_uncomp_pres_s32);
      4c:	35 12 00 00 35 12 00 00 35 12 00 00 35 12 00 00     5...5...5...5...
	/* Input value as uncompensated temperature*/
	v_actual_temp_s32 = bmp280_compensate_temperature_int32(v_data_uncomp_tem_s32);

	/* API is used to read the true pressure*/
	/* Input value as uncompensated pressure*/
	v_actual_press_u32 = bmp280_compensate_pressure_int32(v_data_uncomp_pres_s32);
      5c:	35 12 00 00 35 12 00 00 c5 0b 00 00 d5 0b 00 00     5...5...........
	/* API is used to read the uncompensated temperature and pressure*/
	com_rslt += bmp280_read_uncomp_pressure_temperature(&v_data_uncomp_pres_combined_s32,
	&v_data_uncomp_tem_combined_s32);

	/* API is used to read the true temperature and pressure*/
	com_rslt += bmp280_read_pressure_temperature(&v_actual_press_combined_u32,
      6c:	e5 0b 00 00 f5 0b 00 00 05 0c 00 00 15 0c 00 00     ................
	 /* Set the power mode as SLEEP*/
	com_rslt += bmp280_set_power_mode(BMP280_SLEEP_MODE);

   return com_rslt;
/************************* END DE-INITIALIZATION **********************/
}
      7c:	35 12 00 00 35 12 00 00 35 12 00 00 35 12 00 00     5...5...5...5...
      8c:	35 12 00 00 35 12 00 00 00 00 00 00 00 00 00 00     5...5...........
      9c:	35 12 00 00 35 12 00 00 35 12 00 00 35 12 00 00     5...5...5...5...
      ac:	35 12 00 00 00 00 00 00                             5.......

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	2000000c 	.word	0x2000000c
      d4:	00000000 	.word	0x00000000
      d8:	00003254 	.word	0x00003254

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	20000010 	.word	0x20000010
     108:	00003254 	.word	0x00003254
     10c:	00003254 	.word	0x00003254
     110:	00000000 	.word	0x00000000

00000114 <i2c_master_init>:
				/* Set action to NACK */
				i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
			} else {
				/* Save data to buffer. */
				_i2c_master_wait_for_sync(module);
				packet->data[counter++] = i2c_module->DATA.reg;
     114:	b5f0      	push	{r4, r5, r6, r7, lr}
				/* Wait for response. */
				tmp_status = _i2c_master_wait_for_bus(module);
     116:	46d6      	mov	lr, sl
     118:	464f      	mov	r7, r9
     11a:	4646      	mov	r6, r8
     11c:	b5c0      	push	{r6, r7, lr}
     11e:	b08a      	sub	sp, #40	; 0x28
			}

			/* Check for error. */
			if (tmp_status != STATUS_OK) {
     120:	0006      	movs	r6, r0
     122:	000f      	movs	r7, r1
				packet->data[counter++] = i2c_module->DATA.reg;
     124:	0014      	movs	r4, r2
		while (tmp_data_length--) {
     126:	6031      	str	r1, [r6, #0]
     128:	0008      	movs	r0, r1
			if (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) {
     12a:	4ba0      	ldr	r3, [pc, #640]	; (3ac <i2c_master_init+0x298>)
     12c:	4798      	blx	r3
     12e:	4aa0      	ldr	r2, [pc, #640]	; (3b0 <i2c_master_init+0x29c>)
			if (module->send_nack && (((!sclsm_flag) && (tmp_data_length == 0)) ||
     130:	6a11      	ldr	r1, [r2, #32]
     132:	1c85      	adds	r5, r0, #2
     134:	2301      	movs	r3, #1
     136:	40ab      	lsls	r3, r5
     138:	430b      	orrs	r3, r1
     13a:	6213      	str	r3, [r2, #32]
     13c:	a909      	add	r1, sp, #36	; 0x24
     13e:	7b23      	ldrb	r3, [r4, #12]
				i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     140:	700b      	strb	r3, [r1, #0]
     142:	3014      	adds	r0, #20
     144:	b2c5      	uxtb	r5, r0
     146:	0028      	movs	r0, r5
     148:	4b9a      	ldr	r3, [pc, #616]	; (3b4 <i2c_master_init+0x2a0>)
     14a:	4798      	blx	r3
     14c:	0028      	movs	r0, r5
     14e:	4b9a      	ldr	r3, [pc, #616]	; (3b8 <i2c_master_init+0x2a4>)
				packet->data[counter++] = i2c_module->DATA.reg;
     150:	4798      	blx	r3
				tmp_status = _i2c_master_wait_for_bus(module);
     152:	7b20      	ldrb	r0, [r4, #12]
				break;
			}
		}

		if (module->send_stop) {
     154:	2100      	movs	r1, #0
     156:	4b99      	ldr	r3, [pc, #612]	; (3bc <i2c_master_init+0x2a8>)
     158:	4798      	blx	r3
			_i2c_master_wait_for_sync(module);
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
		}

		/* Save last data to buffer. */
		_i2c_master_wait_for_sync(module);
     15a:	683b      	ldr	r3, [r7, #0]
     15c:	201c      	movs	r0, #28
     15e:	079b      	lsls	r3, r3, #30
		packet->data[counter] = i2c_module->DATA.reg;
     160:	d505      	bpl.n	16e <i2c_master_init+0x5a>
     162:	b00a      	add	sp, #40	; 0x28
     164:	bc1c      	pop	{r2, r3, r4}
     166:	4690      	mov	r8, r2
     168:	4699      	mov	r9, r3
     16a:	46a2      	mov	sl, r4
     16c:	bdf0      	pop	{r4, r5, r6, r7, pc}
			_i2c_master_wait_for_sync(module);
     16e:	683b      	ldr	r3, [r7, #0]
     170:	3817      	subs	r0, #23
     172:	07db      	lsls	r3, r3, #31
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     174:	d4f5      	bmi.n	162 <i2c_master_init+0x4e>
     176:	6830      	ldr	r0, [r6, #0]
     178:	4b8c      	ldr	r3, [pc, #560]	; (3ac <i2c_master_init+0x298>)
     17a:	4699      	mov	r9, r3
     17c:	4798      	blx	r3
     17e:	0005      	movs	r5, r0
				return STATUS_ERR_PACKET_COLLISION;
     180:	498f      	ldr	r1, [pc, #572]	; (3c0 <i2c_master_init+0x2ac>)
     182:	4b90      	ldr	r3, [pc, #576]	; (3c4 <i2c_master_init+0x2b0>)
     184:	4798      	blx	r3
     186:	00ad      	lsls	r5, r5, #2
     188:	4b8f      	ldr	r3, [pc, #572]	; (3c8 <i2c_master_init+0x2b4>)
     18a:	50ee      	str	r6, [r5, r3]
     18c:	2300      	movs	r3, #0
     18e:	7633      	strb	r3, [r6, #24]
     190:	7673      	strb	r3, [r6, #25]
     192:	2500      	movs	r5, #0
     194:	8373      	strh	r3, [r6, #26]
     196:	83b3      	strh	r3, [r6, #28]
     198:	2225      	movs	r2, #37	; 0x25
     19a:	54b5      	strb	r5, [r6, r2]
     19c:	6233      	str	r3, [r6, #32]
     19e:	3314      	adds	r3, #20
	i2c_module->CTRLA.reg = SERCOM_I2CM_CTRLA_MODE(0x5);
     1a0:	603b      	str	r3, [r7, #0]
	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     1a2:	6833      	ldr	r3, [r6, #0]
     1a4:	4698      	mov	r8, r3
	uint8_t sercom_index = _sercom_get_sercom_inst_index(sercom_hw);
     1a6:	0018      	movs	r0, r3
     1a8:	47c8      	blx	r9
     1aa:	4681      	mov	r9, r0
{
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mux_position = SYSTEM_PINMUX_GPIO;
     1ac:	2380      	movs	r3, #128	; 0x80
     1ae:	aa08      	add	r2, sp, #32
     1b0:	7013      	strb	r3, [r2, #0]
	config->direction    = SYSTEM_PINMUX_PIN_DIR_INPUT;
     1b2:	7055      	strb	r5, [r2, #1]
	config->input_pull   = SYSTEM_PINMUX_PIN_PULL_UP;
     1b4:	2301      	movs	r3, #1
     1b6:	7093      	strb	r3, [r2, #2]
	config->powersave    = false;
     1b8:	70d5      	strb	r5, [r2, #3]
	uint32_t pad0 = config->pinmux_pad0;
     1ba:	69e0      	ldr	r0, [r4, #28]
	uint32_t pad1 = config->pinmux_pad1;
     1bc:	6a27      	ldr	r7, [r4, #32]
	if (pad0 == PINMUX_DEFAULT) {
     1be:	2800      	cmp	r0, #0
     1c0:	d100      	bne.n	1c4 <i2c_master_init+0xb0>
     1c2:	e0af      	b.n	324 <i2c_master_init+0x210>
	pin_conf.mux_position = pad0 & 0xFFFF;
     1c4:	ab08      	add	r3, sp, #32
     1c6:	7018      	strb	r0, [r3, #0]
	pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK;
     1c8:	2302      	movs	r3, #2
     1ca:	aa08      	add	r2, sp, #32
     1cc:	7053      	strb	r3, [r2, #1]
	system_pinmux_pin_set_config(pad0 >> 16, &pin_conf);
     1ce:	0c00      	lsrs	r0, r0, #16
     1d0:	b2c0      	uxtb	r0, r0
     1d2:	0011      	movs	r1, r2
     1d4:	4b7d      	ldr	r3, [pc, #500]	; (3cc <i2c_master_init+0x2b8>)
     1d6:	4798      	blx	r3
	if (pad1 == PINMUX_DEFAULT) {
     1d8:	2f00      	cmp	r7, #0
     1da:	d100      	bne.n	1de <i2c_master_init+0xca>
     1dc:	e0a7      	b.n	32e <i2c_master_init+0x21a>
	pin_conf.mux_position = pad1 & 0xFFFF;
     1de:	ab08      	add	r3, sp, #32
     1e0:	701f      	strb	r7, [r3, #0]
	pin_conf.direction    = SYSTEM_PINMUX_PIN_DIR_OUTPUT_WITH_READBACK;
     1e2:	2302      	movs	r3, #2
     1e4:	aa08      	add	r2, sp, #32
     1e6:	7053      	strb	r3, [r2, #1]
	system_pinmux_pin_set_config(pad1 >> 16, &pin_conf);
     1e8:	0c3f      	lsrs	r7, r7, #16
     1ea:	b2f8      	uxtb	r0, r7
     1ec:	0011      	movs	r1, r2
     1ee:	4b77      	ldr	r3, [pc, #476]	; (3cc <i2c_master_init+0x2b8>)
     1f0:	4798      	blx	r3
	module->unknown_bus_state_timeout = config->unknown_bus_state_timeout;
     1f2:	8aa3      	ldrh	r3, [r4, #20]
     1f4:	80f3      	strh	r3, [r6, #6]
	module->buffer_timeout = config->buffer_timeout;
     1f6:	8ae3      	ldrh	r3, [r4, #22]
     1f8:	8133      	strh	r3, [r6, #8]
	if (config->run_in_standby || system_is_debugger_present()) {
     1fa:	7e23      	ldrb	r3, [r4, #24]
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
     1fc:	2280      	movs	r2, #128	; 0x80
	if (config->run_in_standby || system_is_debugger_present()) {
     1fe:	2b00      	cmp	r3, #0
     200:	d104      	bne.n	20c <i2c_master_init+0xf8>
 * \retval false Debugger is not connected to the system
 *
 */
static inline bool system_is_debugger_present(void)
{
	return DSU->STATUSB.reg & DSU_STATUSB_DBGPRES;
     202:	4b73      	ldr	r3, [pc, #460]	; (3d0 <i2c_master_init+0x2bc>)
     204:	789b      	ldrb	r3, [r3, #2]
     206:	079b      	lsls	r3, r3, #30
		tmp_ctrla = SERCOM_I2CM_CTRLA_RUNSTDBY;
     208:	0fdb      	lsrs	r3, r3, #31
     20a:	01da      	lsls	r2, r3, #7
	tmp_ctrla |= config->transfer_speed;
     20c:	68a1      	ldr	r1, [r4, #8]
     20e:	6923      	ldr	r3, [r4, #16]
     210:	430b      	orrs	r3, r1
     212:	4313      	orrs	r3, r2
	if (config->scl_low_timeout) {
     214:	2224      	movs	r2, #36	; 0x24
     216:	5ca2      	ldrb	r2, [r4, r2]
     218:	2a00      	cmp	r2, #0
     21a:	d002      	beq.n	222 <i2c_master_init+0x10e>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_LOWTOUTEN;
     21c:	2280      	movs	r2, #128	; 0x80
     21e:	05d2      	lsls	r2, r2, #23
     220:	4313      	orrs	r3, r2
		tmp_ctrla |= config->inactive_timeout;
     222:	6aa2      	ldr	r2, [r4, #40]	; 0x28
     224:	4313      	orrs	r3, r2
	if (config->scl_stretch_only_after_ack_bit || (config->transfer_speed == I2C_MASTER_SPEED_HIGH_SPEED)) {
     226:	222c      	movs	r2, #44	; 0x2c
     228:	5ca2      	ldrb	r2, [r4, r2]
     22a:	2a00      	cmp	r2, #0
     22c:	d103      	bne.n	236 <i2c_master_init+0x122>
     22e:	2280      	movs	r2, #128	; 0x80
     230:	0492      	lsls	r2, r2, #18
     232:	4291      	cmp	r1, r2
     234:	d102      	bne.n	23c <i2c_master_init+0x128>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_SCLSM;
     236:	2280      	movs	r2, #128	; 0x80
     238:	0512      	lsls	r2, r2, #20
     23a:	4313      	orrs	r3, r2
	if (config->slave_scl_low_extend_timeout) {
     23c:	222d      	movs	r2, #45	; 0x2d
     23e:	5ca2      	ldrb	r2, [r4, r2]
     240:	2a00      	cmp	r2, #0
     242:	d002      	beq.n	24a <i2c_master_init+0x136>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_SEXTTOEN;
     244:	2280      	movs	r2, #128	; 0x80
     246:	0412      	lsls	r2, r2, #16
     248:	4313      	orrs	r3, r2
	if (config->master_scl_low_extend_timeout) {
     24a:	222e      	movs	r2, #46	; 0x2e
     24c:	5ca2      	ldrb	r2, [r4, r2]
     24e:	2a00      	cmp	r2, #0
     250:	d002      	beq.n	258 <i2c_master_init+0x144>
		tmp_ctrla |= SERCOM_I2CM_CTRLA_MEXTTOEN;
     252:	2280      	movs	r2, #128	; 0x80
     254:	03d2      	lsls	r2, r2, #15
     256:	4313      	orrs	r3, r2
	i2c_module->CTRLA.reg |= tmp_ctrla;
     258:	4642      	mov	r2, r8
     25a:	6812      	ldr	r2, [r2, #0]
     25c:	4313      	orrs	r3, r2
     25e:	4642      	mov	r2, r8
     260:	6013      	str	r3, [r2, #0]
	i2c_module->CTRLB.reg = SERCOM_I2CM_CTRLB_SMEN;
     262:	2380      	movs	r3, #128	; 0x80
     264:	005b      	lsls	r3, r3, #1
     266:	6053      	str	r3, [r2, #4]
	uint32_t fgclk       = system_gclk_chan_get_hz(SERCOM0_GCLK_ID_CORE + sercom_index);
     268:	4648      	mov	r0, r9
     26a:	3014      	adds	r0, #20
     26c:	b2c0      	uxtb	r0, r0
     26e:	4b59      	ldr	r3, [pc, #356]	; (3d4 <i2c_master_init+0x2c0>)
     270:	4798      	blx	r3
     272:	9007      	str	r0, [sp, #28]
	uint32_t fscl        = 1000 * config->baud_rate;
     274:	23fa      	movs	r3, #250	; 0xfa
     276:	009b      	lsls	r3, r3, #2
     278:	6822      	ldr	r2, [r4, #0]
     27a:	435a      	muls	r2, r3
     27c:	4691      	mov	r9, r2
	uint32_t fscl_hs     = 1000 * config->baud_rate_high_speed;
     27e:	6863      	ldr	r3, [r4, #4]
     280:	469a      	mov	sl, r3
	tmp_baud = (int32_t)(div_ceil(
     282:	4d55      	ldr	r5, [pc, #340]	; (3d8 <i2c_master_init+0x2c4>)
     284:	47a8      	blx	r5
     286:	9000      	str	r0, [sp, #0]
     288:	9101      	str	r1, [sp, #4]
     28a:	464b      	mov	r3, r9
     28c:	0058      	lsls	r0, r3, #1
     28e:	47a8      	blx	r5
     290:	9002      	str	r0, [sp, #8]
     292:	9103      	str	r1, [sp, #12]
     294:	8e20      	ldrh	r0, [r4, #48]	; 0x30
     296:	47a8      	blx	r5
     298:	9004      	str	r0, [sp, #16]
     29a:	9105      	str	r1, [sp, #20]
     29c:	4f4f      	ldr	r7, [pc, #316]	; (3dc <i2c_master_init+0x2c8>)
     29e:	4a50      	ldr	r2, [pc, #320]	; (3e0 <i2c_master_init+0x2cc>)
     2a0:	4b50      	ldr	r3, [pc, #320]	; (3e4 <i2c_master_init+0x2d0>)
     2a2:	9800      	ldr	r0, [sp, #0]
     2a4:	9901      	ldr	r1, [sp, #4]
     2a6:	47b8      	blx	r7
     2a8:	0002      	movs	r2, r0
     2aa:	000b      	movs	r3, r1
     2ac:	9804      	ldr	r0, [sp, #16]
     2ae:	9905      	ldr	r1, [sp, #20]
     2b0:	47b8      	blx	r7
     2b2:	4e4d      	ldr	r6, [pc, #308]	; (3e8 <i2c_master_init+0x2d4>)
     2b4:	2200      	movs	r2, #0
     2b6:	4b4d      	ldr	r3, [pc, #308]	; (3ec <i2c_master_init+0x2d8>)
     2b8:	47b0      	blx	r6
     2ba:	9004      	str	r0, [sp, #16]
     2bc:	9105      	str	r1, [sp, #20]
     2be:	4648      	mov	r0, r9
     2c0:	47a8      	blx	r5
     2c2:	0002      	movs	r2, r0
     2c4:	000b      	movs	r3, r1
     2c6:	9804      	ldr	r0, [sp, #16]
     2c8:	9905      	ldr	r1, [sp, #20]
     2ca:	47b8      	blx	r7
     2cc:	0002      	movs	r2, r0
     2ce:	000b      	movs	r3, r1
     2d0:	4d47      	ldr	r5, [pc, #284]	; (3f0 <i2c_master_init+0x2dc>)
     2d2:	9800      	ldr	r0, [sp, #0]
     2d4:	9901      	ldr	r1, [sp, #4]
     2d6:	47a8      	blx	r5
     2d8:	9a02      	ldr	r2, [sp, #8]
     2da:	9b03      	ldr	r3, [sp, #12]
     2dc:	47b0      	blx	r6
     2de:	2200      	movs	r2, #0
     2e0:	4b44      	ldr	r3, [pc, #272]	; (3f4 <i2c_master_init+0x2e0>)
     2e2:	47a8      	blx	r5
     2e4:	9a02      	ldr	r2, [sp, #8]
     2e6:	9b03      	ldr	r3, [sp, #12]
     2e8:	4d43      	ldr	r5, [pc, #268]	; (3f8 <i2c_master_init+0x2e4>)
     2ea:	47a8      	blx	r5
     2ec:	4b43      	ldr	r3, [pc, #268]	; (3fc <i2c_master_init+0x2e8>)
     2ee:	4798      	blx	r3
     2f0:	0005      	movs	r5, r0
	if (config->transfer_speed == I2C_MASTER_SPEED_HIGH_SPEED) {
     2f2:	2380      	movs	r3, #128	; 0x80
     2f4:	049b      	lsls	r3, r3, #18
     2f6:	68a2      	ldr	r2, [r4, #8]
     2f8:	429a      	cmp	r2, r3
     2fa:	d01e      	beq.n	33a <i2c_master_init+0x226>
	if (tmp_baud > 255 || tmp_baud < 0 || tmp_baud_hs > 255 || tmp_baud_hs < 0) {
     2fc:	0003      	movs	r3, r0
     2fe:	2040      	movs	r0, #64	; 0x40
     300:	2dff      	cmp	r5, #255	; 0xff
     302:	d900      	bls.n	306 <i2c_master_init+0x1f2>
     304:	e72d      	b.n	162 <i2c_master_init+0x4e>
	int32_t tmp_baudlow_hs = 0;
     306:	2400      	movs	r4, #0
	int32_t tmp_baud_hs = 0;
     308:	2000      	movs	r0, #0
		i2c_module->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud) |
     30a:	25ff      	movs	r5, #255	; 0xff
     30c:	401d      	ands	r5, r3
			SERCOM_I2CM_BAUD_HSBAUD(tmp_baud_hs) | SERCOM_I2CM_BAUD_HSBAUDLOW(tmp_baudlow_hs);
     30e:	0624      	lsls	r4, r4, #24
     310:	4325      	orrs	r5, r4
     312:	0400      	lsls	r0, r0, #16
     314:	23ff      	movs	r3, #255	; 0xff
     316:	041b      	lsls	r3, r3, #16
     318:	4018      	ands	r0, r3
     31a:	4305      	orrs	r5, r0
		i2c_module->BAUD.reg = SERCOM_I2CM_BAUD_BAUD(tmp_baud) |
     31c:	4643      	mov	r3, r8
     31e:	60dd      	str	r5, [r3, #12]
	enum status_code tmp_status_code = STATUS_OK;
     320:	2000      	movs	r0, #0
     322:	e71e      	b.n	162 <i2c_master_init+0x4e>
		pad0 = _sercom_get_default_pad(sercom_hw, 0);
     324:	2100      	movs	r1, #0
     326:	4640      	mov	r0, r8
     328:	4b35      	ldr	r3, [pc, #212]	; (400 <i2c_master_init+0x2ec>)
     32a:	4798      	blx	r3
     32c:	e74a      	b.n	1c4 <i2c_master_init+0xb0>
		pad1 = _sercom_get_default_pad(sercom_hw, 1);
     32e:	2101      	movs	r1, #1
     330:	4640      	mov	r0, r8
     332:	4b33      	ldr	r3, [pc, #204]	; (400 <i2c_master_init+0x2ec>)
     334:	4798      	blx	r3
     336:	0007      	movs	r7, r0
     338:	e751      	b.n	1de <i2c_master_init+0xca>
	uint32_t fscl_hs     = 1000 * config->baud_rate_high_speed;
     33a:	26fa      	movs	r6, #250	; 0xfa
     33c:	00b6      	lsls	r6, r6, #2
     33e:	4653      	mov	r3, sl
     340:	435e      	muls	r6, r3
		tmp_baudlow_hs = (int32_t)((fgclk * 2.0) / (3.0 * fscl_hs) - 1);
     342:	9800      	ldr	r0, [sp, #0]
     344:	9901      	ldr	r1, [sp, #4]
     346:	0002      	movs	r2, r0
     348:	000b      	movs	r3, r1
     34a:	4c27      	ldr	r4, [pc, #156]	; (3e8 <i2c_master_init+0x2d4>)
     34c:	47a0      	blx	r4
     34e:	9000      	str	r0, [sp, #0]
     350:	9101      	str	r1, [sp, #4]
     352:	0030      	movs	r0, r6
     354:	4b20      	ldr	r3, [pc, #128]	; (3d8 <i2c_master_init+0x2c4>)
     356:	4798      	blx	r3
     358:	2200      	movs	r2, #0
     35a:	4b2a      	ldr	r3, [pc, #168]	; (404 <i2c_master_init+0x2f0>)
     35c:	47b8      	blx	r7
     35e:	0002      	movs	r2, r0
     360:	000b      	movs	r3, r1
     362:	9800      	ldr	r0, [sp, #0]
     364:	9901      	ldr	r1, [sp, #4]
     366:	4c24      	ldr	r4, [pc, #144]	; (3f8 <i2c_master_init+0x2e4>)
     368:	47a0      	blx	r4
     36a:	2200      	movs	r2, #0
     36c:	4b21      	ldr	r3, [pc, #132]	; (3f4 <i2c_master_init+0x2e0>)
     36e:	4c20      	ldr	r4, [pc, #128]	; (3f0 <i2c_master_init+0x2dc>)
     370:	47a0      	blx	r4
     372:	4b22      	ldr	r3, [pc, #136]	; (3fc <i2c_master_init+0x2e8>)
     374:	4798      	blx	r3
     376:	1e04      	subs	r4, r0, #0
		if (tmp_baudlow_hs) {
     378:	d00c      	beq.n	394 <i2c_master_init+0x280>
			tmp_baud_hs = (int32_t)(fgclk / fscl_hs) - 2 - tmp_baudlow_hs;
     37a:	0031      	movs	r1, r6
     37c:	9807      	ldr	r0, [sp, #28]
     37e:	4b22      	ldr	r3, [pc, #136]	; (408 <i2c_master_init+0x2f4>)
     380:	4798      	blx	r3
     382:	3802      	subs	r0, #2
     384:	1b00      	subs	r0, r0, r4
	if (tmp_baud > 255 || tmp_baud < 0 || tmp_baud_hs > 255 || tmp_baud_hs < 0) {
     386:	002b      	movs	r3, r5
     388:	2dff      	cmp	r5, #255	; 0xff
     38a:	d80c      	bhi.n	3a6 <i2c_master_init+0x292>
     38c:	28ff      	cmp	r0, #255	; 0xff
     38e:	d9bc      	bls.n	30a <i2c_master_init+0x1f6>
     390:	2040      	movs	r0, #64	; 0x40
     392:	e6e6      	b.n	162 <i2c_master_init+0x4e>
			tmp_baud_hs = (int32_t)(div_ceil(fgclk, 2 * fscl_hs)) - 1;
     394:	0071      	lsls	r1, r6, #1
     396:	1e48      	subs	r0, r1, #1
     398:	9b07      	ldr	r3, [sp, #28]
     39a:	469c      	mov	ip, r3
     39c:	4460      	add	r0, ip
     39e:	4b1a      	ldr	r3, [pc, #104]	; (408 <i2c_master_init+0x2f4>)
     3a0:	4798      	blx	r3
     3a2:	3801      	subs	r0, #1
     3a4:	e7ef      	b.n	386 <i2c_master_init+0x272>
	if (tmp_baud > 255 || tmp_baud < 0 || tmp_baud_hs > 255 || tmp_baud_hs < 0) {
     3a6:	2040      	movs	r0, #64	; 0x40
     3a8:	e6db      	b.n	162 <i2c_master_init+0x4e>
     3aa:	46c0      	nop			; (mov r8, r8)
     3ac:	00000b1d 	.word	0x00000b1d
     3b0:	40000400 	.word	0x40000400
     3b4:	000010dd 	.word	0x000010dd
     3b8:	00001051 	.word	0x00001051
     3bc:	00000959 	.word	0x00000959
     3c0:	000004dd 	.word	0x000004dd
     3c4:	00000b59 	.word	0x00000b59
     3c8:	200000f0 	.word	0x200000f0
     3cc:	000011d5 	.word	0x000011d5
     3d0:	41002000 	.word	0x41002000
     3d4:	000010f9 	.word	0x000010f9
     3d8:	00003051 	.word	0x00003051
     3dc:	000024bd 	.word	0x000024bd
     3e0:	e826d695 	.word	0xe826d695
     3e4:	3e112e0b 	.word	0x3e112e0b
     3e8:	00001835 	.word	0x00001835
     3ec:	40240000 	.word	0x40240000
     3f0:	000029bd 	.word	0x000029bd
     3f4:	3ff00000 	.word	0x3ff00000
     3f8:	00001e55 	.word	0x00001e55
     3fc:	00002fe9 	.word	0x00002fe9
     400:	000009a5 	.word	0x000009a5
     404:	40080000 	.word	0x40080000
     408:	0000171d 	.word	0x0000171d

0000040c <_i2c_master_wait_for_sync>:
{
	/* Sanity check */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_hw = &(module->hw->I2CM);
     40c:	6801      	ldr	r1, [r0, #0]

#if defined(FEATURE_SERCOM_SYNCBUSY_SCHEME_VERSION_1)
	return (i2c_hw->STATUS.reg & SERCOM_I2CM_STATUS_SYNCBUSY);
#elif defined(FEATURE_SERCOM_SYNCBUSY_SCHEME_VERSION_2)
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
     40e:	2207      	movs	r2, #7
     410:	69cb      	ldr	r3, [r1, #28]
		const struct i2c_master_module *const module)
{
	/* Sanity check */
	Assert(module);

	while (i2c_master_is_syncing(module)) {
     412:	421a      	tst	r2, r3
     414:	d1fc      	bne.n	410 <_i2c_master_wait_for_sync+0x4>
		/* Wait for I2C module to sync. */
	}
}
     416:	4770      	bx	lr

00000418 <_i2c_master_read>:
 *
 * \param[in,out] module  Pointer to software module structure
 */
static void _i2c_master_read(
		struct i2c_master_module *const module)
{
     418:	b570      	push	{r4, r5, r6, lr}
     41a:	0004      	movs	r4, r0
	/* Sanity check arguments. */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     41c:	6806      	ldr	r6, [r0, #0]
	bool sclsm_flag = i2c_module->CTRLA.bit.SCLSM;
     41e:	6832      	ldr	r2, [r6, #0]

	/* Find index to save next value in buffer */
	uint16_t buffer_index = module->buffer_length;
     420:	8b45      	ldrh	r5, [r0, #26]
	buffer_index -= module->buffer_remaining;
     422:	8b83      	ldrh	r3, [r0, #28]
     424:	1aed      	subs	r5, r5, r3
     426:	b2ad      	uxth	r5, r5

	module->buffer_remaining--;
     428:	8b83      	ldrh	r3, [r0, #28]
     42a:	3b01      	subs	r3, #1
     42c:	b29b      	uxth	r3, r3
     42e:	8383      	strh	r3, [r0, #28]

	if (sclsm_flag) {
     430:	0113      	lsls	r3, r2, #4
     432:	d51d      	bpl.n	470 <_i2c_master_read+0x58>
		if (module->send_nack && module->buffer_remaining == 1) {
     434:	7ac3      	ldrb	r3, [r0, #11]
     436:	2b00      	cmp	r3, #0
     438:	d003      	beq.n	442 <_i2c_master_read+0x2a>
     43a:	8b83      	ldrh	r3, [r0, #28]
     43c:	b29b      	uxth	r3, r3
     43e:	2b01      	cmp	r3, #1
     440:	d010      	beq.n	464 <_i2c_master_read+0x4c>
			/* Set action to NACK. */
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
		}
	}

	if (module->buffer_remaining == 0) {
     442:	8ba3      	ldrh	r3, [r4, #28]
     444:	b29b      	uxth	r3, r3
     446:	2b00      	cmp	r3, #0
     448:	d102      	bne.n	450 <_i2c_master_read+0x38>
		if (module->send_stop) {
     44a:	7aa3      	ldrb	r3, [r4, #10]
     44c:	2b00      	cmp	r3, #0
     44e:	d11c      	bne.n	48a <_i2c_master_read+0x72>
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
		}
	}
	
	/* Read byte from slave and put in buffer */
	_i2c_master_wait_for_sync(module);
     450:	0020      	movs	r0, r4
     452:	4b12      	ldr	r3, [pc, #72]	; (49c <_i2c_master_read+0x84>)
     454:	4798      	blx	r3
	module->buffer[buffer_index] = i2c_module->DATA.reg;
     456:	6a23      	ldr	r3, [r4, #32]
     458:	195d      	adds	r5, r3, r5
     45a:	2328      	movs	r3, #40	; 0x28
     45c:	5cf3      	ldrb	r3, [r6, r3]
     45e:	b2db      	uxtb	r3, r3
     460:	702b      	strb	r3, [r5, #0]
}
     462:	bd70      	pop	{r4, r5, r6, pc}
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     464:	6872      	ldr	r2, [r6, #4]
     466:	2380      	movs	r3, #128	; 0x80
     468:	02db      	lsls	r3, r3, #11
     46a:	4313      	orrs	r3, r2
     46c:	6073      	str	r3, [r6, #4]
     46e:	e7e8      	b.n	442 <_i2c_master_read+0x2a>
		if (module->send_nack && module->buffer_remaining == 0) {
     470:	7ac3      	ldrb	r3, [r0, #11]
     472:	2b00      	cmp	r3, #0
     474:	d0e5      	beq.n	442 <_i2c_master_read+0x2a>
     476:	8b83      	ldrh	r3, [r0, #28]
     478:	b29b      	uxth	r3, r3
     47a:	2b00      	cmp	r3, #0
     47c:	d1e1      	bne.n	442 <_i2c_master_read+0x2a>
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT;
     47e:	6872      	ldr	r2, [r6, #4]
     480:	2380      	movs	r3, #128	; 0x80
     482:	02db      	lsls	r3, r3, #11
     484:	4313      	orrs	r3, r2
     486:	6073      	str	r3, [r6, #4]
     488:	e7db      	b.n	442 <_i2c_master_read+0x2a>
			_i2c_master_wait_for_sync(module);
     48a:	0020      	movs	r0, r4
     48c:	4b03      	ldr	r3, [pc, #12]	; (49c <_i2c_master_read+0x84>)
     48e:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     490:	6872      	ldr	r2, [r6, #4]
     492:	23c0      	movs	r3, #192	; 0xc0
     494:	029b      	lsls	r3, r3, #10
     496:	4313      	orrs	r3, r2
     498:	6073      	str	r3, [r6, #4]
     49a:	e7d9      	b.n	450 <_i2c_master_read+0x38>
     49c:	0000040d 	.word	0x0000040d

000004a0 <_i2c_master_write>:
 * Write next data. Used by interrupt handler to send next data byte to slave.
 *
 * \param[in,out] module  Pointer to software module structure
 */
static void _i2c_master_write(struct i2c_master_module *const module)
{
     4a0:	b570      	push	{r4, r5, r6, lr}
     4a2:	0004      	movs	r4, r0
	/* Sanity check arguments. */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     4a4:	6805      	ldr	r5, [r0, #0]

	/* Check for ack from slave */
	if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK)
     4a6:	8b6b      	ldrh	r3, [r5, #26]
     4a8:	075b      	lsls	r3, r3, #29
     4aa:	d503      	bpl.n	4b4 <_i2c_master_write+0x14>
	{
		/* Set status */
		module->status = STATUS_ERR_OVERFLOW;
     4ac:	221e      	movs	r2, #30
     4ae:	2325      	movs	r3, #37	; 0x25
     4b0:	54c2      	strb	r2, [r0, r3]
	module->buffer_remaining--;

	/* Write byte from buffer to slave */
	_i2c_master_wait_for_sync(module);
	i2c_module->DATA.reg = module->buffer[buffer_index];
}
     4b2:	bd70      	pop	{r4, r5, r6, pc}
	uint16_t buffer_index = module->buffer_length;
     4b4:	8b46      	ldrh	r6, [r0, #26]
	buffer_index -= module->buffer_remaining;
     4b6:	8b83      	ldrh	r3, [r0, #28]
     4b8:	1af6      	subs	r6, r6, r3
     4ba:	b2b6      	uxth	r6, r6
	module->buffer_remaining--;
     4bc:	8b83      	ldrh	r3, [r0, #28]
     4be:	3b01      	subs	r3, #1
     4c0:	b29b      	uxth	r3, r3
     4c2:	8383      	strh	r3, [r0, #28]
	_i2c_master_wait_for_sync(module);
     4c4:	4b04      	ldr	r3, [pc, #16]	; (4d8 <_i2c_master_write+0x38>)
     4c6:	4798      	blx	r3
	i2c_module->DATA.reg = module->buffer[buffer_index];
     4c8:	6a23      	ldr	r3, [r4, #32]
     4ca:	199e      	adds	r6, r3, r6
     4cc:	7833      	ldrb	r3, [r6, #0]
     4ce:	b2db      	uxtb	r3, r3
     4d0:	2228      	movs	r2, #40	; 0x28
     4d2:	54ab      	strb	r3, [r5, r2]
     4d4:	e7ed      	b.n	4b2 <_i2c_master_write+0x12>
     4d6:	46c0      	nop			; (mov r8, r8)
     4d8:	0000040d 	.word	0x0000040d

000004dc <_i2c_master_interrupt_handler>:
 *
 * \param[in] instance  SERCOM instance that triggered the interrupt
 */
void _i2c_master_interrupt_handler(
		uint8_t instance)
{
     4dc:	b570      	push	{r4, r5, r6, lr}
	/* Get software module for callback handling */
	struct i2c_master_module *module =
     4de:	0080      	lsls	r0, r0, #2
     4e0:	4b75      	ldr	r3, [pc, #468]	; (6b8 <_i2c_master_interrupt_handler+0x1dc>)
     4e2:	58c4      	ldr	r4, [r0, r3]
			(struct i2c_master_module*)_sercom_instances[instance];

	Assert(module);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
     4e4:	6825      	ldr	r5, [r4, #0]
	bool sclsm_flag = i2c_module->CTRLA.bit.SCLSM;
     4e6:	682b      	ldr	r3, [r5, #0]
     4e8:	011b      	lsls	r3, r3, #4
     4ea:	0fda      	lsrs	r2, r3, #31

	/* Combine callback registered and enabled masks */
	uint8_t callback_mask = module->enabled_callback;
     4ec:	7e63      	ldrb	r3, [r4, #25]
	callback_mask &= module->registered_callback;
     4ee:	7e26      	ldrb	r6, [r4, #24]
     4f0:	401e      	ands	r6, r3

	/* Check if the module should respond to address ack */
	if ((module->buffer_length <= 0) && (module->buffer_remaining > 0)) {
     4f2:	8b63      	ldrh	r3, [r4, #26]
     4f4:	b29b      	uxth	r3, r3
     4f6:	2b00      	cmp	r3, #0
     4f8:	d103      	bne.n	502 <_i2c_master_interrupt_handler+0x26>
     4fa:	8ba3      	ldrh	r3, [r4, #28]
     4fc:	b29b      	uxth	r3, r3
     4fe:	2b00      	cmp	r3, #0
     500:	d123      	bne.n	54a <_i2c_master_interrupt_handler+0x6e>
		/* Call function for address response */
		_i2c_master_async_address_response(module);

	/* Check if buffer write is done */
	} else if ((module->buffer_length > 0) && (module->buffer_remaining <= 0) &&
     502:	8b63      	ldrh	r3, [r4, #26]
     504:	b29b      	uxth	r3, r3
     506:	2b00      	cmp	r3, #0
     508:	d008      	beq.n	51c <_i2c_master_interrupt_handler+0x40>
     50a:	8ba3      	ldrh	r3, [r4, #28]
     50c:	b29b      	uxth	r3, r3
     50e:	2b00      	cmp	r3, #0
     510:	d104      	bne.n	51c <_i2c_master_interrupt_handler+0x40>
			(module->status == STATUS_BUSY) &&
     512:	3325      	adds	r3, #37	; 0x25
     514:	5ce3      	ldrb	r3, [r4, r3]
	} else if ((module->buffer_length > 0) && (module->buffer_remaining <= 0) &&
     516:	2b05      	cmp	r3, #5
     518:	d100      	bne.n	51c <_i2c_master_interrupt_handler+0x40>
     51a:	e06d      	b.n	5f8 <_i2c_master_interrupt_handler+0x11c>
		if (callback_mask & (1 << I2C_MASTER_CALLBACK_WRITE_COMPLETE)) {
			module->callbacks[I2C_MASTER_CALLBACK_WRITE_COMPLETE](module);
		}

	/* Continue buffer write/read */
	} else if ((module->buffer_length > 0) && (module->buffer_remaining > 0)){
     51c:	8b63      	ldrh	r3, [r4, #26]
     51e:	b29b      	uxth	r3, r3
     520:	2b00      	cmp	r3, #0
     522:	d024      	beq.n	56e <_i2c_master_interrupt_handler+0x92>
     524:	8ba3      	ldrh	r3, [r4, #28]
     526:	b29b      	uxth	r3, r3
     528:	2b00      	cmp	r3, #0
     52a:	d020      	beq.n	56e <_i2c_master_interrupt_handler+0x92>
		/* Check that bus ownership is not lost */
		if ((!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(2))) &&
     52c:	8b6b      	ldrh	r3, [r5, #26]
     52e:	069b      	lsls	r3, r3, #26
     530:	d500      	bpl.n	534 <_i2c_master_interrupt_handler+0x58>
     532:	e081      	b.n	638 <_i2c_master_interrupt_handler+0x15c>
     534:	2a00      	cmp	r2, #0
     536:	d004      	beq.n	542 <_i2c_master_interrupt_handler+0x66>
				(!(sclsm_flag && (module->buffer_remaining == 1))))	{
     538:	8ba3      	ldrh	r3, [r4, #28]
     53a:	b29b      	uxth	r3, r3
     53c:	2b01      	cmp	r3, #1
     53e:	d100      	bne.n	542 <_i2c_master_interrupt_handler+0x66>
     540:	e07a      	b.n	638 <_i2c_master_interrupt_handler+0x15c>
			module->status = STATUS_ERR_PACKET_COLLISION;
     542:	2241      	movs	r2, #65	; 0x41
     544:	2325      	movs	r3, #37	; 0x25
     546:	54e2      	strb	r2, [r4, r3]
     548:	e011      	b.n	56e <_i2c_master_interrupt_handler+0x92>
	if (i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_MB)
     54a:	7e2b      	ldrb	r3, [r5, #24]
     54c:	07db      	lsls	r3, r3, #31
     54e:	d507      	bpl.n	560 <_i2c_master_interrupt_handler+0x84>
		i2c_module->INTFLAG.reg = SERCOM_I2CM_INTENCLR_MB;
     550:	2301      	movs	r3, #1
     552:	762b      	strb	r3, [r5, #24]
		if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_ARBLOST) {
     554:	8b6b      	ldrh	r3, [r5, #26]
     556:	079b      	lsls	r3, r3, #30
     558:	d52e      	bpl.n	5b8 <_i2c_master_interrupt_handler+0xdc>
			module->status = STATUS_ERR_PACKET_COLLISION;
     55a:	2241      	movs	r2, #65	; 0x41
     55c:	2325      	movs	r3, #37	; 0x25
     55e:	54e2      	strb	r2, [r4, r3]
	module->buffer_length = module->buffer_remaining;
     560:	8ba3      	ldrh	r3, [r4, #28]
     562:	b29b      	uxth	r3, r3
     564:	8363      	strh	r3, [r4, #26]
	if (module->status == STATUS_BUSY) {
     566:	2325      	movs	r3, #37	; 0x25
     568:	5ce3      	ldrb	r3, [r4, r3]
     56a:	2b05      	cmp	r3, #5
     56c:	d038      	beq.n	5e0 <_i2c_master_interrupt_handler+0x104>
			_i2c_master_read(module);
		}
	}

	/* Check if read buffer transfer is complete */
	if ((module->buffer_length > 0) && (module->buffer_remaining <= 0) &&
     56e:	8b63      	ldrh	r3, [r4, #26]
     570:	b29b      	uxth	r3, r3
     572:	2b00      	cmp	r3, #0
     574:	d007      	beq.n	586 <_i2c_master_interrupt_handler+0xaa>
     576:	8ba3      	ldrh	r3, [r4, #28]
     578:	b29b      	uxth	r3, r3
     57a:	2b00      	cmp	r3, #0
     57c:	d103      	bne.n	586 <_i2c_master_interrupt_handler+0xaa>
			(module->status == STATUS_BUSY) &&
     57e:	3325      	adds	r3, #37	; 0x25
     580:	5ce3      	ldrb	r3, [r4, r3]
	if ((module->buffer_length > 0) && (module->buffer_remaining <= 0) &&
     582:	2b05      	cmp	r3, #5
     584:	d064      	beq.n	650 <_i2c_master_interrupt_handler+0x174>
			module->callbacks[I2C_MASTER_CALLBACK_WRITE_COMPLETE](module);
		}
	}

	/* Check for error */
	if ((module->status != STATUS_BUSY) && (module->status != STATUS_OK)) {
     586:	2325      	movs	r3, #37	; 0x25
     588:	5ce3      	ldrb	r3, [r4, r3]
     58a:	2b05      	cmp	r3, #5
     58c:	d013      	beq.n	5b6 <_i2c_master_interrupt_handler+0xda>
     58e:	2325      	movs	r3, #37	; 0x25
     590:	5ce3      	ldrb	r3, [r4, r3]
     592:	2b00      	cmp	r3, #0
     594:	d00f      	beq.n	5b6 <_i2c_master_interrupt_handler+0xda>
		/* Stop packet operation */
		i2c_module->INTENCLR.reg = SERCOM_I2CM_INTENCLR_MB |
     596:	2303      	movs	r3, #3
     598:	752b      	strb	r3, [r5, #20]
				SERCOM_I2CM_INTENCLR_SB;

		module->buffer_length = 0;
     59a:	2300      	movs	r3, #0
     59c:	8363      	strh	r3, [r4, #26]
		module->buffer_remaining = 0;
     59e:	83a3      	strh	r3, [r4, #28]

		/* Send nack and stop command unless arbitration is lost */
		if ((module->status != STATUS_ERR_PACKET_COLLISION) &&
     5a0:	3325      	adds	r3, #37	; 0x25
     5a2:	5ce3      	ldrb	r3, [r4, r3]
     5a4:	2b41      	cmp	r3, #65	; 0x41
     5a6:	d003      	beq.n	5b0 <_i2c_master_interrupt_handler+0xd4>
     5a8:	7aa3      	ldrb	r3, [r4, #10]
     5aa:	2b00      	cmp	r3, #0
     5ac:	d000      	beq.n	5b0 <_i2c_master_interrupt_handler+0xd4>
     5ae:	e075      	b.n	69c <_i2c_master_interrupt_handler+0x1c0>
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT |
					SERCOM_I2CM_CTRLB_CMD(3);
		}

		/* Call error callback if enabled and registered */
		if (callback_mask & (1 << I2C_MASTER_CALLBACK_ERROR)) {
     5b0:	0773      	lsls	r3, r6, #29
     5b2:	d500      	bpl.n	5b6 <_i2c_master_interrupt_handler+0xda>
     5b4:	e07b      	b.n	6ae <_i2c_master_interrupt_handler+0x1d2>
			module->callbacks[I2C_MASTER_CALLBACK_ERROR](module);
		}
	}
}
     5b6:	bd70      	pop	{r4, r5, r6, pc}
		else if (i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_RXNACK) {
     5b8:	8b6b      	ldrh	r3, [r5, #26]
     5ba:	075b      	lsls	r3, r3, #29
     5bc:	d5d0      	bpl.n	560 <_i2c_master_interrupt_handler+0x84>
			module->status           = STATUS_ERR_BAD_ADDRESS;
     5be:	2218      	movs	r2, #24
     5c0:	2325      	movs	r3, #37	; 0x25
     5c2:	54e2      	strb	r2, [r4, r3]
			module->buffer_remaining = 0;
     5c4:	2300      	movs	r3, #0
     5c6:	83a3      	strh	r3, [r4, #28]
			if (module->send_stop) {
     5c8:	7aa3      	ldrb	r3, [r4, #10]
     5ca:	2b00      	cmp	r3, #0
     5cc:	d0c8      	beq.n	560 <_i2c_master_interrupt_handler+0x84>
				_i2c_master_wait_for_sync(module);
     5ce:	0020      	movs	r0, r4
     5d0:	4b3a      	ldr	r3, [pc, #232]	; (6bc <_i2c_master_interrupt_handler+0x1e0>)
     5d2:	4798      	blx	r3
				i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     5d4:	686a      	ldr	r2, [r5, #4]
     5d6:	23c0      	movs	r3, #192	; 0xc0
     5d8:	029b      	lsls	r3, r3, #10
     5da:	4313      	orrs	r3, r2
     5dc:	606b      	str	r3, [r5, #4]
     5de:	e7bf      	b.n	560 <_i2c_master_interrupt_handler+0x84>
		if (module->transfer_direction == I2C_TRANSFER_WRITE) {
     5e0:	331f      	adds	r3, #31
     5e2:	5ce3      	ldrb	r3, [r4, r3]
     5e4:	2b00      	cmp	r3, #0
     5e6:	d003      	beq.n	5f0 <_i2c_master_interrupt_handler+0x114>
			_i2c_master_read(module);
     5e8:	0020      	movs	r0, r4
     5ea:	4b35      	ldr	r3, [pc, #212]	; (6c0 <_i2c_master_interrupt_handler+0x1e4>)
     5ec:	4798      	blx	r3
     5ee:	e7be      	b.n	56e <_i2c_master_interrupt_handler+0x92>
			_i2c_master_write(module);
     5f0:	0020      	movs	r0, r4
     5f2:	4b34      	ldr	r3, [pc, #208]	; (6c4 <_i2c_master_interrupt_handler+0x1e8>)
     5f4:	4798      	blx	r3
     5f6:	e7ba      	b.n	56e <_i2c_master_interrupt_handler+0x92>
			(module->transfer_direction == I2C_TRANSFER_WRITE)) {
     5f8:	331f      	adds	r3, #31
     5fa:	5ce3      	ldrb	r3, [r4, r3]
			(module->status == STATUS_BUSY) &&
     5fc:	2b00      	cmp	r3, #0
     5fe:	d000      	beq.n	602 <_i2c_master_interrupt_handler+0x126>
     600:	e78c      	b.n	51c <_i2c_master_interrupt_handler+0x40>
		i2c_module->INTENCLR.reg =
     602:	3303      	adds	r3, #3
     604:	752b      	strb	r3, [r5, #20]
		module->buffer_length = 0;
     606:	2300      	movs	r3, #0
     608:	8363      	strh	r3, [r4, #26]
		module->status        = STATUS_OK;
     60a:	3325      	adds	r3, #37	; 0x25
     60c:	2200      	movs	r2, #0
     60e:	54e2      	strb	r2, [r4, r3]
		if (module->send_stop) {
     610:	7aa3      	ldrb	r3, [r4, #10]
     612:	2b00      	cmp	r3, #0
     614:	d107      	bne.n	626 <_i2c_master_interrupt_handler+0x14a>
			i2c_module->INTFLAG.reg = SERCOM_I2CM_INTFLAG_MB;
     616:	2301      	movs	r3, #1
     618:	762b      	strb	r3, [r5, #24]
		if (callback_mask & (1 << I2C_MASTER_CALLBACK_WRITE_COMPLETE)) {
     61a:	07f3      	lsls	r3, r6, #31
     61c:	d5a7      	bpl.n	56e <_i2c_master_interrupt_handler+0x92>
			module->callbacks[I2C_MASTER_CALLBACK_WRITE_COMPLETE](module);
     61e:	68e3      	ldr	r3, [r4, #12]
     620:	0020      	movs	r0, r4
     622:	4798      	blx	r3
     624:	e7a3      	b.n	56e <_i2c_master_interrupt_handler+0x92>
			_i2c_master_wait_for_sync(module);
     626:	0020      	movs	r0, r4
     628:	4b24      	ldr	r3, [pc, #144]	; (6bc <_i2c_master_interrupt_handler+0x1e0>)
     62a:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_CMD(3);
     62c:	686a      	ldr	r2, [r5, #4]
     62e:	23c0      	movs	r3, #192	; 0xc0
     630:	029b      	lsls	r3, r3, #10
     632:	4313      	orrs	r3, r2
     634:	606b      	str	r3, [r5, #4]
     636:	e7f0      	b.n	61a <_i2c_master_interrupt_handler+0x13e>
		} else if (module->transfer_direction == I2C_TRANSFER_WRITE) {
     638:	2324      	movs	r3, #36	; 0x24
     63a:	5ce3      	ldrb	r3, [r4, r3]
     63c:	2b00      	cmp	r3, #0
     63e:	d103      	bne.n	648 <_i2c_master_interrupt_handler+0x16c>
			_i2c_master_write(module);
     640:	0020      	movs	r0, r4
     642:	4b20      	ldr	r3, [pc, #128]	; (6c4 <_i2c_master_interrupt_handler+0x1e8>)
     644:	4798      	blx	r3
     646:	e792      	b.n	56e <_i2c_master_interrupt_handler+0x92>
			_i2c_master_read(module);
     648:	0020      	movs	r0, r4
     64a:	4b1d      	ldr	r3, [pc, #116]	; (6c0 <_i2c_master_interrupt_handler+0x1e4>)
     64c:	4798      	blx	r3
     64e:	e78e      	b.n	56e <_i2c_master_interrupt_handler+0x92>
			(module->transfer_direction == I2C_TRANSFER_READ)) {
     650:	331f      	adds	r3, #31
     652:	5ce3      	ldrb	r3, [r4, r3]
			(module->status == STATUS_BUSY) &&
     654:	2b01      	cmp	r3, #1
     656:	d196      	bne.n	586 <_i2c_master_interrupt_handler+0xaa>
		if (i2c_module->INTFLAG.reg & SERCOM_I2CM_INTFLAG_SB) {
     658:	7e2b      	ldrb	r3, [r5, #24]
     65a:	079b      	lsls	r3, r3, #30
     65c:	d501      	bpl.n	662 <_i2c_master_interrupt_handler+0x186>
			i2c_module->INTFLAG.reg = SERCOM_I2CM_INTFLAG_SB;
     65e:	2302      	movs	r3, #2
     660:	762b      	strb	r3, [r5, #24]
		i2c_module->INTENCLR.reg =
     662:	2303      	movs	r3, #3
     664:	752b      	strb	r3, [r5, #20]
		module->buffer_length = 0;
     666:	2300      	movs	r3, #0
     668:	8363      	strh	r3, [r4, #26]
		module->status        = STATUS_OK;
     66a:	3325      	adds	r3, #37	; 0x25
     66c:	2200      	movs	r2, #0
     66e:	54e2      	strb	r2, [r4, r3]
		if ((callback_mask & (1 << I2C_MASTER_CALLBACK_READ_COMPLETE))
     670:	07b3      	lsls	r3, r6, #30
     672:	d503      	bpl.n	67c <_i2c_master_interrupt_handler+0x1a0>
				&& (module->transfer_direction == I2C_TRANSFER_READ)) {
     674:	2324      	movs	r3, #36	; 0x24
     676:	5ce3      	ldrb	r3, [r4, r3]
     678:	2b01      	cmp	r3, #1
     67a:	d00b      	beq.n	694 <_i2c_master_interrupt_handler+0x1b8>
		} else if ((callback_mask & (1 << I2C_MASTER_CALLBACK_WRITE_COMPLETE))
     67c:	07f3      	lsls	r3, r6, #31
     67e:	d400      	bmi.n	682 <_i2c_master_interrupt_handler+0x1a6>
     680:	e781      	b.n	586 <_i2c_master_interrupt_handler+0xaa>
				&& (module->transfer_direction == I2C_TRANSFER_WRITE)) {
     682:	2324      	movs	r3, #36	; 0x24
     684:	5ce3      	ldrb	r3, [r4, r3]
     686:	2b00      	cmp	r3, #0
     688:	d000      	beq.n	68c <_i2c_master_interrupt_handler+0x1b0>
     68a:	e77c      	b.n	586 <_i2c_master_interrupt_handler+0xaa>
			module->callbacks[I2C_MASTER_CALLBACK_WRITE_COMPLETE](module);
     68c:	68e3      	ldr	r3, [r4, #12]
     68e:	0020      	movs	r0, r4
     690:	4798      	blx	r3
     692:	e778      	b.n	586 <_i2c_master_interrupt_handler+0xaa>
			module->callbacks[I2C_MASTER_CALLBACK_READ_COMPLETE](module);
     694:	6923      	ldr	r3, [r4, #16]
     696:	0020      	movs	r0, r4
     698:	4798      	blx	r3
     69a:	e774      	b.n	586 <_i2c_master_interrupt_handler+0xaa>
			_i2c_master_wait_for_sync(module);
     69c:	0020      	movs	r0, r4
     69e:	4b07      	ldr	r3, [pc, #28]	; (6bc <_i2c_master_interrupt_handler+0x1e0>)
     6a0:	4798      	blx	r3
			i2c_module->CTRLB.reg |= SERCOM_I2CM_CTRLB_ACKACT |
     6a2:	686a      	ldr	r2, [r5, #4]
     6a4:	23e0      	movs	r3, #224	; 0xe0
     6a6:	02db      	lsls	r3, r3, #11
     6a8:	4313      	orrs	r3, r2
     6aa:	606b      	str	r3, [r5, #4]
     6ac:	e780      	b.n	5b0 <_i2c_master_interrupt_handler+0xd4>
			module->callbacks[I2C_MASTER_CALLBACK_ERROR](module);
     6ae:	6963      	ldr	r3, [r4, #20]
     6b0:	0020      	movs	r0, r4
     6b2:	4798      	blx	r3
}
     6b4:	e77f      	b.n	5b6 <_i2c_master_interrupt_handler+0xda>
     6b6:	46c0      	nop			; (mov r8, r8)
     6b8:	200000f0 	.word	0x200000f0
     6bc:	0000040d 	.word	0x0000040d
     6c0:	00000419 	.word	0x00000419
     6c4:	000004a1 	.word	0x000004a1

000006c8 <SVC_Handler>:
     6c8:	4b08      	ldr	r3, [pc, #32]	; (6ec <pxCurrentTCBConst2>)
     6ca:	6819      	ldr	r1, [r3, #0]
     6cc:	6808      	ldr	r0, [r1, #0]
     6ce:	3010      	adds	r0, #16
     6d0:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     6d2:	46a0      	mov	r8, r4
     6d4:	46a9      	mov	r9, r5
     6d6:	46b2      	mov	sl, r6
     6d8:	46bb      	mov	fp, r7
     6da:	f380 8809 	msr	PSP, r0
     6de:	3820      	subs	r0, #32
     6e0:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     6e2:	4671      	mov	r1, lr
     6e4:	200d      	movs	r0, #13
     6e6:	4301      	orrs	r1, r0
     6e8:	4708      	bx	r1
     6ea:	46c0      	nop			; (mov r8, r8)

000006ec <pxCurrentTCBConst2>:
     6ec:	20000028 	.word	0x20000028

000006f0 <PendSV_Handler>:
     6f0:	f3ef 8009 	mrs	r0, PSP
     6f4:	4b0e      	ldr	r3, [pc, #56]	; (730 <pxCurrentTCBConst>)
     6f6:	681a      	ldr	r2, [r3, #0]
     6f8:	3820      	subs	r0, #32
     6fa:	6010      	str	r0, [r2, #0]
     6fc:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
     6fe:	4644      	mov	r4, r8
     700:	464d      	mov	r5, r9
     702:	4656      	mov	r6, sl
     704:	465f      	mov	r7, fp
     706:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
     708:	b508      	push	{r3, lr}
     70a:	b672      	cpsid	i
     70c:	f000 f8d0 	bl	8b0 <vTaskSwitchContext>
     710:	b662      	cpsie	i
     712:	bc0c      	pop	{r2, r3}
     714:	6811      	ldr	r1, [r2, #0]
     716:	6808      	ldr	r0, [r1, #0]
     718:	3010      	adds	r0, #16
     71a:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     71c:	46a0      	mov	r8, r4
     71e:	46a9      	mov	r9, r5
     720:	46b2      	mov	sl, r6
     722:	46bb      	mov	fp, r7
     724:	f380 8809 	msr	PSP, r0
     728:	3820      	subs	r0, #32
     72a:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     72c:	4718      	bx	r3
     72e:	46c0      	nop			; (mov r8, r8)

00000730 <pxCurrentTCBConst>:
     730:	20000028 	.word	0x20000028

00000734 <SysTick_Handler>:
     734:	b510      	push	{r4, lr}
     736:	2280      	movs	r2, #128	; 0x80
     738:	0552      	lsls	r2, r2, #21
     73a:	4b03      	ldr	r3, [pc, #12]	; (748 <SysTick_Handler+0x14>)
     73c:	601a      	str	r2, [r3, #0]
     73e:	b672      	cpsid	i
     740:	4b02      	ldr	r3, [pc, #8]	; (74c <SysTick_Handler+0x18>)
     742:	4798      	blx	r3
     744:	b662      	cpsie	i
     746:	bd10      	pop	{r4, pc}
     748:	e000ed04 	.word	0xe000ed04
     74c:	00000795 	.word	0x00000795

00000750 <vListInsertEnd>:
     750:	6843      	ldr	r3, [r0, #4]
     752:	685a      	ldr	r2, [r3, #4]
     754:	604a      	str	r2, [r1, #4]
     756:	6842      	ldr	r2, [r0, #4]
     758:	608a      	str	r2, [r1, #8]
     75a:	685a      	ldr	r2, [r3, #4]
     75c:	6091      	str	r1, [r2, #8]
     75e:	6059      	str	r1, [r3, #4]
     760:	6041      	str	r1, [r0, #4]
     762:	6108      	str	r0, [r1, #16]
     764:	6803      	ldr	r3, [r0, #0]
     766:	3301      	adds	r3, #1
     768:	6003      	str	r3, [r0, #0]
     76a:	4770      	bx	lr

0000076c <uxListRemove>:
     76c:	6843      	ldr	r3, [r0, #4]
     76e:	6882      	ldr	r2, [r0, #8]
     770:	609a      	str	r2, [r3, #8]
     772:	6883      	ldr	r3, [r0, #8]
     774:	6842      	ldr	r2, [r0, #4]
     776:	605a      	str	r2, [r3, #4]
     778:	6903      	ldr	r3, [r0, #16]
     77a:	685a      	ldr	r2, [r3, #4]
     77c:	4290      	cmp	r0, r2
     77e:	d006      	beq.n	78e <uxListRemove+0x22>
     780:	2200      	movs	r2, #0
     782:	6102      	str	r2, [r0, #16]
     784:	681a      	ldr	r2, [r3, #0]
     786:	3a01      	subs	r2, #1
     788:	601a      	str	r2, [r3, #0]
     78a:	6818      	ldr	r0, [r3, #0]
     78c:	4770      	bx	lr
     78e:	6882      	ldr	r2, [r0, #8]
     790:	605a      	str	r2, [r3, #4]
     792:	e7f5      	b.n	780 <uxListRemove+0x14>

00000794 <vTaskIncrementTick>:
     794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     796:	4b3b      	ldr	r3, [pc, #236]	; (884 <vTaskIncrementTick+0xf0>)
     798:	681b      	ldr	r3, [r3, #0]
     79a:	2b00      	cmp	r3, #0
     79c:	d16d      	bne.n	87a <vTaskIncrementTick+0xe6>
     79e:	4b3a      	ldr	r3, [pc, #232]	; (888 <vTaskIncrementTick+0xf4>)
     7a0:	681a      	ldr	r2, [r3, #0]
     7a2:	3201      	adds	r2, #1
     7a4:	601a      	str	r2, [r3, #0]
     7a6:	681b      	ldr	r3, [r3, #0]
     7a8:	2b00      	cmp	r3, #0
     7aa:	d118      	bne.n	7de <vTaskIncrementTick+0x4a>
     7ac:	4b37      	ldr	r3, [pc, #220]	; (88c <vTaskIncrementTick+0xf8>)
     7ae:	681b      	ldr	r3, [r3, #0]
     7b0:	681b      	ldr	r3, [r3, #0]
     7b2:	2b00      	cmp	r3, #0
     7b4:	d001      	beq.n	7ba <vTaskIncrementTick+0x26>
     7b6:	b672      	cpsid	i
     7b8:	e7fe      	b.n	7b8 <vTaskIncrementTick+0x24>
     7ba:	4b34      	ldr	r3, [pc, #208]	; (88c <vTaskIncrementTick+0xf8>)
     7bc:	6819      	ldr	r1, [r3, #0]
     7be:	4a34      	ldr	r2, [pc, #208]	; (890 <vTaskIncrementTick+0xfc>)
     7c0:	6810      	ldr	r0, [r2, #0]
     7c2:	6018      	str	r0, [r3, #0]
     7c4:	6011      	str	r1, [r2, #0]
     7c6:	4933      	ldr	r1, [pc, #204]	; (894 <vTaskIncrementTick+0x100>)
     7c8:	680a      	ldr	r2, [r1, #0]
     7ca:	3201      	adds	r2, #1
     7cc:	600a      	str	r2, [r1, #0]
     7ce:	681b      	ldr	r3, [r3, #0]
     7d0:	681b      	ldr	r3, [r3, #0]
     7d2:	2b00      	cmp	r3, #0
     7d4:	d11a      	bne.n	80c <vTaskIncrementTick+0x78>
     7d6:	2201      	movs	r2, #1
     7d8:	4252      	negs	r2, r2
     7da:	4b2f      	ldr	r3, [pc, #188]	; (898 <vTaskIncrementTick+0x104>)
     7dc:	601a      	str	r2, [r3, #0]
     7de:	4b2a      	ldr	r3, [pc, #168]	; (888 <vTaskIncrementTick+0xf4>)
     7e0:	681a      	ldr	r2, [r3, #0]
     7e2:	4b2d      	ldr	r3, [pc, #180]	; (898 <vTaskIncrementTick+0x104>)
     7e4:	681b      	ldr	r3, [r3, #0]
     7e6:	429a      	cmp	r2, r3
     7e8:	d34b      	bcc.n	882 <vTaskIncrementTick+0xee>
     7ea:	4b28      	ldr	r3, [pc, #160]	; (88c <vTaskIncrementTick+0xf8>)
     7ec:	681b      	ldr	r3, [r3, #0]
     7ee:	681b      	ldr	r3, [r3, #0]
     7f0:	2b00      	cmp	r3, #0
     7f2:	d013      	beq.n	81c <vTaskIncrementTick+0x88>
     7f4:	4b25      	ldr	r3, [pc, #148]	; (88c <vTaskIncrementTick+0xf8>)
     7f6:	681b      	ldr	r3, [r3, #0]
     7f8:	68db      	ldr	r3, [r3, #12]
     7fa:	68dc      	ldr	r4, [r3, #12]
     7fc:	6863      	ldr	r3, [r4, #4]
     7fe:	4a22      	ldr	r2, [pc, #136]	; (888 <vTaskIncrementTick+0xf4>)
     800:	6812      	ldr	r2, [r2, #0]
     802:	4293      	cmp	r3, r2
     804:	d80f      	bhi.n	826 <vTaskIncrementTick+0x92>
     806:	4f25      	ldr	r7, [pc, #148]	; (89c <vTaskIncrementTick+0x108>)
     808:	4e25      	ldr	r6, [pc, #148]	; (8a0 <vTaskIncrementTick+0x10c>)
     80a:	e025      	b.n	858 <vTaskIncrementTick+0xc4>
     80c:	4b1f      	ldr	r3, [pc, #124]	; (88c <vTaskIncrementTick+0xf8>)
     80e:	681b      	ldr	r3, [r3, #0]
     810:	68db      	ldr	r3, [r3, #12]
     812:	68db      	ldr	r3, [r3, #12]
     814:	685a      	ldr	r2, [r3, #4]
     816:	4b20      	ldr	r3, [pc, #128]	; (898 <vTaskIncrementTick+0x104>)
     818:	601a      	str	r2, [r3, #0]
     81a:	e7e0      	b.n	7de <vTaskIncrementTick+0x4a>
     81c:	2201      	movs	r2, #1
     81e:	4252      	negs	r2, r2
     820:	4b1d      	ldr	r3, [pc, #116]	; (898 <vTaskIncrementTick+0x104>)
     822:	601a      	str	r2, [r3, #0]
     824:	e02d      	b.n	882 <vTaskIncrementTick+0xee>
     826:	4a1c      	ldr	r2, [pc, #112]	; (898 <vTaskIncrementTick+0x104>)
     828:	6013      	str	r3, [r2, #0]
     82a:	e02a      	b.n	882 <vTaskIncrementTick+0xee>
     82c:	0098      	lsls	r0, r3, #2
     82e:	18c0      	adds	r0, r0, r3
     830:	0080      	lsls	r0, r0, #2
     832:	4b1c      	ldr	r3, [pc, #112]	; (8a4 <vTaskIncrementTick+0x110>)
     834:	1818      	adds	r0, r3, r0
     836:	0029      	movs	r1, r5
     838:	4b1b      	ldr	r3, [pc, #108]	; (8a8 <vTaskIncrementTick+0x114>)
     83a:	4798      	blx	r3
     83c:	4b13      	ldr	r3, [pc, #76]	; (88c <vTaskIncrementTick+0xf8>)
     83e:	681b      	ldr	r3, [r3, #0]
     840:	681b      	ldr	r3, [r3, #0]
     842:	2b00      	cmp	r3, #0
     844:	d0ea      	beq.n	81c <vTaskIncrementTick+0x88>
     846:	4b11      	ldr	r3, [pc, #68]	; (88c <vTaskIncrementTick+0xf8>)
     848:	681b      	ldr	r3, [r3, #0]
     84a:	68db      	ldr	r3, [r3, #12]
     84c:	68dc      	ldr	r4, [r3, #12]
     84e:	6863      	ldr	r3, [r4, #4]
     850:	4a0d      	ldr	r2, [pc, #52]	; (888 <vTaskIncrementTick+0xf4>)
     852:	6812      	ldr	r2, [r2, #0]
     854:	4293      	cmp	r3, r2
     856:	d8e6      	bhi.n	826 <vTaskIncrementTick+0x92>
     858:	1d25      	adds	r5, r4, #4
     85a:	0028      	movs	r0, r5
     85c:	47b8      	blx	r7
     85e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
     860:	2b00      	cmp	r3, #0
     862:	d003      	beq.n	86c <vTaskIncrementTick+0xd8>
     864:	0020      	movs	r0, r4
     866:	3018      	adds	r0, #24
     868:	4b0c      	ldr	r3, [pc, #48]	; (89c <vTaskIncrementTick+0x108>)
     86a:	4798      	blx	r3
     86c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
     86e:	6832      	ldr	r2, [r6, #0]
     870:	4293      	cmp	r3, r2
     872:	d9db      	bls.n	82c <vTaskIncrementTick+0x98>
     874:	4a0a      	ldr	r2, [pc, #40]	; (8a0 <vTaskIncrementTick+0x10c>)
     876:	6013      	str	r3, [r2, #0]
     878:	e7d8      	b.n	82c <vTaskIncrementTick+0x98>
     87a:	4a0c      	ldr	r2, [pc, #48]	; (8ac <vTaskIncrementTick+0x118>)
     87c:	6813      	ldr	r3, [r2, #0]
     87e:	3301      	adds	r3, #1
     880:	6013      	str	r3, [r2, #0]
     882:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     884:	2000009c 	.word	0x2000009c
     888:	200000ac 	.word	0x200000ac
     88c:	2000002c 	.word	0x2000002c
     890:	20000030 	.word	0x20000030
     894:	200000a8 	.word	0x200000a8
     898:	20000000 	.word	0x20000000
     89c:	0000076d 	.word	0x0000076d
     8a0:	200000a0 	.word	0x200000a0
     8a4:	20000034 	.word	0x20000034
     8a8:	00000751 	.word	0x00000751
     8ac:	20000098 	.word	0x20000098

000008b0 <vTaskSwitchContext>:
     8b0:	b510      	push	{r4, lr}
     8b2:	4b24      	ldr	r3, [pc, #144]	; (944 <vTaskSwitchContext+0x94>)
     8b4:	681b      	ldr	r3, [r3, #0]
     8b6:	2b00      	cmp	r3, #0
     8b8:	d11e      	bne.n	8f8 <vTaskSwitchContext+0x48>
     8ba:	4b23      	ldr	r3, [pc, #140]	; (948 <vTaskSwitchContext+0x98>)
     8bc:	681a      	ldr	r2, [r3, #0]
     8be:	0093      	lsls	r3, r2, #2
     8c0:	189b      	adds	r3, r3, r2
     8c2:	009b      	lsls	r3, r3, #2
     8c4:	4a21      	ldr	r2, [pc, #132]	; (94c <vTaskSwitchContext+0x9c>)
     8c6:	589b      	ldr	r3, [r3, r2]
     8c8:	2b00      	cmp	r3, #0
     8ca:	d119      	bne.n	900 <vTaskSwitchContext+0x50>
     8cc:	4b1e      	ldr	r3, [pc, #120]	; (948 <vTaskSwitchContext+0x98>)
     8ce:	681b      	ldr	r3, [r3, #0]
     8d0:	2b00      	cmp	r3, #0
     8d2:	d00f      	beq.n	8f4 <vTaskSwitchContext+0x44>
     8d4:	4a1c      	ldr	r2, [pc, #112]	; (948 <vTaskSwitchContext+0x98>)
     8d6:	4c1d      	ldr	r4, [pc, #116]	; (94c <vTaskSwitchContext+0x9c>)
     8d8:	0010      	movs	r0, r2
     8da:	6813      	ldr	r3, [r2, #0]
     8dc:	3b01      	subs	r3, #1
     8de:	6013      	str	r3, [r2, #0]
     8e0:	6811      	ldr	r1, [r2, #0]
     8e2:	008b      	lsls	r3, r1, #2
     8e4:	185b      	adds	r3, r3, r1
     8e6:	009b      	lsls	r3, r3, #2
     8e8:	591b      	ldr	r3, [r3, r4]
     8ea:	2b00      	cmp	r3, #0
     8ec:	d108      	bne.n	900 <vTaskSwitchContext+0x50>
     8ee:	6803      	ldr	r3, [r0, #0]
     8f0:	2b00      	cmp	r3, #0
     8f2:	d1f2      	bne.n	8da <vTaskSwitchContext+0x2a>
     8f4:	b672      	cpsid	i
     8f6:	e7fe      	b.n	8f6 <vTaskSwitchContext+0x46>
     8f8:	2201      	movs	r2, #1
     8fa:	4b15      	ldr	r3, [pc, #84]	; (950 <vTaskSwitchContext+0xa0>)
     8fc:	601a      	str	r2, [r3, #0]
     8fe:	bd10      	pop	{r4, pc}
     900:	4b11      	ldr	r3, [pc, #68]	; (948 <vTaskSwitchContext+0x98>)
     902:	681a      	ldr	r2, [r3, #0]
     904:	4811      	ldr	r0, [pc, #68]	; (94c <vTaskSwitchContext+0x9c>)
     906:	0093      	lsls	r3, r2, #2
     908:	1899      	adds	r1, r3, r2
     90a:	0089      	lsls	r1, r1, #2
     90c:	1841      	adds	r1, r0, r1
     90e:	684c      	ldr	r4, [r1, #4]
     910:	6864      	ldr	r4, [r4, #4]
     912:	604c      	str	r4, [r1, #4]
     914:	189b      	adds	r3, r3, r2
     916:	009b      	lsls	r3, r3, #2
     918:	3308      	adds	r3, #8
     91a:	18c3      	adds	r3, r0, r3
     91c:	429c      	cmp	r4, r3
     91e:	d009      	beq.n	934 <vTaskSwitchContext+0x84>
     920:	0093      	lsls	r3, r2, #2
     922:	189a      	adds	r2, r3, r2
     924:	0092      	lsls	r2, r2, #2
     926:	4b09      	ldr	r3, [pc, #36]	; (94c <vTaskSwitchContext+0x9c>)
     928:	189a      	adds	r2, r3, r2
     92a:	6853      	ldr	r3, [r2, #4]
     92c:	68da      	ldr	r2, [r3, #12]
     92e:	4b09      	ldr	r3, [pc, #36]	; (954 <vTaskSwitchContext+0xa4>)
     930:	601a      	str	r2, [r3, #0]
     932:	e7e4      	b.n	8fe <vTaskSwitchContext+0x4e>
     934:	6860      	ldr	r0, [r4, #4]
     936:	0093      	lsls	r3, r2, #2
     938:	189b      	adds	r3, r3, r2
     93a:	009b      	lsls	r3, r3, #2
     93c:	4903      	ldr	r1, [pc, #12]	; (94c <vTaskSwitchContext+0x9c>)
     93e:	18cb      	adds	r3, r1, r3
     940:	6058      	str	r0, [r3, #4]
     942:	e7ed      	b.n	920 <vTaskSwitchContext+0x70>
     944:	2000009c 	.word	0x2000009c
     948:	200000a0 	.word	0x200000a0
     94c:	20000034 	.word	0x20000034
     950:	200000a4 	.word	0x200000a4
     954:	20000028 	.word	0x20000028

00000958 <sercom_set_gclk_generator>:
 *                                         forced.
 */
enum status_code sercom_set_gclk_generator(
		const enum gclk_generator generator_source,
		const bool force_change)
{
     958:	b510      	push	{r4, lr}
     95a:	b082      	sub	sp, #8
     95c:	0004      	movs	r4, r0
	/* Check if valid option */
	if (!_sercom_config.generator_is_set || force_change) {
     95e:	4b0e      	ldr	r3, [pc, #56]	; (998 <sercom_set_gclk_generator+0x40>)
     960:	781b      	ldrb	r3, [r3, #0]
     962:	2b00      	cmp	r3, #0
     964:	d007      	beq.n	976 <sercom_set_gclk_generator+0x1e>
     966:	2900      	cmp	r1, #0
     968:	d105      	bne.n	976 <sercom_set_gclk_generator+0x1e>
		/* Save config */
		_sercom_config.generator_source = generator_source;
		_sercom_config.generator_is_set = true;

		return STATUS_OK;
	} else if (generator_source == _sercom_config.generator_source) {
     96a:	4b0b      	ldr	r3, [pc, #44]	; (998 <sercom_set_gclk_generator+0x40>)
     96c:	785b      	ldrb	r3, [r3, #1]
     96e:	4283      	cmp	r3, r0
     970:	d010      	beq.n	994 <sercom_set_gclk_generator+0x3c>
		/* Return status OK if same config */
		return STATUS_OK;
	}

	/* Return invalid config to already initialized GCLK */
	return STATUS_ERR_ALREADY_INITIALIZED;
     972:	201d      	movs	r0, #29
     974:	e00c      	b.n	990 <sercom_set_gclk_generator+0x38>
		gclk_chan_conf.source_generator = generator_source;
     976:	a901      	add	r1, sp, #4
     978:	700c      	strb	r4, [r1, #0]
		system_gclk_chan_set_config(SERCOM_GCLK_ID, &gclk_chan_conf);
     97a:	2013      	movs	r0, #19
     97c:	4b07      	ldr	r3, [pc, #28]	; (99c <sercom_set_gclk_generator+0x44>)
     97e:	4798      	blx	r3
		system_gclk_chan_enable(SERCOM_GCLK_ID);
     980:	2013      	movs	r0, #19
     982:	4b07      	ldr	r3, [pc, #28]	; (9a0 <sercom_set_gclk_generator+0x48>)
     984:	4798      	blx	r3
		_sercom_config.generator_source = generator_source;
     986:	4b04      	ldr	r3, [pc, #16]	; (998 <sercom_set_gclk_generator+0x40>)
     988:	705c      	strb	r4, [r3, #1]
		_sercom_config.generator_is_set = true;
     98a:	2201      	movs	r2, #1
     98c:	701a      	strb	r2, [r3, #0]
		return STATUS_OK;
     98e:	2000      	movs	r0, #0
}
     990:	b002      	add	sp, #8
     992:	bd10      	pop	{r4, pc}
		return STATUS_OK;
     994:	2000      	movs	r0, #0
     996:	e7fb      	b.n	990 <sercom_set_gclk_generator+0x38>
     998:	200000b0 	.word	0x200000b0
     99c:	000010dd 	.word	0x000010dd
     9a0:	00001051 	.word	0x00001051

000009a4 <_sercom_get_default_pad>:
 */
uint32_t _sercom_get_default_pad(
		Sercom *const sercom_module,
		const uint8_t pad)
{
	switch ((uintptr_t)sercom_module) {
     9a4:	4b40      	ldr	r3, [pc, #256]	; (aa8 <_sercom_get_default_pad+0x104>)
     9a6:	4298      	cmp	r0, r3
     9a8:	d031      	beq.n	a0e <_sercom_get_default_pad+0x6a>
     9aa:	d90a      	bls.n	9c2 <_sercom_get_default_pad+0x1e>
     9ac:	4b3f      	ldr	r3, [pc, #252]	; (aac <_sercom_get_default_pad+0x108>)
     9ae:	4298      	cmp	r0, r3
     9b0:	d04d      	beq.n	a4e <_sercom_get_default_pad+0xaa>
     9b2:	4b3f      	ldr	r3, [pc, #252]	; (ab0 <_sercom_get_default_pad+0x10c>)
     9b4:	4298      	cmp	r0, r3
     9b6:	d05a      	beq.n	a6e <_sercom_get_default_pad+0xca>
     9b8:	4b3e      	ldr	r3, [pc, #248]	; (ab4 <_sercom_get_default_pad+0x110>)
     9ba:	4298      	cmp	r0, r3
     9bc:	d037      	beq.n	a2e <_sercom_get_default_pad+0x8a>
		/* Auto-generate a lookup table for the default SERCOM pad defaults */
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
	}

	Assert(false);
	return 0;
     9be:	2000      	movs	r0, #0
}
     9c0:	4770      	bx	lr
	switch ((uintptr_t)sercom_module) {
     9c2:	4b3d      	ldr	r3, [pc, #244]	; (ab8 <_sercom_get_default_pad+0x114>)
     9c4:	4298      	cmp	r0, r3
     9c6:	d00c      	beq.n	9e2 <_sercom_get_default_pad+0x3e>
     9c8:	4b3c      	ldr	r3, [pc, #240]	; (abc <_sercom_get_default_pad+0x118>)
     9ca:	4298      	cmp	r0, r3
     9cc:	d1f7      	bne.n	9be <_sercom_get_default_pad+0x1a>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     9ce:	2901      	cmp	r1, #1
     9d0:	d017      	beq.n	a02 <_sercom_get_default_pad+0x5e>
     9d2:	2900      	cmp	r1, #0
     9d4:	d05d      	beq.n	a92 <_sercom_get_default_pad+0xee>
     9d6:	2902      	cmp	r1, #2
     9d8:	d015      	beq.n	a06 <_sercom_get_default_pad+0x62>
     9da:	2903      	cmp	r1, #3
     9dc:	d015      	beq.n	a0a <_sercom_get_default_pad+0x66>
	return 0;
     9de:	2000      	movs	r0, #0
     9e0:	e7ee      	b.n	9c0 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     9e2:	2901      	cmp	r1, #1
     9e4:	d007      	beq.n	9f6 <_sercom_get_default_pad+0x52>
     9e6:	2900      	cmp	r1, #0
     9e8:	d051      	beq.n	a8e <_sercom_get_default_pad+0xea>
     9ea:	2902      	cmp	r1, #2
     9ec:	d005      	beq.n	9fa <_sercom_get_default_pad+0x56>
     9ee:	2903      	cmp	r1, #3
     9f0:	d005      	beq.n	9fe <_sercom_get_default_pad+0x5a>
	return 0;
     9f2:	2000      	movs	r0, #0
     9f4:	e7e4      	b.n	9c0 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     9f6:	4832      	ldr	r0, [pc, #200]	; (ac0 <_sercom_get_default_pad+0x11c>)
     9f8:	e7e2      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     9fa:	4832      	ldr	r0, [pc, #200]	; (ac4 <_sercom_get_default_pad+0x120>)
     9fc:	e7e0      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     9fe:	4832      	ldr	r0, [pc, #200]	; (ac8 <_sercom_get_default_pad+0x124>)
     a00:	e7de      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a02:	4832      	ldr	r0, [pc, #200]	; (acc <_sercom_get_default_pad+0x128>)
     a04:	e7dc      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a06:	4832      	ldr	r0, [pc, #200]	; (ad0 <_sercom_get_default_pad+0x12c>)
     a08:	e7da      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a0a:	4832      	ldr	r0, [pc, #200]	; (ad4 <_sercom_get_default_pad+0x130>)
     a0c:	e7d8      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a0e:	2901      	cmp	r1, #1
     a10:	d007      	beq.n	a22 <_sercom_get_default_pad+0x7e>
     a12:	2900      	cmp	r1, #0
     a14:	d03f      	beq.n	a96 <_sercom_get_default_pad+0xf2>
     a16:	2902      	cmp	r1, #2
     a18:	d005      	beq.n	a26 <_sercom_get_default_pad+0x82>
     a1a:	2903      	cmp	r1, #3
     a1c:	d005      	beq.n	a2a <_sercom_get_default_pad+0x86>
	return 0;
     a1e:	2000      	movs	r0, #0
     a20:	e7ce      	b.n	9c0 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     a22:	482d      	ldr	r0, [pc, #180]	; (ad8 <_sercom_get_default_pad+0x134>)
     a24:	e7cc      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a26:	482d      	ldr	r0, [pc, #180]	; (adc <_sercom_get_default_pad+0x138>)
     a28:	e7ca      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a2a:	482d      	ldr	r0, [pc, #180]	; (ae0 <_sercom_get_default_pad+0x13c>)
     a2c:	e7c8      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a2e:	2901      	cmp	r1, #1
     a30:	d007      	beq.n	a42 <_sercom_get_default_pad+0x9e>
     a32:	2900      	cmp	r1, #0
     a34:	d031      	beq.n	a9a <_sercom_get_default_pad+0xf6>
     a36:	2902      	cmp	r1, #2
     a38:	d005      	beq.n	a46 <_sercom_get_default_pad+0xa2>
     a3a:	2903      	cmp	r1, #3
     a3c:	d005      	beq.n	a4a <_sercom_get_default_pad+0xa6>
	return 0;
     a3e:	2000      	movs	r0, #0
     a40:	e7be      	b.n	9c0 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     a42:	4828      	ldr	r0, [pc, #160]	; (ae4 <_sercom_get_default_pad+0x140>)
     a44:	e7bc      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a46:	4828      	ldr	r0, [pc, #160]	; (ae8 <_sercom_get_default_pad+0x144>)
     a48:	e7ba      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a4a:	4828      	ldr	r0, [pc, #160]	; (aec <_sercom_get_default_pad+0x148>)
     a4c:	e7b8      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a4e:	2901      	cmp	r1, #1
     a50:	d007      	beq.n	a62 <_sercom_get_default_pad+0xbe>
     a52:	2900      	cmp	r1, #0
     a54:	d023      	beq.n	a9e <_sercom_get_default_pad+0xfa>
     a56:	2902      	cmp	r1, #2
     a58:	d005      	beq.n	a66 <_sercom_get_default_pad+0xc2>
     a5a:	2903      	cmp	r1, #3
     a5c:	d005      	beq.n	a6a <_sercom_get_default_pad+0xc6>
	return 0;
     a5e:	2000      	movs	r0, #0
     a60:	e7ae      	b.n	9c0 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     a62:	4823      	ldr	r0, [pc, #140]	; (af0 <_sercom_get_default_pad+0x14c>)
     a64:	e7ac      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a66:	4823      	ldr	r0, [pc, #140]	; (af4 <_sercom_get_default_pad+0x150>)
     a68:	e7aa      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a6a:	4823      	ldr	r0, [pc, #140]	; (af8 <_sercom_get_default_pad+0x154>)
     a6c:	e7a8      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a6e:	2901      	cmp	r1, #1
     a70:	d007      	beq.n	a82 <_sercom_get_default_pad+0xde>
     a72:	2900      	cmp	r1, #0
     a74:	d015      	beq.n	aa2 <_sercom_get_default_pad+0xfe>
     a76:	2902      	cmp	r1, #2
     a78:	d005      	beq.n	a86 <_sercom_get_default_pad+0xe2>
     a7a:	2903      	cmp	r1, #3
     a7c:	d005      	beq.n	a8a <_sercom_get_default_pad+0xe6>
	return 0;
     a7e:	2000      	movs	r0, #0
     a80:	e79e      	b.n	9c0 <_sercom_get_default_pad+0x1c>
		MREPEAT(SERCOM_INST_NUM, _SERCOM_PAD_DEFAULTS_CASE, pad)
     a82:	481e      	ldr	r0, [pc, #120]	; (afc <_sercom_get_default_pad+0x158>)
     a84:	e79c      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a86:	481e      	ldr	r0, [pc, #120]	; (b00 <_sercom_get_default_pad+0x15c>)
     a88:	e79a      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a8a:	481e      	ldr	r0, [pc, #120]	; (b04 <_sercom_get_default_pad+0x160>)
     a8c:	e798      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a8e:	481e      	ldr	r0, [pc, #120]	; (b08 <_sercom_get_default_pad+0x164>)
     a90:	e796      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a92:	2003      	movs	r0, #3
     a94:	e794      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a96:	481d      	ldr	r0, [pc, #116]	; (b0c <_sercom_get_default_pad+0x168>)
     a98:	e792      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a9a:	481d      	ldr	r0, [pc, #116]	; (b10 <_sercom_get_default_pad+0x16c>)
     a9c:	e790      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     a9e:	481d      	ldr	r0, [pc, #116]	; (b14 <_sercom_get_default_pad+0x170>)
     aa0:	e78e      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     aa2:	481d      	ldr	r0, [pc, #116]	; (b18 <_sercom_get_default_pad+0x174>)
     aa4:	e78c      	b.n	9c0 <_sercom_get_default_pad+0x1c>
     aa6:	46c0      	nop			; (mov r8, r8)
     aa8:	42001000 	.word	0x42001000
     aac:	42001800 	.word	0x42001800
     ab0:	42001c00 	.word	0x42001c00
     ab4:	42001400 	.word	0x42001400
     ab8:	42000800 	.word	0x42000800
     abc:	42000c00 	.word	0x42000c00
     ac0:	00050003 	.word	0x00050003
     ac4:	00060003 	.word	0x00060003
     ac8:	00070003 	.word	0x00070003
     acc:	00010003 	.word	0x00010003
     ad0:	001e0003 	.word	0x001e0003
     ad4:	001f0003 	.word	0x001f0003
     ad8:	00090003 	.word	0x00090003
     adc:	000a0003 	.word	0x000a0003
     ae0:	000b0003 	.word	0x000b0003
     ae4:	00110003 	.word	0x00110003
     ae8:	00120003 	.word	0x00120003
     aec:	00130003 	.word	0x00130003
     af0:	000d0003 	.word	0x000d0003
     af4:	000e0003 	.word	0x000e0003
     af8:	000f0003 	.word	0x000f0003
     afc:	00170003 	.word	0x00170003
     b00:	00180003 	.word	0x00180003
     b04:	00190003 	.word	0x00190003
     b08:	00040003 	.word	0x00040003
     b0c:	00080003 	.word	0x00080003
     b10:	00100003 	.word	0x00100003
     b14:	000c0003 	.word	0x000c0003
     b18:	00160003 	.word	0x00160003

00000b1c <_sercom_get_sercom_inst_index>:
 *
 * \return Index of given instance.
 */
uint8_t _sercom_get_sercom_inst_index(
		Sercom *const sercom_instance)
{
     b1c:	b530      	push	{r4, r5, lr}
     b1e:	b087      	sub	sp, #28
	/* Save all available SERCOM instances for compare */
	Sercom *sercom_instances[SERCOM_INST_NUM] = SERCOM_INSTS;
     b20:	4b0b      	ldr	r3, [pc, #44]	; (b50 <_sercom_get_sercom_inst_index+0x34>)
     b22:	466a      	mov	r2, sp
     b24:	cb32      	ldmia	r3!, {r1, r4, r5}
     b26:	c232      	stmia	r2!, {r1, r4, r5}
     b28:	cb32      	ldmia	r3!, {r1, r4, r5}
     b2a:	c232      	stmia	r2!, {r1, r4, r5}

	/* Find index for sercom instance */
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
		if ((uintptr_t)sercom_instance == (uintptr_t)sercom_instances[i]) {
     b2c:	9b00      	ldr	r3, [sp, #0]
     b2e:	4283      	cmp	r3, r0
     b30:	d00b      	beq.n	b4a <_sercom_get_sercom_inst_index+0x2e>
     b32:	2301      	movs	r3, #1
     b34:	009a      	lsls	r2, r3, #2
     b36:	4669      	mov	r1, sp
     b38:	5852      	ldr	r2, [r2, r1]
     b3a:	4282      	cmp	r2, r0
     b3c:	d006      	beq.n	b4c <_sercom_get_sercom_inst_index+0x30>
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
     b3e:	3301      	adds	r3, #1
     b40:	2b06      	cmp	r3, #6
     b42:	d1f7      	bne.n	b34 <_sercom_get_sercom_inst_index+0x18>
		}
	}

	/* Invalid data given */
	Assert(false);
	return 0;
     b44:	2000      	movs	r0, #0
}
     b46:	b007      	add	sp, #28
     b48:	bd30      	pop	{r4, r5, pc}
	for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
     b4a:	2300      	movs	r3, #0
			return i;
     b4c:	b2d8      	uxtb	r0, r3
     b4e:	e7fa      	b.n	b46 <_sercom_get_sercom_inst_index+0x2a>
     b50:	00003154 	.word	0x00003154

00000b54 <_sercom_default_handler>:
 */
static void _sercom_default_handler(
		const uint8_t instance)
{
	Assert(false);
}
     b54:	4770      	bx	lr
	...

00000b58 <_sercom_set_handler>:
 * \param[in]  interrupt_handler  Pointer to instance callback handler.
 */
void _sercom_set_handler(
		const uint8_t instance,
		const sercom_handler_t interrupt_handler)
{
     b58:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Initialize handlers with default handler and device instances with 0 */
	if (_handler_table_initialized == false) {
     b5a:	4b0a      	ldr	r3, [pc, #40]	; (b84 <_sercom_set_handler+0x2c>)
     b5c:	781b      	ldrb	r3, [r3, #0]
     b5e:	2b00      	cmp	r3, #0
     b60:	d10c      	bne.n	b7c <_sercom_set_handler+0x24>
		for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
			_sercom_interrupt_handlers[i] = &_sercom_default_handler;
     b62:	4f09      	ldr	r7, [pc, #36]	; (b88 <_sercom_set_handler+0x30>)
     b64:	4e09      	ldr	r6, [pc, #36]	; (b8c <_sercom_set_handler+0x34>)
			_sercom_instances[i] = NULL;
     b66:	4d0a      	ldr	r5, [pc, #40]	; (b90 <_sercom_set_handler+0x38>)
     b68:	2400      	movs	r4, #0
			_sercom_interrupt_handlers[i] = &_sercom_default_handler;
     b6a:	51de      	str	r6, [r3, r7]
			_sercom_instances[i] = NULL;
     b6c:	195a      	adds	r2, r3, r5
     b6e:	6014      	str	r4, [r2, #0]
     b70:	3304      	adds	r3, #4
		for (uint32_t i = 0; i < SERCOM_INST_NUM; i++) {
     b72:	2b18      	cmp	r3, #24
     b74:	d1f9      	bne.n	b6a <_sercom_set_handler+0x12>
		}

		_handler_table_initialized = true;
     b76:	2201      	movs	r2, #1
     b78:	4b02      	ldr	r3, [pc, #8]	; (b84 <_sercom_set_handler+0x2c>)
     b7a:	701a      	strb	r2, [r3, #0]
	}

	/* Save interrupt handler */
	_sercom_interrupt_handlers[instance] = interrupt_handler;
     b7c:	0080      	lsls	r0, r0, #2
     b7e:	4b02      	ldr	r3, [pc, #8]	; (b88 <_sercom_set_handler+0x30>)
     b80:	50c1      	str	r1, [r0, r3]
}
     b82:	bdf0      	pop	{r4, r5, r6, r7, pc}
     b84:	200000b2 	.word	0x200000b2
     b88:	200000b4 	.word	0x200000b4
     b8c:	00000b55 	.word	0x00000b55
     b90:	200000f0 	.word	0x200000f0

00000b94 <_sercom_get_interrupt_vector>:
 * \retval SYSTEM_INTERRUPT_MODULE_SERCOM6
 * \retval SYSTEM_INTERRUPT_MODULE_SERCOM7
 */
enum system_interrupt_vector _sercom_get_interrupt_vector(
		Sercom *const sercom_instance)
{
     b94:	b500      	push	{lr}
     b96:	b083      	sub	sp, #12
	const uint8_t sercom_int_vectors[SERCOM_INST_NUM] =
     b98:	2309      	movs	r3, #9
     b9a:	466a      	mov	r2, sp
     b9c:	7013      	strb	r3, [r2, #0]
     b9e:	3301      	adds	r3, #1
     ba0:	7053      	strb	r3, [r2, #1]
     ba2:	3301      	adds	r3, #1
     ba4:	7093      	strb	r3, [r2, #2]
     ba6:	3301      	adds	r3, #1
     ba8:	70d3      	strb	r3, [r2, #3]
     baa:	3301      	adds	r3, #1
     bac:	7113      	strb	r3, [r2, #4]
     bae:	3301      	adds	r3, #1
     bb0:	7153      	strb	r3, [r2, #5]
		{
			MREPEAT(SERCOM_INST_NUM, _SERCOM_INTERRUPT_VECT_NUM, ~)
		};

	/* Retrieve the index of the SERCOM being requested */
	uint8_t instance_index = _sercom_get_sercom_inst_index(sercom_instance);
     bb2:	4b03      	ldr	r3, [pc, #12]	; (bc0 <_sercom_get_interrupt_vector+0x2c>)
     bb4:	4798      	blx	r3

	/* Get the vector number from the lookup table for the requested SERCOM */
	return (enum system_interrupt_vector)sercom_int_vectors[instance_index];
     bb6:	466b      	mov	r3, sp
     bb8:	5618      	ldrsb	r0, [r3, r0]
}
     bba:	b003      	add	sp, #12
     bbc:	bd00      	pop	{pc}
     bbe:	46c0      	nop			; (mov r8, r8)
     bc0:	00000b1d 	.word	0x00000b1d

00000bc4 <SERCOM0_Handler>:

/** Auto-generate a set of interrupt handlers for each SERCOM in the device */
MREPEAT(SERCOM_INST_NUM, _SERCOM_INTERRUPT_HANDLER, ~)
     bc4:	b510      	push	{r4, lr}
     bc6:	4b02      	ldr	r3, [pc, #8]	; (bd0 <SERCOM0_Handler+0xc>)
     bc8:	681b      	ldr	r3, [r3, #0]
     bca:	2000      	movs	r0, #0
     bcc:	4798      	blx	r3
     bce:	bd10      	pop	{r4, pc}
     bd0:	200000b4 	.word	0x200000b4

00000bd4 <SERCOM1_Handler>:
     bd4:	b510      	push	{r4, lr}
     bd6:	4b02      	ldr	r3, [pc, #8]	; (be0 <SERCOM1_Handler+0xc>)
     bd8:	685b      	ldr	r3, [r3, #4]
     bda:	2001      	movs	r0, #1
     bdc:	4798      	blx	r3
     bde:	bd10      	pop	{r4, pc}
     be0:	200000b4 	.word	0x200000b4

00000be4 <SERCOM2_Handler>:
     be4:	b510      	push	{r4, lr}
     be6:	4b02      	ldr	r3, [pc, #8]	; (bf0 <SERCOM2_Handler+0xc>)
     be8:	689b      	ldr	r3, [r3, #8]
     bea:	2002      	movs	r0, #2
     bec:	4798      	blx	r3
     bee:	bd10      	pop	{r4, pc}
     bf0:	200000b4 	.word	0x200000b4

00000bf4 <SERCOM3_Handler>:
     bf4:	b510      	push	{r4, lr}
     bf6:	4b02      	ldr	r3, [pc, #8]	; (c00 <SERCOM3_Handler+0xc>)
     bf8:	68db      	ldr	r3, [r3, #12]
     bfa:	2003      	movs	r0, #3
     bfc:	4798      	blx	r3
     bfe:	bd10      	pop	{r4, pc}
     c00:	200000b4 	.word	0x200000b4

00000c04 <SERCOM4_Handler>:
     c04:	b510      	push	{r4, lr}
     c06:	4b02      	ldr	r3, [pc, #8]	; (c10 <SERCOM4_Handler+0xc>)
     c08:	691b      	ldr	r3, [r3, #16]
     c0a:	2004      	movs	r0, #4
     c0c:	4798      	blx	r3
     c0e:	bd10      	pop	{r4, pc}
     c10:	200000b4 	.word	0x200000b4

00000c14 <SERCOM5_Handler>:
     c14:	b510      	push	{r4, lr}
     c16:	4b02      	ldr	r3, [pc, #8]	; (c20 <SERCOM5_Handler+0xc>)
     c18:	695b      	ldr	r3, [r3, #20]
     c1a:	2005      	movs	r0, #5
     c1c:	4798      	blx	r3
     c1e:	bd10      	pop	{r4, pc}
     c20:	200000b4 	.word	0x200000b4

00000c24 <system_board_init>:
{
	/* This function is meant to contain board-specific initialization code
	 * for, e.g., the I/O pins. The initialization can rely on application-
	 * specific board configuration, found in conf_board.h.
	 */
     c24:	4770      	bx	lr
	...

00000c28 <cpu_irq_enter_critical>:
     c28:	4b0c      	ldr	r3, [pc, #48]	; (c5c <cpu_irq_enter_critical+0x34>)
     c2a:	681b      	ldr	r3, [r3, #0]
     c2c:	2b00      	cmp	r3, #0
     c2e:	d106      	bne.n	c3e <cpu_irq_enter_critical+0x16>
     c30:	f3ef 8310 	mrs	r3, PRIMASK
     c34:	2b00      	cmp	r3, #0
     c36:	d007      	beq.n	c48 <cpu_irq_enter_critical+0x20>
     c38:	2200      	movs	r2, #0
     c3a:	4b09      	ldr	r3, [pc, #36]	; (c60 <cpu_irq_enter_critical+0x38>)
     c3c:	701a      	strb	r2, [r3, #0]
     c3e:	4a07      	ldr	r2, [pc, #28]	; (c5c <cpu_irq_enter_critical+0x34>)
     c40:	6813      	ldr	r3, [r2, #0]
     c42:	3301      	adds	r3, #1
     c44:	6013      	str	r3, [r2, #0]
     c46:	4770      	bx	lr
     c48:	b672      	cpsid	i
     c4a:	f3bf 8f5f 	dmb	sy
     c4e:	2200      	movs	r2, #0
     c50:	4b04      	ldr	r3, [pc, #16]	; (c64 <cpu_irq_enter_critical+0x3c>)
     c52:	701a      	strb	r2, [r3, #0]
     c54:	3201      	adds	r2, #1
     c56:	4b02      	ldr	r3, [pc, #8]	; (c60 <cpu_irq_enter_critical+0x38>)
     c58:	701a      	strb	r2, [r3, #0]
     c5a:	e7f0      	b.n	c3e <cpu_irq_enter_critical+0x16>
     c5c:	200000cc 	.word	0x200000cc
     c60:	200000d0 	.word	0x200000d0
     c64:	20000004 	.word	0x20000004

00000c68 <cpu_irq_leave_critical>:
     c68:	4b08      	ldr	r3, [pc, #32]	; (c8c <cpu_irq_leave_critical+0x24>)
     c6a:	681a      	ldr	r2, [r3, #0]
     c6c:	3a01      	subs	r2, #1
     c6e:	601a      	str	r2, [r3, #0]
     c70:	681b      	ldr	r3, [r3, #0]
     c72:	2b00      	cmp	r3, #0
     c74:	d109      	bne.n	c8a <cpu_irq_leave_critical+0x22>
     c76:	4b06      	ldr	r3, [pc, #24]	; (c90 <cpu_irq_leave_critical+0x28>)
     c78:	781b      	ldrb	r3, [r3, #0]
     c7a:	2b00      	cmp	r3, #0
     c7c:	d005      	beq.n	c8a <cpu_irq_leave_critical+0x22>
     c7e:	2201      	movs	r2, #1
     c80:	4b04      	ldr	r3, [pc, #16]	; (c94 <cpu_irq_leave_critical+0x2c>)
     c82:	701a      	strb	r2, [r3, #0]
     c84:	f3bf 8f5f 	dmb	sy
     c88:	b662      	cpsie	i
     c8a:	4770      	bx	lr
     c8c:	200000cc 	.word	0x200000cc
     c90:	200000d0 	.word	0x200000d0
     c94:	20000004 	.word	0x20000004

00000c98 <system_clock_source_get_hz>:
     c98:	b510      	push	{r4, lr}
     c9a:	2808      	cmp	r0, #8
     c9c:	d803      	bhi.n	ca6 <system_clock_source_get_hz+0xe>
     c9e:	0080      	lsls	r0, r0, #2
     ca0:	4b1b      	ldr	r3, [pc, #108]	; (d10 <system_clock_source_get_hz+0x78>)
     ca2:	581b      	ldr	r3, [r3, r0]
     ca4:	469f      	mov	pc, r3
     ca6:	2000      	movs	r0, #0
     ca8:	e030      	b.n	d0c <system_clock_source_get_hz+0x74>
     caa:	4b1a      	ldr	r3, [pc, #104]	; (d14 <system_clock_source_get_hz+0x7c>)
     cac:	6918      	ldr	r0, [r3, #16]
     cae:	e02d      	b.n	d0c <system_clock_source_get_hz+0x74>
     cb0:	4b19      	ldr	r3, [pc, #100]	; (d18 <system_clock_source_get_hz+0x80>)
     cb2:	6a1b      	ldr	r3, [r3, #32]
     cb4:	059b      	lsls	r3, r3, #22
     cb6:	0f9b      	lsrs	r3, r3, #30
     cb8:	4818      	ldr	r0, [pc, #96]	; (d1c <system_clock_source_get_hz+0x84>)
     cba:	40d8      	lsrs	r0, r3
     cbc:	e026      	b.n	d0c <system_clock_source_get_hz+0x74>
     cbe:	4b15      	ldr	r3, [pc, #84]	; (d14 <system_clock_source_get_hz+0x7c>)
     cc0:	6958      	ldr	r0, [r3, #20]
     cc2:	e023      	b.n	d0c <system_clock_source_get_hz+0x74>
     cc4:	4b13      	ldr	r3, [pc, #76]	; (d14 <system_clock_source_get_hz+0x7c>)
     cc6:	681b      	ldr	r3, [r3, #0]
     cc8:	2000      	movs	r0, #0
     cca:	079b      	lsls	r3, r3, #30
     ccc:	d51e      	bpl.n	d0c <system_clock_source_get_hz+0x74>
     cce:	4912      	ldr	r1, [pc, #72]	; (d18 <system_clock_source_get_hz+0x80>)
     cd0:	2210      	movs	r2, #16
     cd2:	68cb      	ldr	r3, [r1, #12]
     cd4:	421a      	tst	r2, r3
     cd6:	d0fc      	beq.n	cd2 <system_clock_source_get_hz+0x3a>
     cd8:	4b0e      	ldr	r3, [pc, #56]	; (d14 <system_clock_source_get_hz+0x7c>)
     cda:	681b      	ldr	r3, [r3, #0]
     cdc:	075b      	lsls	r3, r3, #29
     cde:	d401      	bmi.n	ce4 <system_clock_source_get_hz+0x4c>
     ce0:	480f      	ldr	r0, [pc, #60]	; (d20 <system_clock_source_get_hz+0x88>)
     ce2:	e013      	b.n	d0c <system_clock_source_get_hz+0x74>
     ce4:	2000      	movs	r0, #0
     ce6:	4b0f      	ldr	r3, [pc, #60]	; (d24 <system_clock_source_get_hz+0x8c>)
     ce8:	4798      	blx	r3
     cea:	4b0a      	ldr	r3, [pc, #40]	; (d14 <system_clock_source_get_hz+0x7c>)
     cec:	689b      	ldr	r3, [r3, #8]
     cee:	041b      	lsls	r3, r3, #16
     cf0:	0c1b      	lsrs	r3, r3, #16
     cf2:	4358      	muls	r0, r3
     cf4:	e00a      	b.n	d0c <system_clock_source_get_hz+0x74>
     cf6:	2350      	movs	r3, #80	; 0x50
     cf8:	4a07      	ldr	r2, [pc, #28]	; (d18 <system_clock_source_get_hz+0x80>)
     cfa:	5cd3      	ldrb	r3, [r2, r3]
     cfc:	2000      	movs	r0, #0
     cfe:	075b      	lsls	r3, r3, #29
     d00:	d504      	bpl.n	d0c <system_clock_source_get_hz+0x74>
     d02:	4b04      	ldr	r3, [pc, #16]	; (d14 <system_clock_source_get_hz+0x7c>)
     d04:	68d8      	ldr	r0, [r3, #12]
     d06:	e001      	b.n	d0c <system_clock_source_get_hz+0x74>
     d08:	2080      	movs	r0, #128	; 0x80
     d0a:	0200      	lsls	r0, r0, #8
     d0c:	bd10      	pop	{r4, pc}
     d0e:	46c0      	nop			; (mov r8, r8)
     d10:	0000316c 	.word	0x0000316c
     d14:	200000d4 	.word	0x200000d4
     d18:	40000800 	.word	0x40000800
     d1c:	007a1200 	.word	0x007a1200
     d20:	02dc6c00 	.word	0x02dc6c00
     d24:	000010f9 	.word	0x000010f9

00000d28 <system_clock_source_osc8m_set_config>:
     d28:	b570      	push	{r4, r5, r6, lr}
     d2a:	490c      	ldr	r1, [pc, #48]	; (d5c <system_clock_source_osc8m_set_config+0x34>)
     d2c:	6a0b      	ldr	r3, [r1, #32]
     d2e:	7804      	ldrb	r4, [r0, #0]
     d30:	7885      	ldrb	r5, [r0, #2]
     d32:	7840      	ldrb	r0, [r0, #1]
     d34:	2201      	movs	r2, #1
     d36:	4010      	ands	r0, r2
     d38:	0180      	lsls	r0, r0, #6
     d3a:	2640      	movs	r6, #64	; 0x40
     d3c:	43b3      	bics	r3, r6
     d3e:	4303      	orrs	r3, r0
     d40:	402a      	ands	r2, r5
     d42:	01d2      	lsls	r2, r2, #7
     d44:	2080      	movs	r0, #128	; 0x80
     d46:	4383      	bics	r3, r0
     d48:	4313      	orrs	r3, r2
     d4a:	2203      	movs	r2, #3
     d4c:	4022      	ands	r2, r4
     d4e:	0212      	lsls	r2, r2, #8
     d50:	4803      	ldr	r0, [pc, #12]	; (d60 <system_clock_source_osc8m_set_config+0x38>)
     d52:	4003      	ands	r3, r0
     d54:	4313      	orrs	r3, r2
     d56:	620b      	str	r3, [r1, #32]
     d58:	bd70      	pop	{r4, r5, r6, pc}
     d5a:	46c0      	nop			; (mov r8, r8)
     d5c:	40000800 	.word	0x40000800
     d60:	fffffcff 	.word	0xfffffcff

00000d64 <system_clock_source_enable>:
     d64:	2808      	cmp	r0, #8
     d66:	d803      	bhi.n	d70 <system_clock_source_enable+0xc>
     d68:	0080      	lsls	r0, r0, #2
     d6a:	4b25      	ldr	r3, [pc, #148]	; (e00 <system_clock_source_enable+0x9c>)
     d6c:	581b      	ldr	r3, [r3, r0]
     d6e:	469f      	mov	pc, r3
     d70:	2017      	movs	r0, #23
     d72:	e044      	b.n	dfe <system_clock_source_enable+0x9a>
     d74:	4a23      	ldr	r2, [pc, #140]	; (e04 <system_clock_source_enable+0xa0>)
     d76:	6a13      	ldr	r3, [r2, #32]
     d78:	2102      	movs	r1, #2
     d7a:	430b      	orrs	r3, r1
     d7c:	6213      	str	r3, [r2, #32]
     d7e:	2000      	movs	r0, #0
     d80:	e03d      	b.n	dfe <system_clock_source_enable+0x9a>
     d82:	4a20      	ldr	r2, [pc, #128]	; (e04 <system_clock_source_enable+0xa0>)
     d84:	6993      	ldr	r3, [r2, #24]
     d86:	2102      	movs	r1, #2
     d88:	430b      	orrs	r3, r1
     d8a:	6193      	str	r3, [r2, #24]
     d8c:	2000      	movs	r0, #0
     d8e:	e036      	b.n	dfe <system_clock_source_enable+0x9a>
     d90:	4a1c      	ldr	r2, [pc, #112]	; (e04 <system_clock_source_enable+0xa0>)
     d92:	8a13      	ldrh	r3, [r2, #16]
     d94:	2102      	movs	r1, #2
     d96:	430b      	orrs	r3, r1
     d98:	8213      	strh	r3, [r2, #16]
     d9a:	2000      	movs	r0, #0
     d9c:	e02f      	b.n	dfe <system_clock_source_enable+0x9a>
     d9e:	4a19      	ldr	r2, [pc, #100]	; (e04 <system_clock_source_enable+0xa0>)
     da0:	8a93      	ldrh	r3, [r2, #20]
     da2:	2102      	movs	r1, #2
     da4:	430b      	orrs	r3, r1
     da6:	8293      	strh	r3, [r2, #20]
     da8:	2000      	movs	r0, #0
     daa:	e028      	b.n	dfe <system_clock_source_enable+0x9a>
     dac:	4916      	ldr	r1, [pc, #88]	; (e08 <system_clock_source_enable+0xa4>)
     dae:	680b      	ldr	r3, [r1, #0]
     db0:	2202      	movs	r2, #2
     db2:	4313      	orrs	r3, r2
     db4:	600b      	str	r3, [r1, #0]
     db6:	4b13      	ldr	r3, [pc, #76]	; (e04 <system_clock_source_enable+0xa0>)
     db8:	849a      	strh	r2, [r3, #36]	; 0x24
     dba:	0019      	movs	r1, r3
     dbc:	320e      	adds	r2, #14
     dbe:	68cb      	ldr	r3, [r1, #12]
     dc0:	421a      	tst	r2, r3
     dc2:	d0fc      	beq.n	dbe <system_clock_source_enable+0x5a>
     dc4:	4a10      	ldr	r2, [pc, #64]	; (e08 <system_clock_source_enable+0xa4>)
     dc6:	6891      	ldr	r1, [r2, #8]
     dc8:	4b0e      	ldr	r3, [pc, #56]	; (e04 <system_clock_source_enable+0xa0>)
     dca:	62d9      	str	r1, [r3, #44]	; 0x2c
     dcc:	6852      	ldr	r2, [r2, #4]
     dce:	629a      	str	r2, [r3, #40]	; 0x28
     dd0:	2200      	movs	r2, #0
     dd2:	849a      	strh	r2, [r3, #36]	; 0x24
     dd4:	0019      	movs	r1, r3
     dd6:	3210      	adds	r2, #16
     dd8:	68cb      	ldr	r3, [r1, #12]
     dda:	421a      	tst	r2, r3
     ddc:	d0fc      	beq.n	dd8 <system_clock_source_enable+0x74>
     dde:	4b0a      	ldr	r3, [pc, #40]	; (e08 <system_clock_source_enable+0xa4>)
     de0:	681b      	ldr	r3, [r3, #0]
     de2:	b29b      	uxth	r3, r3
     de4:	4a07      	ldr	r2, [pc, #28]	; (e04 <system_clock_source_enable+0xa0>)
     de6:	8493      	strh	r3, [r2, #36]	; 0x24
     de8:	2000      	movs	r0, #0
     dea:	e008      	b.n	dfe <system_clock_source_enable+0x9a>
     dec:	4905      	ldr	r1, [pc, #20]	; (e04 <system_clock_source_enable+0xa0>)
     dee:	2244      	movs	r2, #68	; 0x44
     df0:	5c8b      	ldrb	r3, [r1, r2]
     df2:	2002      	movs	r0, #2
     df4:	4303      	orrs	r3, r0
     df6:	548b      	strb	r3, [r1, r2]
     df8:	2000      	movs	r0, #0
     dfa:	e000      	b.n	dfe <system_clock_source_enable+0x9a>
     dfc:	2000      	movs	r0, #0
     dfe:	4770      	bx	lr
     e00:	00003190 	.word	0x00003190
     e04:	40000800 	.word	0x40000800
     e08:	200000d4 	.word	0x200000d4

00000e0c <system_clock_init>:
     e0c:	b530      	push	{r4, r5, lr}
     e0e:	b085      	sub	sp, #20
     e10:	22c2      	movs	r2, #194	; 0xc2
     e12:	00d2      	lsls	r2, r2, #3
     e14:	4b1a      	ldr	r3, [pc, #104]	; (e80 <system_clock_init+0x74>)
     e16:	609a      	str	r2, [r3, #8]
     e18:	4a1a      	ldr	r2, [pc, #104]	; (e84 <system_clock_init+0x78>)
     e1a:	6853      	ldr	r3, [r2, #4]
     e1c:	211e      	movs	r1, #30
     e1e:	438b      	bics	r3, r1
     e20:	6053      	str	r3, [r2, #4]
     e22:	2301      	movs	r3, #1
     e24:	466a      	mov	r2, sp
     e26:	7013      	strb	r3, [r2, #0]
     e28:	2400      	movs	r4, #0
     e2a:	4d17      	ldr	r5, [pc, #92]	; (e88 <system_clock_init+0x7c>)
     e2c:	b2e0      	uxtb	r0, r4
     e2e:	4669      	mov	r1, sp
     e30:	47a8      	blx	r5
     e32:	3401      	adds	r4, #1
     e34:	2c25      	cmp	r4, #37	; 0x25
     e36:	d1f9      	bne.n	e2c <system_clock_init+0x20>
     e38:	a803      	add	r0, sp, #12
     e3a:	2400      	movs	r4, #0
     e3c:	7044      	strb	r4, [r0, #1]
     e3e:	2501      	movs	r5, #1
     e40:	7085      	strb	r5, [r0, #2]
     e42:	7004      	strb	r4, [r0, #0]
     e44:	4b11      	ldr	r3, [pc, #68]	; (e8c <system_clock_init+0x80>)
     e46:	4798      	blx	r3
     e48:	2006      	movs	r0, #6
     e4a:	4b11      	ldr	r3, [pc, #68]	; (e90 <system_clock_init+0x84>)
     e4c:	4798      	blx	r3
     e4e:	4b11      	ldr	r3, [pc, #68]	; (e94 <system_clock_init+0x88>)
     e50:	4798      	blx	r3
     e52:	4b11      	ldr	r3, [pc, #68]	; (e98 <system_clock_init+0x8c>)
     e54:	721c      	strb	r4, [r3, #8]
     e56:	725c      	strb	r4, [r3, #9]
     e58:	729c      	strb	r4, [r3, #10]
     e5a:	72dc      	strb	r4, [r3, #11]
     e5c:	9501      	str	r5, [sp, #4]
     e5e:	466b      	mov	r3, sp
     e60:	705c      	strb	r4, [r3, #1]
     e62:	2306      	movs	r3, #6
     e64:	466a      	mov	r2, sp
     e66:	7013      	strb	r3, [r2, #0]
     e68:	7214      	strb	r4, [r2, #8]
     e6a:	7254      	strb	r4, [r2, #9]
     e6c:	4669      	mov	r1, sp
     e6e:	2000      	movs	r0, #0
     e70:	4b0a      	ldr	r3, [pc, #40]	; (e9c <system_clock_init+0x90>)
     e72:	4798      	blx	r3
     e74:	2000      	movs	r0, #0
     e76:	4b0a      	ldr	r3, [pc, #40]	; (ea0 <system_clock_init+0x94>)
     e78:	4798      	blx	r3
     e7a:	b005      	add	sp, #20
     e7c:	bd30      	pop	{r4, r5, pc}
     e7e:	46c0      	nop			; (mov r8, r8)
     e80:	40000800 	.word	0x40000800
     e84:	41004000 	.word	0x41004000
     e88:	000010dd 	.word	0x000010dd
     e8c:	00000d29 	.word	0x00000d29
     e90:	00000d65 	.word	0x00000d65
     e94:	00000ea5 	.word	0x00000ea5
     e98:	40000400 	.word	0x40000400
     e9c:	00000ec9 	.word	0x00000ec9
     ea0:	00000f81 	.word	0x00000f81

00000ea4 <system_gclk_init>:
     ea4:	4a06      	ldr	r2, [pc, #24]	; (ec0 <system_gclk_init+0x1c>)
     ea6:	6993      	ldr	r3, [r2, #24]
     ea8:	2108      	movs	r1, #8
     eaa:	430b      	orrs	r3, r1
     eac:	6193      	str	r3, [r2, #24]
     eae:	2201      	movs	r2, #1
     eb0:	4b04      	ldr	r3, [pc, #16]	; (ec4 <system_gclk_init+0x20>)
     eb2:	701a      	strb	r2, [r3, #0]
     eb4:	0019      	movs	r1, r3
     eb6:	780b      	ldrb	r3, [r1, #0]
     eb8:	4213      	tst	r3, r2
     eba:	d1fc      	bne.n	eb6 <system_gclk_init+0x12>
     ebc:	4770      	bx	lr
     ebe:	46c0      	nop			; (mov r8, r8)
     ec0:	40000400 	.word	0x40000400
     ec4:	40000c00 	.word	0x40000c00

00000ec8 <system_gclk_gen_set_config>:
     ec8:	b570      	push	{r4, r5, r6, lr}
     eca:	0006      	movs	r6, r0
     ecc:	0004      	movs	r4, r0
     ece:	780d      	ldrb	r5, [r1, #0]
     ed0:	022d      	lsls	r5, r5, #8
     ed2:	4305      	orrs	r5, r0
     ed4:	784b      	ldrb	r3, [r1, #1]
     ed6:	2b00      	cmp	r3, #0
     ed8:	d002      	beq.n	ee0 <system_gclk_gen_set_config+0x18>
     eda:	2380      	movs	r3, #128	; 0x80
     edc:	02db      	lsls	r3, r3, #11
     ede:	431d      	orrs	r5, r3
     ee0:	7a4b      	ldrb	r3, [r1, #9]
     ee2:	2b00      	cmp	r3, #0
     ee4:	d002      	beq.n	eec <system_gclk_gen_set_config+0x24>
     ee6:	2380      	movs	r3, #128	; 0x80
     ee8:	031b      	lsls	r3, r3, #12
     eea:	431d      	orrs	r5, r3
     eec:	6848      	ldr	r0, [r1, #4]
     eee:	2801      	cmp	r0, #1
     ef0:	d910      	bls.n	f14 <system_gclk_gen_set_config+0x4c>
     ef2:	1e43      	subs	r3, r0, #1
     ef4:	4218      	tst	r0, r3
     ef6:	d134      	bne.n	f62 <system_gclk_gen_set_config+0x9a>
     ef8:	2802      	cmp	r0, #2
     efa:	d930      	bls.n	f5e <system_gclk_gen_set_config+0x96>
     efc:	2302      	movs	r3, #2
     efe:	2200      	movs	r2, #0
     f00:	3201      	adds	r2, #1
     f02:	005b      	lsls	r3, r3, #1
     f04:	4298      	cmp	r0, r3
     f06:	d8fb      	bhi.n	f00 <system_gclk_gen_set_config+0x38>
     f08:	0212      	lsls	r2, r2, #8
     f0a:	4332      	orrs	r2, r6
     f0c:	0014      	movs	r4, r2
     f0e:	2380      	movs	r3, #128	; 0x80
     f10:	035b      	lsls	r3, r3, #13
     f12:	431d      	orrs	r5, r3
     f14:	7a0b      	ldrb	r3, [r1, #8]
     f16:	2b00      	cmp	r3, #0
     f18:	d002      	beq.n	f20 <system_gclk_gen_set_config+0x58>
     f1a:	2380      	movs	r3, #128	; 0x80
     f1c:	039b      	lsls	r3, r3, #14
     f1e:	431d      	orrs	r5, r3
     f20:	4a13      	ldr	r2, [pc, #76]	; (f70 <system_gclk_gen_set_config+0xa8>)
     f22:	7853      	ldrb	r3, [r2, #1]
     f24:	b25b      	sxtb	r3, r3
     f26:	2b00      	cmp	r3, #0
     f28:	dbfb      	blt.n	f22 <system_gclk_gen_set_config+0x5a>
     f2a:	4b12      	ldr	r3, [pc, #72]	; (f74 <system_gclk_gen_set_config+0xac>)
     f2c:	4798      	blx	r3
     f2e:	4b12      	ldr	r3, [pc, #72]	; (f78 <system_gclk_gen_set_config+0xb0>)
     f30:	701e      	strb	r6, [r3, #0]
     f32:	4a0f      	ldr	r2, [pc, #60]	; (f70 <system_gclk_gen_set_config+0xa8>)
     f34:	7853      	ldrb	r3, [r2, #1]
     f36:	b25b      	sxtb	r3, r3
     f38:	2b00      	cmp	r3, #0
     f3a:	dbfb      	blt.n	f34 <system_gclk_gen_set_config+0x6c>
     f3c:	4b0c      	ldr	r3, [pc, #48]	; (f70 <system_gclk_gen_set_config+0xa8>)
     f3e:	609c      	str	r4, [r3, #8]
     f40:	001a      	movs	r2, r3
     f42:	7853      	ldrb	r3, [r2, #1]
     f44:	b25b      	sxtb	r3, r3
     f46:	2b00      	cmp	r3, #0
     f48:	dbfb      	blt.n	f42 <system_gclk_gen_set_config+0x7a>
     f4a:	4a09      	ldr	r2, [pc, #36]	; (f70 <system_gclk_gen_set_config+0xa8>)
     f4c:	6853      	ldr	r3, [r2, #4]
     f4e:	2180      	movs	r1, #128	; 0x80
     f50:	0249      	lsls	r1, r1, #9
     f52:	400b      	ands	r3, r1
     f54:	431d      	orrs	r5, r3
     f56:	6055      	str	r5, [r2, #4]
     f58:	4b08      	ldr	r3, [pc, #32]	; (f7c <system_gclk_gen_set_config+0xb4>)
     f5a:	4798      	blx	r3
     f5c:	bd70      	pop	{r4, r5, r6, pc}
     f5e:	2200      	movs	r2, #0
     f60:	e7d2      	b.n	f08 <system_gclk_gen_set_config+0x40>
     f62:	0204      	lsls	r4, r0, #8
     f64:	4334      	orrs	r4, r6
     f66:	2380      	movs	r3, #128	; 0x80
     f68:	029b      	lsls	r3, r3, #10
     f6a:	431d      	orrs	r5, r3
     f6c:	e7d2      	b.n	f14 <system_gclk_gen_set_config+0x4c>
     f6e:	46c0      	nop			; (mov r8, r8)
     f70:	40000c00 	.word	0x40000c00
     f74:	00000c29 	.word	0x00000c29
     f78:	40000c08 	.word	0x40000c08
     f7c:	00000c69 	.word	0x00000c69

00000f80 <system_gclk_gen_enable>:
     f80:	b510      	push	{r4, lr}
     f82:	0004      	movs	r4, r0
     f84:	4a0b      	ldr	r2, [pc, #44]	; (fb4 <system_gclk_gen_enable+0x34>)
     f86:	7853      	ldrb	r3, [r2, #1]
     f88:	b25b      	sxtb	r3, r3
     f8a:	2b00      	cmp	r3, #0
     f8c:	dbfb      	blt.n	f86 <system_gclk_gen_enable+0x6>
     f8e:	4b0a      	ldr	r3, [pc, #40]	; (fb8 <system_gclk_gen_enable+0x38>)
     f90:	4798      	blx	r3
     f92:	4b0a      	ldr	r3, [pc, #40]	; (fbc <system_gclk_gen_enable+0x3c>)
     f94:	701c      	strb	r4, [r3, #0]
     f96:	4a07      	ldr	r2, [pc, #28]	; (fb4 <system_gclk_gen_enable+0x34>)
     f98:	7853      	ldrb	r3, [r2, #1]
     f9a:	b25b      	sxtb	r3, r3
     f9c:	2b00      	cmp	r3, #0
     f9e:	dbfb      	blt.n	f98 <system_gclk_gen_enable+0x18>
     fa0:	4a04      	ldr	r2, [pc, #16]	; (fb4 <system_gclk_gen_enable+0x34>)
     fa2:	6851      	ldr	r1, [r2, #4]
     fa4:	2380      	movs	r3, #128	; 0x80
     fa6:	025b      	lsls	r3, r3, #9
     fa8:	430b      	orrs	r3, r1
     faa:	6053      	str	r3, [r2, #4]
     fac:	4b04      	ldr	r3, [pc, #16]	; (fc0 <system_gclk_gen_enable+0x40>)
     fae:	4798      	blx	r3
     fb0:	bd10      	pop	{r4, pc}
     fb2:	46c0      	nop			; (mov r8, r8)
     fb4:	40000c00 	.word	0x40000c00
     fb8:	00000c29 	.word	0x00000c29
     fbc:	40000c04 	.word	0x40000c04
     fc0:	00000c69 	.word	0x00000c69

00000fc4 <system_gclk_gen_get_hz>:
     fc4:	b570      	push	{r4, r5, r6, lr}
     fc6:	0004      	movs	r4, r0
     fc8:	4a1a      	ldr	r2, [pc, #104]	; (1034 <system_gclk_gen_get_hz+0x70>)
     fca:	7853      	ldrb	r3, [r2, #1]
     fcc:	b25b      	sxtb	r3, r3
     fce:	2b00      	cmp	r3, #0
     fd0:	dbfb      	blt.n	fca <system_gclk_gen_get_hz+0x6>
     fd2:	4b19      	ldr	r3, [pc, #100]	; (1038 <system_gclk_gen_get_hz+0x74>)
     fd4:	4798      	blx	r3
     fd6:	4b19      	ldr	r3, [pc, #100]	; (103c <system_gclk_gen_get_hz+0x78>)
     fd8:	701c      	strb	r4, [r3, #0]
     fda:	4a16      	ldr	r2, [pc, #88]	; (1034 <system_gclk_gen_get_hz+0x70>)
     fdc:	7853      	ldrb	r3, [r2, #1]
     fde:	b25b      	sxtb	r3, r3
     fe0:	2b00      	cmp	r3, #0
     fe2:	dbfb      	blt.n	fdc <system_gclk_gen_get_hz+0x18>
     fe4:	4e13      	ldr	r6, [pc, #76]	; (1034 <system_gclk_gen_get_hz+0x70>)
     fe6:	6870      	ldr	r0, [r6, #4]
     fe8:	04c0      	lsls	r0, r0, #19
     fea:	0ec0      	lsrs	r0, r0, #27
     fec:	4b14      	ldr	r3, [pc, #80]	; (1040 <system_gclk_gen_get_hz+0x7c>)
     fee:	4798      	blx	r3
     ff0:	0005      	movs	r5, r0
     ff2:	4b12      	ldr	r3, [pc, #72]	; (103c <system_gclk_gen_get_hz+0x78>)
     ff4:	701c      	strb	r4, [r3, #0]
     ff6:	6876      	ldr	r6, [r6, #4]
     ff8:	02f6      	lsls	r6, r6, #11
     ffa:	0ff6      	lsrs	r6, r6, #31
     ffc:	4b11      	ldr	r3, [pc, #68]	; (1044 <system_gclk_gen_get_hz+0x80>)
     ffe:	701c      	strb	r4, [r3, #0]
    1000:	4a0c      	ldr	r2, [pc, #48]	; (1034 <system_gclk_gen_get_hz+0x70>)
    1002:	7853      	ldrb	r3, [r2, #1]
    1004:	b25b      	sxtb	r3, r3
    1006:	2b00      	cmp	r3, #0
    1008:	dbfb      	blt.n	1002 <system_gclk_gen_get_hz+0x3e>
    100a:	4b0a      	ldr	r3, [pc, #40]	; (1034 <system_gclk_gen_get_hz+0x70>)
    100c:	689c      	ldr	r4, [r3, #8]
    100e:	0224      	lsls	r4, r4, #8
    1010:	0c24      	lsrs	r4, r4, #16
    1012:	4b0d      	ldr	r3, [pc, #52]	; (1048 <system_gclk_gen_get_hz+0x84>)
    1014:	4798      	blx	r3
    1016:	2e00      	cmp	r6, #0
    1018:	d107      	bne.n	102a <system_gclk_gen_get_hz+0x66>
    101a:	2c01      	cmp	r4, #1
    101c:	d907      	bls.n	102e <system_gclk_gen_get_hz+0x6a>
    101e:	0021      	movs	r1, r4
    1020:	0028      	movs	r0, r5
    1022:	4b0a      	ldr	r3, [pc, #40]	; (104c <system_gclk_gen_get_hz+0x88>)
    1024:	4798      	blx	r3
    1026:	0005      	movs	r5, r0
    1028:	e001      	b.n	102e <system_gclk_gen_get_hz+0x6a>
    102a:	3401      	adds	r4, #1
    102c:	40e5      	lsrs	r5, r4
    102e:	0028      	movs	r0, r5
    1030:	bd70      	pop	{r4, r5, r6, pc}
    1032:	46c0      	nop			; (mov r8, r8)
    1034:	40000c00 	.word	0x40000c00
    1038:	00000c29 	.word	0x00000c29
    103c:	40000c04 	.word	0x40000c04
    1040:	00000c99 	.word	0x00000c99
    1044:	40000c08 	.word	0x40000c08
    1048:	00000c69 	.word	0x00000c69
    104c:	0000171d 	.word	0x0000171d

00001050 <system_gclk_chan_enable>:
    1050:	b510      	push	{r4, lr}
    1052:	0004      	movs	r4, r0
    1054:	4b06      	ldr	r3, [pc, #24]	; (1070 <system_gclk_chan_enable+0x20>)
    1056:	4798      	blx	r3
    1058:	4b06      	ldr	r3, [pc, #24]	; (1074 <system_gclk_chan_enable+0x24>)
    105a:	701c      	strb	r4, [r3, #0]
    105c:	4a06      	ldr	r2, [pc, #24]	; (1078 <system_gclk_chan_enable+0x28>)
    105e:	8853      	ldrh	r3, [r2, #2]
    1060:	2180      	movs	r1, #128	; 0x80
    1062:	01c9      	lsls	r1, r1, #7
    1064:	430b      	orrs	r3, r1
    1066:	8053      	strh	r3, [r2, #2]
    1068:	4b04      	ldr	r3, [pc, #16]	; (107c <system_gclk_chan_enable+0x2c>)
    106a:	4798      	blx	r3
    106c:	bd10      	pop	{r4, pc}
    106e:	46c0      	nop			; (mov r8, r8)
    1070:	00000c29 	.word	0x00000c29
    1074:	40000c02 	.word	0x40000c02
    1078:	40000c00 	.word	0x40000c00
    107c:	00000c69 	.word	0x00000c69

00001080 <system_gclk_chan_disable>:
    1080:	b510      	push	{r4, lr}
    1082:	0004      	movs	r4, r0
    1084:	4b0f      	ldr	r3, [pc, #60]	; (10c4 <system_gclk_chan_disable+0x44>)
    1086:	4798      	blx	r3
    1088:	4b0f      	ldr	r3, [pc, #60]	; (10c8 <system_gclk_chan_disable+0x48>)
    108a:	701c      	strb	r4, [r3, #0]
    108c:	4a0f      	ldr	r2, [pc, #60]	; (10cc <system_gclk_chan_disable+0x4c>)
    108e:	8853      	ldrh	r3, [r2, #2]
    1090:	051b      	lsls	r3, r3, #20
    1092:	0f18      	lsrs	r0, r3, #28
    1094:	8853      	ldrh	r3, [r2, #2]
    1096:	490e      	ldr	r1, [pc, #56]	; (10d0 <system_gclk_chan_disable+0x50>)
    1098:	400b      	ands	r3, r1
    109a:	8053      	strh	r3, [r2, #2]
    109c:	8853      	ldrh	r3, [r2, #2]
    109e:	490d      	ldr	r1, [pc, #52]	; (10d4 <system_gclk_chan_disable+0x54>)
    10a0:	400b      	ands	r3, r1
    10a2:	8053      	strh	r3, [r2, #2]
    10a4:	0011      	movs	r1, r2
    10a6:	2280      	movs	r2, #128	; 0x80
    10a8:	01d2      	lsls	r2, r2, #7
    10aa:	884b      	ldrh	r3, [r1, #2]
    10ac:	4213      	tst	r3, r2
    10ae:	d1fc      	bne.n	10aa <system_gclk_chan_disable+0x2a>
    10b0:	4906      	ldr	r1, [pc, #24]	; (10cc <system_gclk_chan_disable+0x4c>)
    10b2:	884a      	ldrh	r2, [r1, #2]
    10b4:	0203      	lsls	r3, r0, #8
    10b6:	4806      	ldr	r0, [pc, #24]	; (10d0 <system_gclk_chan_disable+0x50>)
    10b8:	4002      	ands	r2, r0
    10ba:	4313      	orrs	r3, r2
    10bc:	804b      	strh	r3, [r1, #2]
    10be:	4b06      	ldr	r3, [pc, #24]	; (10d8 <system_gclk_chan_disable+0x58>)
    10c0:	4798      	blx	r3
    10c2:	bd10      	pop	{r4, pc}
    10c4:	00000c29 	.word	0x00000c29
    10c8:	40000c02 	.word	0x40000c02
    10cc:	40000c00 	.word	0x40000c00
    10d0:	fffff0ff 	.word	0xfffff0ff
    10d4:	ffffbfff 	.word	0xffffbfff
    10d8:	00000c69 	.word	0x00000c69

000010dc <system_gclk_chan_set_config>:
    10dc:	b510      	push	{r4, lr}
    10de:	780c      	ldrb	r4, [r1, #0]
    10e0:	0224      	lsls	r4, r4, #8
    10e2:	4304      	orrs	r4, r0
    10e4:	4b02      	ldr	r3, [pc, #8]	; (10f0 <system_gclk_chan_set_config+0x14>)
    10e6:	4798      	blx	r3
    10e8:	b2a4      	uxth	r4, r4
    10ea:	4b02      	ldr	r3, [pc, #8]	; (10f4 <system_gclk_chan_set_config+0x18>)
    10ec:	805c      	strh	r4, [r3, #2]
    10ee:	bd10      	pop	{r4, pc}
    10f0:	00001081 	.word	0x00001081
    10f4:	40000c00 	.word	0x40000c00

000010f8 <system_gclk_chan_get_hz>:
    10f8:	b510      	push	{r4, lr}
    10fa:	0004      	movs	r4, r0
    10fc:	4b06      	ldr	r3, [pc, #24]	; (1118 <system_gclk_chan_get_hz+0x20>)
    10fe:	4798      	blx	r3
    1100:	4b06      	ldr	r3, [pc, #24]	; (111c <system_gclk_chan_get_hz+0x24>)
    1102:	701c      	strb	r4, [r3, #0]
    1104:	4b06      	ldr	r3, [pc, #24]	; (1120 <system_gclk_chan_get_hz+0x28>)
    1106:	885c      	ldrh	r4, [r3, #2]
    1108:	0524      	lsls	r4, r4, #20
    110a:	0f24      	lsrs	r4, r4, #28
    110c:	4b05      	ldr	r3, [pc, #20]	; (1124 <system_gclk_chan_get_hz+0x2c>)
    110e:	4798      	blx	r3
    1110:	0020      	movs	r0, r4
    1112:	4b05      	ldr	r3, [pc, #20]	; (1128 <system_gclk_chan_get_hz+0x30>)
    1114:	4798      	blx	r3
    1116:	bd10      	pop	{r4, pc}
    1118:	00000c29 	.word	0x00000c29
    111c:	40000c02 	.word	0x40000c02
    1120:	40000c00 	.word	0x40000c00
    1124:	00000c69 	.word	0x00000c69
    1128:	00000fc5 	.word	0x00000fc5

0000112c <_system_pinmux_config>:
    112c:	b530      	push	{r4, r5, lr}
    112e:	78d3      	ldrb	r3, [r2, #3]
    1130:	2b00      	cmp	r3, #0
    1132:	d135      	bne.n	11a0 <_system_pinmux_config+0x74>
    1134:	7813      	ldrb	r3, [r2, #0]
    1136:	2b80      	cmp	r3, #128	; 0x80
    1138:	d029      	beq.n	118e <_system_pinmux_config+0x62>
    113a:	061b      	lsls	r3, r3, #24
    113c:	2480      	movs	r4, #128	; 0x80
    113e:	0264      	lsls	r4, r4, #9
    1140:	4323      	orrs	r3, r4
    1142:	7854      	ldrb	r4, [r2, #1]
    1144:	2502      	movs	r5, #2
    1146:	43ac      	bics	r4, r5
    1148:	d106      	bne.n	1158 <_system_pinmux_config+0x2c>
    114a:	7894      	ldrb	r4, [r2, #2]
    114c:	2c00      	cmp	r4, #0
    114e:	d120      	bne.n	1192 <_system_pinmux_config+0x66>
    1150:	2480      	movs	r4, #128	; 0x80
    1152:	02a4      	lsls	r4, r4, #10
    1154:	4323      	orrs	r3, r4
    1156:	6041      	str	r1, [r0, #4]
    1158:	7854      	ldrb	r4, [r2, #1]
    115a:	3c01      	subs	r4, #1
    115c:	2c01      	cmp	r4, #1
    115e:	d91c      	bls.n	119a <_system_pinmux_config+0x6e>
    1160:	040d      	lsls	r5, r1, #16
    1162:	0c2d      	lsrs	r5, r5, #16
    1164:	24a0      	movs	r4, #160	; 0xa0
    1166:	05e4      	lsls	r4, r4, #23
    1168:	432c      	orrs	r4, r5
    116a:	431c      	orrs	r4, r3
    116c:	6284      	str	r4, [r0, #40]	; 0x28
    116e:	0c0d      	lsrs	r5, r1, #16
    1170:	24d0      	movs	r4, #208	; 0xd0
    1172:	0624      	lsls	r4, r4, #24
    1174:	432c      	orrs	r4, r5
    1176:	431c      	orrs	r4, r3
    1178:	6284      	str	r4, [r0, #40]	; 0x28
    117a:	78d4      	ldrb	r4, [r2, #3]
    117c:	2c00      	cmp	r4, #0
    117e:	d122      	bne.n	11c6 <_system_pinmux_config+0x9a>
    1180:	035b      	lsls	r3, r3, #13
    1182:	d51c      	bpl.n	11be <_system_pinmux_config+0x92>
    1184:	7893      	ldrb	r3, [r2, #2]
    1186:	2b01      	cmp	r3, #1
    1188:	d01e      	beq.n	11c8 <_system_pinmux_config+0x9c>
    118a:	6141      	str	r1, [r0, #20]
    118c:	e017      	b.n	11be <_system_pinmux_config+0x92>
    118e:	2300      	movs	r3, #0
    1190:	e7d7      	b.n	1142 <_system_pinmux_config+0x16>
    1192:	24c0      	movs	r4, #192	; 0xc0
    1194:	02e4      	lsls	r4, r4, #11
    1196:	4323      	orrs	r3, r4
    1198:	e7dd      	b.n	1156 <_system_pinmux_config+0x2a>
    119a:	4c0d      	ldr	r4, [pc, #52]	; (11d0 <_system_pinmux_config+0xa4>)
    119c:	4023      	ands	r3, r4
    119e:	e7df      	b.n	1160 <_system_pinmux_config+0x34>
    11a0:	6041      	str	r1, [r0, #4]
    11a2:	040c      	lsls	r4, r1, #16
    11a4:	0c24      	lsrs	r4, r4, #16
    11a6:	23a0      	movs	r3, #160	; 0xa0
    11a8:	05db      	lsls	r3, r3, #23
    11aa:	4323      	orrs	r3, r4
    11ac:	6283      	str	r3, [r0, #40]	; 0x28
    11ae:	0c0c      	lsrs	r4, r1, #16
    11b0:	23d0      	movs	r3, #208	; 0xd0
    11b2:	061b      	lsls	r3, r3, #24
    11b4:	4323      	orrs	r3, r4
    11b6:	6283      	str	r3, [r0, #40]	; 0x28
    11b8:	78d3      	ldrb	r3, [r2, #3]
    11ba:	2b00      	cmp	r3, #0
    11bc:	d103      	bne.n	11c6 <_system_pinmux_config+0x9a>
    11be:	7853      	ldrb	r3, [r2, #1]
    11c0:	3b01      	subs	r3, #1
    11c2:	2b01      	cmp	r3, #1
    11c4:	d902      	bls.n	11cc <_system_pinmux_config+0xa0>
    11c6:	bd30      	pop	{r4, r5, pc}
    11c8:	6181      	str	r1, [r0, #24]
    11ca:	e7f8      	b.n	11be <_system_pinmux_config+0x92>
    11cc:	6081      	str	r1, [r0, #8]
    11ce:	e7fa      	b.n	11c6 <_system_pinmux_config+0x9a>
    11d0:	fffbffff 	.word	0xfffbffff

000011d4 <system_pinmux_pin_set_config>:
    11d4:	b510      	push	{r4, lr}
    11d6:	000a      	movs	r2, r1
    11d8:	09c1      	lsrs	r1, r0, #7
    11da:	2300      	movs	r3, #0
    11dc:	2900      	cmp	r1, #0
    11de:	d104      	bne.n	11ea <system_pinmux_pin_set_config+0x16>
    11e0:	0943      	lsrs	r3, r0, #5
    11e2:	01db      	lsls	r3, r3, #7
    11e4:	4905      	ldr	r1, [pc, #20]	; (11fc <system_pinmux_pin_set_config+0x28>)
    11e6:	468c      	mov	ip, r1
    11e8:	4463      	add	r3, ip
    11ea:	241f      	movs	r4, #31
    11ec:	4020      	ands	r0, r4
    11ee:	2101      	movs	r1, #1
    11f0:	4081      	lsls	r1, r0
    11f2:	0018      	movs	r0, r3
    11f4:	4b02      	ldr	r3, [pc, #8]	; (1200 <system_pinmux_pin_set_config+0x2c>)
    11f6:	4798      	blx	r3
    11f8:	bd10      	pop	{r4, pc}
    11fa:	46c0      	nop			; (mov r8, r8)
    11fc:	41004400 	.word	0x41004400
    1200:	0000112d 	.word	0x0000112d

00001204 <_system_dummy_init>:
    1204:	4770      	bx	lr
	...

00001208 <system_init>:
    1208:	b510      	push	{r4, lr}
    120a:	4b05      	ldr	r3, [pc, #20]	; (1220 <system_init+0x18>)
    120c:	4798      	blx	r3
    120e:	4b05      	ldr	r3, [pc, #20]	; (1224 <system_init+0x1c>)
    1210:	4798      	blx	r3
    1212:	4b05      	ldr	r3, [pc, #20]	; (1228 <system_init+0x20>)
    1214:	4798      	blx	r3
    1216:	4b05      	ldr	r3, [pc, #20]	; (122c <system_init+0x24>)
    1218:	4798      	blx	r3
    121a:	4b05      	ldr	r3, [pc, #20]	; (1230 <system_init+0x28>)
    121c:	4798      	blx	r3
    121e:	bd10      	pop	{r4, pc}
    1220:	00000e0d 	.word	0x00000e0d
    1224:	00000c25 	.word	0x00000c25
    1228:	00001205 	.word	0x00001205
    122c:	00001205 	.word	0x00001205
    1230:	00001205 	.word	0x00001205

00001234 <Dummy_Handler>:
    1234:	e7fe      	b.n	1234 <Dummy_Handler>
	...

00001238 <Reset_Handler>:
    1238:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    123a:	4a2a      	ldr	r2, [pc, #168]	; (12e4 <Reset_Handler+0xac>)
    123c:	4b2a      	ldr	r3, [pc, #168]	; (12e8 <Reset_Handler+0xb0>)
    123e:	429a      	cmp	r2, r3
    1240:	d011      	beq.n	1266 <Reset_Handler+0x2e>
    1242:	001a      	movs	r2, r3
    1244:	4b29      	ldr	r3, [pc, #164]	; (12ec <Reset_Handler+0xb4>)
    1246:	429a      	cmp	r2, r3
    1248:	d20d      	bcs.n	1266 <Reset_Handler+0x2e>
    124a:	4a29      	ldr	r2, [pc, #164]	; (12f0 <Reset_Handler+0xb8>)
    124c:	3303      	adds	r3, #3
    124e:	1a9b      	subs	r3, r3, r2
    1250:	089b      	lsrs	r3, r3, #2
    1252:	3301      	adds	r3, #1
    1254:	009b      	lsls	r3, r3, #2
    1256:	2200      	movs	r2, #0
    1258:	4823      	ldr	r0, [pc, #140]	; (12e8 <Reset_Handler+0xb0>)
    125a:	4922      	ldr	r1, [pc, #136]	; (12e4 <Reset_Handler+0xac>)
    125c:	588c      	ldr	r4, [r1, r2]
    125e:	5084      	str	r4, [r0, r2]
    1260:	3204      	adds	r2, #4
    1262:	429a      	cmp	r2, r3
    1264:	d1fa      	bne.n	125c <Reset_Handler+0x24>
    1266:	4a23      	ldr	r2, [pc, #140]	; (12f4 <Reset_Handler+0xbc>)
    1268:	4b23      	ldr	r3, [pc, #140]	; (12f8 <Reset_Handler+0xc0>)
    126a:	429a      	cmp	r2, r3
    126c:	d20a      	bcs.n	1284 <Reset_Handler+0x4c>
    126e:	43d3      	mvns	r3, r2
    1270:	4921      	ldr	r1, [pc, #132]	; (12f8 <Reset_Handler+0xc0>)
    1272:	185b      	adds	r3, r3, r1
    1274:	2103      	movs	r1, #3
    1276:	438b      	bics	r3, r1
    1278:	3304      	adds	r3, #4
    127a:	189b      	adds	r3, r3, r2
    127c:	2100      	movs	r1, #0
    127e:	c202      	stmia	r2!, {r1}
    1280:	4293      	cmp	r3, r2
    1282:	d1fc      	bne.n	127e <Reset_Handler+0x46>
    1284:	4a1d      	ldr	r2, [pc, #116]	; (12fc <Reset_Handler+0xc4>)
    1286:	21ff      	movs	r1, #255	; 0xff
    1288:	4b1d      	ldr	r3, [pc, #116]	; (1300 <Reset_Handler+0xc8>)
    128a:	438b      	bics	r3, r1
    128c:	6093      	str	r3, [r2, #8]
    128e:	39fd      	subs	r1, #253	; 0xfd
    1290:	2390      	movs	r3, #144	; 0x90
    1292:	005b      	lsls	r3, r3, #1
    1294:	4a1b      	ldr	r2, [pc, #108]	; (1304 <Reset_Handler+0xcc>)
    1296:	50d1      	str	r1, [r2, r3]
    1298:	4a1b      	ldr	r2, [pc, #108]	; (1308 <Reset_Handler+0xd0>)
    129a:	78d3      	ldrb	r3, [r2, #3]
    129c:	2503      	movs	r5, #3
    129e:	43ab      	bics	r3, r5
    12a0:	2402      	movs	r4, #2
    12a2:	4323      	orrs	r3, r4
    12a4:	70d3      	strb	r3, [r2, #3]
    12a6:	78d3      	ldrb	r3, [r2, #3]
    12a8:	270c      	movs	r7, #12
    12aa:	43bb      	bics	r3, r7
    12ac:	2608      	movs	r6, #8
    12ae:	4333      	orrs	r3, r6
    12b0:	70d3      	strb	r3, [r2, #3]
    12b2:	4b16      	ldr	r3, [pc, #88]	; (130c <Reset_Handler+0xd4>)
    12b4:	7b98      	ldrb	r0, [r3, #14]
    12b6:	2230      	movs	r2, #48	; 0x30
    12b8:	4390      	bics	r0, r2
    12ba:	2220      	movs	r2, #32
    12bc:	4310      	orrs	r0, r2
    12be:	7398      	strb	r0, [r3, #14]
    12c0:	7b99      	ldrb	r1, [r3, #14]
    12c2:	43b9      	bics	r1, r7
    12c4:	4331      	orrs	r1, r6
    12c6:	7399      	strb	r1, [r3, #14]
    12c8:	7b9a      	ldrb	r2, [r3, #14]
    12ca:	43aa      	bics	r2, r5
    12cc:	4322      	orrs	r2, r4
    12ce:	739a      	strb	r2, [r3, #14]
    12d0:	4a0f      	ldr	r2, [pc, #60]	; (1310 <Reset_Handler+0xd8>)
    12d2:	6853      	ldr	r3, [r2, #4]
    12d4:	2180      	movs	r1, #128	; 0x80
    12d6:	430b      	orrs	r3, r1
    12d8:	6053      	str	r3, [r2, #4]
    12da:	4b0e      	ldr	r3, [pc, #56]	; (1314 <Reset_Handler+0xdc>)
    12dc:	4798      	blx	r3
    12de:	4b0e      	ldr	r3, [pc, #56]	; (1318 <Reset_Handler+0xe0>)
    12e0:	4798      	blx	r3
    12e2:	e7fe      	b.n	12e2 <Reset_Handler+0xaa>
    12e4:	00003254 	.word	0x00003254
    12e8:	20000000 	.word	0x20000000
    12ec:	2000000c 	.word	0x2000000c
    12f0:	20000004 	.word	0x20000004
    12f4:	2000000c 	.word	0x2000000c
    12f8:	20000168 	.word	0x20000168
    12fc:	e000ed00 	.word	0xe000ed00
    1300:	00000000 	.word	0x00000000
    1304:	41007000 	.word	0x41007000
    1308:	41005000 	.word	0x41005000
    130c:	41004800 	.word	0x41004800
    1310:	41004000 	.word	0x41004000
    1314:	000030fd 	.word	0x000030fd
    1318:	000016e1 	.word	0x000016e1

0000131c <bmp280_compensate_temperature_int32>:
 *
 *  @return Actual temperature output as s32
 *
 */
s32 bmp280_compensate_temperature_int32(s32 v_uncomp_temperature_s32)
{
    131c:	b510      	push	{r4, lr}
	s32 temperature = BMP280_INIT_VALUE;
	/* calculate true temperature*/
	/*calculate x1*/
	v_x1_u32r = ((((v_uncomp_temperature_s32
			>> BMP280_SHIFT_BIT_POSITION_BY_03_BITS)
			- ((s32)p_bmp280->calib_param.dig_T1
    131e:	4b0c      	ldr	r3, [pc, #48]	; (1350 <bmp280_compensate_temperature_int32+0x34>)
    1320:	6819      	ldr	r1, [r3, #0]
    1322:	880a      	ldrh	r2, [r1, #0]
			<< BMP280_SHIFT_BIT_POSITION_BY_01_BIT)))
			* ((s32)p_bmp280->calib_param.dig_T2))
			>> BMP280_SHIFT_BIT_POSITION_BY_11_BITS;
	/*calculate x2*/
	v_x2_u32r = (((((v_uncomp_temperature_s32
			>> BMP280_SHIFT_BIT_POSITION_BY_04_BITS)
    1324:	1103      	asrs	r3, r0, #4
			- ((s32)p_bmp280->calib_param.dig_T1))
    1326:	1a9b      	subs	r3, r3, r2
			>> BMP280_SHIFT_BIT_POSITION_BY_03_BITS)
    1328:	10c0      	asrs	r0, r0, #3
			<< BMP280_SHIFT_BIT_POSITION_BY_01_BIT)))
    132a:	0052      	lsls	r2, r2, #1
			- ((s32)p_bmp280->calib_param.dig_T1
    132c:	1a82      	subs	r2, r0, r2
			* ((s32)p_bmp280->calib_param.dig_T2))
    132e:	2402      	movs	r4, #2
    1330:	5f08      	ldrsh	r0, [r1, r4]
    1332:	4350      	muls	r0, r2
	v_x1_u32r = ((((v_uncomp_temperature_s32
    1334:	12c0      	asrs	r0, r0, #11
			* ((v_uncomp_temperature_s32
    1336:	435b      	muls	r3, r3
			>> BMP280_SHIFT_BIT_POSITION_BY_04_BITS)
			- ((s32)p_bmp280->calib_param.dig_T1)))
			>> BMP280_SHIFT_BIT_POSITION_BY_12_BITS)
    1338:	131b      	asrs	r3, r3, #12
			* ((s32)p_bmp280->calib_param.dig_T3))
    133a:	2404      	movs	r4, #4
    133c:	5f0a      	ldrsh	r2, [r1, r4]
    133e:	4353      	muls	r3, r2
	v_x2_u32r = (((((v_uncomp_temperature_s32
    1340:	139b      	asrs	r3, r3, #14
			>> BMP280_SHIFT_BIT_POSITION_BY_14_BITS;
	/*calculate t_fine*/
	p_bmp280->calib_param.t_fine = v_x1_u32r + v_x2_u32r;
    1342:	18c0      	adds	r0, r0, r3
    1344:	6188      	str	r0, [r1, #24]
	/*calculate temperature*/
	temperature = (p_bmp280->calib_param.t_fine * 5 + 128)
    1346:	0083      	lsls	r3, r0, #2
    1348:	1818      	adds	r0, r3, r0
    134a:	3080      	adds	r0, #128	; 0x80
    134c:	1200      	asrs	r0, r0, #8
			>> BMP280_SHIFT_BIT_POSITION_BY_08_BITS;

	return temperature;
}
    134e:	bd10      	pop	{r4, pc}
    1350:	200000ec 	.word	0x200000ec

00001354 <bmp280_compensate_pressure_int32>:
 *
 *  @return Returns the Actual pressure out put as s32
 *
 */
u32 bmp280_compensate_pressure_int32(s32 v_uncomp_pressure_s32)
{
    1354:	b570      	push	{r4, r5, r6, lr}
	s32 v_x1_u32r = BMP280_INIT_VALUE;
	s32 v_x2_u32r = BMP280_INIT_VALUE;
	u32 v_pressure_u32 = BMP280_INIT_VALUE;
	/* calculate x1*/
	v_x1_u32r = (((s32)p_bmp280->calib_param.t_fine)
    1356:	4b28      	ldr	r3, [pc, #160]	; (13f8 <bmp280_compensate_pressure_int32+0xa4>)
    1358:	681c      	ldr	r4, [r3, #0]
			>> BMP280_SHIFT_BIT_POSITION_BY_01_BIT) - (s32)64000;
    135a:	69a3      	ldr	r3, [r4, #24]
    135c:	105a      	asrs	r2, r3, #1
	v_x1_u32r = (((s32)p_bmp280->calib_param.t_fine)
    135e:	4b27      	ldr	r3, [pc, #156]	; (13fc <bmp280_compensate_pressure_int32+0xa8>)
    1360:	469c      	mov	ip, r3
    1362:	4462      	add	r2, ip
	/* calculate x2*/
	v_x2_u32r = (((v_x1_u32r >> BMP280_SHIFT_BIT_POSITION_BY_02_BITS)
    1364:	1093      	asrs	r3, r2, #2
			* (v_x1_u32r >> BMP280_SHIFT_BIT_POSITION_BY_02_BITS))
    1366:	435b      	muls	r3, r3
			>> BMP280_SHIFT_BIT_POSITION_BY_11_BITS)
    1368:	12d9      	asrs	r1, r3, #11
			* ((s32)p_bmp280->calib_param.dig_P6);
    136a:	2610      	movs	r6, #16
    136c:	5fa5      	ldrsh	r5, [r4, r6]
	v_x2_u32r = (((v_x1_u32r >> BMP280_SHIFT_BIT_POSITION_BY_02_BITS)
    136e:	4369      	muls	r1, r5
	v_x2_u32r = v_x2_u32r + ((v_x1_u32r *
			((s32)p_bmp280->calib_param.dig_P5))
    1370:	260e      	movs	r6, #14
    1372:	5fa5      	ldrsh	r5, [r4, r6]
	v_x2_u32r = v_x2_u32r + ((v_x1_u32r *
    1374:	4355      	muls	r5, r2
			<< BMP280_SHIFT_BIT_POSITION_BY_01_BIT);
    1376:	006d      	lsls	r5, r5, #1
	v_x2_u32r = v_x2_u32r + ((v_x1_u32r *
    1378:	186d      	adds	r5, r5, r1
	v_x2_u32r = (v_x2_u32r >> BMP280_SHIFT_BIT_POSITION_BY_02_BITS)
    137a:	10ad      	asrs	r5, r5, #2
			+ (((s32)p_bmp280->calib_param.dig_P4)
			<< BMP280_SHIFT_BIT_POSITION_BY_16_BITS);
	/* calculate x1*/
	v_x1_u32r = (((p_bmp280->calib_param.dig_P3
    137c:	210a      	movs	r1, #10
    137e:	5e66      	ldrsh	r6, [r4, r1]
			* (((v_x1_u32r
			>> BMP280_SHIFT_BIT_POSITION_BY_02_BITS) * (v_x1_u32r
			>> BMP280_SHIFT_BIT_POSITION_BY_02_BITS))
			>> BMP280_SHIFT_BIT_POSITION_BY_13_BITS))
    1380:	1359      	asrs	r1, r3, #13
			* (((v_x1_u32r
    1382:	4371      	muls	r1, r6
			>> BMP280_SHIFT_BIT_POSITION_BY_03_BITS)
    1384:	10c9      	asrs	r1, r1, #3
			+ ((((s32)p_bmp280->calib_param.dig_P2)
    1386:	2608      	movs	r6, #8
    1388:	5fa3      	ldrsh	r3, [r4, r6]
			* v_x1_u32r)
    138a:	435a      	muls	r2, r3
			>> BMP280_SHIFT_BIT_POSITION_BY_01_BIT))
    138c:	1052      	asrs	r2, r2, #1
			+ ((((s32)p_bmp280->calib_param.dig_P2)
    138e:	1889      	adds	r1, r1, r2
	v_x1_u32r = (((p_bmp280->calib_param.dig_P3
    1390:	1489      	asrs	r1, r1, #18
			>> BMP280_SHIFT_BIT_POSITION_BY_18_BITS;
	v_x1_u32r = ((((32768 + v_x1_u32r))
    1392:	2380      	movs	r3, #128	; 0x80
    1394:	021b      	lsls	r3, r3, #8
    1396:	469c      	mov	ip, r3
    1398:	4461      	add	r1, ip
			* ((s32)p_bmp280->calib_param.dig_P1))
    139a:	88e3      	ldrh	r3, [r4, #6]
    139c:	4359      	muls	r1, r3
	v_x1_u32r = ((((32768 + v_x1_u32r))
    139e:	13c9      	asrs	r1, r1, #15
			+ (((s32)p_bmp280->calib_param.dig_P4)
    13a0:	220c      	movs	r2, #12
    13a2:	5ea3      	ldrsh	r3, [r4, r2]
			<< BMP280_SHIFT_BIT_POSITION_BY_16_BITS);
    13a4:	041b      	lsls	r3, r3, #16
	v_x2_u32r = (v_x2_u32r >> BMP280_SHIFT_BIT_POSITION_BY_02_BITS)
    13a6:	195b      	adds	r3, r3, r5
			>> BMP280_SHIFT_BIT_POSITION_BY_15_BITS);
	/* calculate pressure*/
	v_pressure_u32 = (((u32)(((s32)1048576) - v_uncomp_pressure_s32)
			- (v_x2_u32r >> BMP280_SHIFT_BIT_POSITION_BY_12_BITS)))
    13a8:	131b      	asrs	r3, r3, #12
			* 3125;
    13aa:	1818      	adds	r0, r3, r0
    13ac:	4b14      	ldr	r3, [pc, #80]	; (1400 <bmp280_compensate_pressure_int32+0xac>)
    13ae:	4343      	muls	r3, r0
	/* check overflow*/
	if (v_pressure_u32 < 0x80000000)
    13b0:	4a14      	ldr	r2, [pc, #80]	; (1404 <bmp280_compensate_pressure_int32+0xb0>)
    13b2:	189b      	adds	r3, r3, r2
    13b4:	d418      	bmi.n	13e8 <bmp280_compensate_pressure_int32+0x94>
		if (v_x1_u32r != BMP280_INIT_VALUE)
			v_pressure_u32 = (v_pressure_u32
					<< BMP280_SHIFT_BIT_POSITION_BY_01_BIT)
					/ ((u32)v_x1_u32r);
		else
			return BMP280_INVALID_DATA;
    13b6:	2000      	movs	r0, #0
		if (v_x1_u32r != BMP280_INIT_VALUE)
    13b8:	2900      	cmp	r1, #0
    13ba:	d014      	beq.n	13e6 <bmp280_compensate_pressure_int32+0x92>
					<< BMP280_SHIFT_BIT_POSITION_BY_01_BIT)
    13bc:	0058      	lsls	r0, r3, #1
			v_pressure_u32 = (v_pressure_u32
    13be:	4b12      	ldr	r3, [pc, #72]	; (1408 <bmp280_compensate_pressure_int32+0xb4>)
    13c0:	4798      	blx	r3
	else
		return BMP280_INVALID_DATA;
	/* calculate x1*/
	v_x1_u32r = (((s32)p_bmp280->calib_param.dig_P9) * ((s32)(
			((v_pressure_u32
			>> BMP280_SHIFT_BIT_POSITION_BY_03_BITS)
    13c2:	08c3      	lsrs	r3, r0, #3
			* (v_pressure_u32
    13c4:	435b      	muls	r3, r3
			>> BMP280_SHIFT_BIT_POSITION_BY_03_BITS))
			>> BMP280_SHIFT_BIT_POSITION_BY_13_BITS)))
    13c6:	0b5a      	lsrs	r2, r3, #13
	v_x1_u32r = (((s32)p_bmp280->calib_param.dig_P9) * ((s32)(
    13c8:	2116      	movs	r1, #22
    13ca:	5e63      	ldrsh	r3, [r4, r1]
    13cc:	4353      	muls	r3, r2
    13ce:	131b      	asrs	r3, r3, #12
			>> BMP280_SHIFT_BIT_POSITION_BY_12_BITS;
	/* calculate x2*/
	v_x2_u32r = (((s32)(v_pressure_u32 >>
    13d0:	0881      	lsrs	r1, r0, #2
			BMP280_SHIFT_BIT_POSITION_BY_02_BITS))
			* ((s32)p_bmp280->calib_param.dig_P8))
    13d2:	2514      	movs	r5, #20
    13d4:	5f62      	ldrsh	r2, [r4, r5]
    13d6:	434a      	muls	r2, r1
	v_x2_u32r = (((s32)(v_pressure_u32 >>
    13d8:	1352      	asrs	r2, r2, #13
			>> BMP280_SHIFT_BIT_POSITION_BY_13_BITS;
	/* calculate true pressure*/
	v_pressure_u32 = (u32)((s32)v_pressure_u32 + ((v_x1_u32r + v_x2_u32r
    13da:	189b      	adds	r3, r3, r2
			+ p_bmp280->calib_param.dig_P7)
    13dc:	2112      	movs	r1, #18
    13de:	5e62      	ldrsh	r2, [r4, r1]
    13e0:	189b      	adds	r3, r3, r2
			>> BMP280_SHIFT_BIT_POSITION_BY_04_BITS));
    13e2:	111b      	asrs	r3, r3, #4
	v_pressure_u32 = (u32)((s32)v_pressure_u32 + ((v_x1_u32r + v_x2_u32r
    13e4:	1818      	adds	r0, r3, r0

	return v_pressure_u32;
}
    13e6:	bd70      	pop	{r4, r5, r6, pc}
		return BMP280_INVALID_DATA;
    13e8:	2000      	movs	r0, #0
	if (v_x1_u32r != BMP280_INIT_VALUE)
    13ea:	2900      	cmp	r1, #0
    13ec:	d0fb      	beq.n	13e6 <bmp280_compensate_pressure_int32+0x92>
		v_pressure_u32 = (v_pressure_u32 / (u32)v_x1_u32r) * 2;
    13ee:	0018      	movs	r0, r3
    13f0:	4b05      	ldr	r3, [pc, #20]	; (1408 <bmp280_compensate_pressure_int32+0xb4>)
    13f2:	4798      	blx	r3
    13f4:	0040      	lsls	r0, r0, #1
    13f6:	e7e4      	b.n	13c2 <bmp280_compensate_pressure_int32+0x6e>
    13f8:	200000ec 	.word	0x200000ec
    13fc:	ffff0600 	.word	0xffff0600
    1400:	fffff3cb 	.word	0xfffff3cb
    1404:	c3500000 	.word	0xc3500000
    1408:	0000171d 	.word	0x0000171d

0000140c <bmp280_read_uncomp_pressure_temperature>:
 *	@retval -1 -> Error
 *
 */
BMP280_RETURN_FUNCTION_TYPE bmp280_read_uncomp_pressure_temperature(
		s32 *v_uncomp_pressure_s32, s32 *v_uncomp_temperature_s32)
{
    140c:	b570      	push	{r4, r5, r6, lr}
    140e:	b082      	sub	sp, #8
    1410:	0005      	movs	r5, r0
    1412:	000c      	movs	r4, r1
	 a_data_u8[2] - Pressure LSB
	 a_data_u8[3] - Temperature MSB
	 a_data_u8[4] - Temperature LSB
	 a_data_u8[5] - Temperature LSB
	 */
	u8 a_data_u8[BMP280_ALL_DATA_FRAME_LENGTH] = {BMP280_INIT_VALUE,
    1414:	2206      	movs	r2, #6
    1416:	2100      	movs	r1, #0
    1418:	4668      	mov	r0, sp
    141a:	4b14      	ldr	r3, [pc, #80]	; (146c <bmp280_read_uncomp_pressure_temperature+0x60>)
    141c:	4798      	blx	r3
			BMP280_INIT_VALUE, BMP280_INIT_VALUE, BMP280_INIT_VALUE,
			BMP280_INIT_VALUE, BMP280_INIT_VALUE};
	/* check the p_bmp280 structure pointer as NULL*/
	if (p_bmp280 == BMP280_NULL) {
    141e:	4b14      	ldr	r3, [pc, #80]	; (1470 <bmp280_read_uncomp_pressure_temperature+0x64>)
    1420:	681b      	ldr	r3, [r3, #0]
    1422:	2b00      	cmp	r3, #0
    1424:	d01f      	beq.n	1466 <bmp280_read_uncomp_pressure_temperature+0x5a>
		com_rslt = E_BMP280_NULL_PTR;
	} else {
		com_rslt = p_bmp280->BMP280_BUS_READ_FUNC(p_bmp280->dev_addr,
    1426:	7f58      	ldrb	r0, [r3, #29]
    1428:	6a5e      	ldr	r6, [r3, #36]	; 0x24
    142a:	2306      	movs	r3, #6
    142c:	466a      	mov	r2, sp
    142e:	21f7      	movs	r1, #247	; 0xf7
    1430:	47b0      	blx	r6
				BMP280_PRESSURE_MSB_REG, a_data_u8,
				BMP280_DATA_FRAME_SIZE);
		/*Pressure*/
		*v_uncomp_pressure_s32 = (s32)((((u32)(
    1432:	466b      	mov	r3, sp
    1434:	781b      	ldrb	r3, [r3, #0]
				a_data_u8[BMP280_DATA_FRAME_PRESSURE_MSB_BYTE]))
				<< BMP280_SHIFT_BIT_POSITION_BY_12_BITS)
    1436:	031b      	lsls	r3, r3, #12
				| (((u32)(
    1438:	466a      	mov	r2, sp
    143a:	7852      	ldrb	r2, [r2, #1]
				a_data_u8[BMP280_DATA_FRAME_PRESSURE_LSB_BYTE]))
				<< BMP280_SHIFT_BIT_POSITION_BY_04_BITS)
    143c:	0112      	lsls	r2, r2, #4
				| (((u32)(
    143e:	4313      	orrs	r3, r2
				| ((u32)a_data_u8[
				BMP280_DATA_FRAME_PRESSURE_XLSB_BYTE]
				>> BMP280_SHIFT_BIT_POSITION_BY_04_BITS));
    1440:	466a      	mov	r2, sp
    1442:	7892      	ldrb	r2, [r2, #2]
    1444:	0912      	lsrs	r2, r2, #4
				| ((u32)a_data_u8[
    1446:	4313      	orrs	r3, r2
		*v_uncomp_pressure_s32 = (s32)((((u32)(
    1448:	602b      	str	r3, [r5, #0]

		/* Temperature */
		*v_uncomp_temperature_s32 = (s32)((((u32)(a_data_u8[
    144a:	466b      	mov	r3, sp
    144c:	78db      	ldrb	r3, [r3, #3]
				BMP280_DATA_FRAME_TEMPERATURE_MSB_BYTE]))
				<< BMP280_SHIFT_BIT_POSITION_BY_12_BITS)
    144e:	031b      	lsls	r3, r3, #12
				| (((u32)(a_data_u8[
    1450:	466a      	mov	r2, sp
    1452:	7912      	ldrb	r2, [r2, #4]
				BMP280_DATA_FRAME_TEMPERATURE_LSB_BYTE]))
				<< BMP280_SHIFT_BIT_POSITION_BY_04_BITS)
    1454:	0112      	lsls	r2, r2, #4
				| (((u32)(a_data_u8[
    1456:	4313      	orrs	r3, r2
				| ((u32)a_data_u8[
				BMP280_DATA_FRAME_TEMPERATURE_XLSB_BYTE]
				>> BMP280_SHIFT_BIT_POSITION_BY_04_BITS));
    1458:	466a      	mov	r2, sp
    145a:	7952      	ldrb	r2, [r2, #5]
    145c:	0912      	lsrs	r2, r2, #4
				| ((u32)a_data_u8[
    145e:	4313      	orrs	r3, r2
		*v_uncomp_temperature_s32 = (s32)((((u32)(a_data_u8[
    1460:	6023      	str	r3, [r4, #0]
	}
	return com_rslt;
}
    1462:	b002      	add	sp, #8
    1464:	bd70      	pop	{r4, r5, r6, pc}
		com_rslt = E_BMP280_NULL_PTR;
    1466:	207f      	movs	r0, #127	; 0x7f
    1468:	4240      	negs	r0, r0
    146a:	e7fa      	b.n	1462 <bmp280_read_uncomp_pressure_temperature+0x56>
    146c:	00003145 	.word	0x00003145
    1470:	200000ec 	.word	0x200000ec

00001474 <bmp280_read_pressure_temperature>:
 *
 *
 */
BMP280_RETURN_FUNCTION_TYPE bmp280_read_pressure_temperature(
		u32 *v_pressure_u32, s32 *v_temperature_s32)
{
    1474:	b570      	push	{r4, r5, r6, lr}
    1476:	b082      	sub	sp, #8
    1478:	0005      	movs	r5, r0
    147a:	000e      	movs	r6, r1
	/* variable used to return communication result*/
	BMP280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
	s32 v_uncomp_pressure_s32 = BMP280_INIT_VALUE;
    147c:	2300      	movs	r3, #0
    147e:	9301      	str	r3, [sp, #4]
	s32 v_uncomp_temperature_s32 = BMP280_INIT_VALUE;
    1480:	9300      	str	r3, [sp, #0]
	/* check the p_bmp280 structure pointer as NULL*/
	if (p_bmp280 == BMP280_NULL) {
    1482:	4b0b      	ldr	r3, [pc, #44]	; (14b0 <bmp280_read_pressure_temperature+0x3c>)
    1484:	681b      	ldr	r3, [r3, #0]
    1486:	2b00      	cmp	r3, #0
    1488:	d00f      	beq.n	14aa <bmp280_read_pressure_temperature+0x36>
		com_rslt = E_BMP280_NULL_PTR;
	} else {
		/* read uncompensated pressure and temperature*/
		com_rslt = bmp280_read_uncomp_pressure_temperature(
    148a:	4669      	mov	r1, sp
    148c:	a801      	add	r0, sp, #4
    148e:	4b09      	ldr	r3, [pc, #36]	; (14b4 <bmp280_read_pressure_temperature+0x40>)
    1490:	4798      	blx	r3
    1492:	0004      	movs	r4, r0
				&v_uncomp_pressure_s32,
				&v_uncomp_temperature_s32);
		/* read true pressure and temperature*/
		*v_temperature_s32 = bmp280_compensate_temperature_int32(
    1494:	9800      	ldr	r0, [sp, #0]
    1496:	4b08      	ldr	r3, [pc, #32]	; (14b8 <bmp280_read_pressure_temperature+0x44>)
    1498:	4798      	blx	r3
    149a:	6030      	str	r0, [r6, #0]
				v_uncomp_temperature_s32);
		*v_pressure_u32 = bmp280_compensate_pressure_int32(
    149c:	9801      	ldr	r0, [sp, #4]
    149e:	4b07      	ldr	r3, [pc, #28]	; (14bc <bmp280_read_pressure_temperature+0x48>)
    14a0:	4798      	blx	r3
    14a2:	6028      	str	r0, [r5, #0]
				v_uncomp_pressure_s32);
	}
	return com_rslt;
}
    14a4:	0020      	movs	r0, r4
    14a6:	b002      	add	sp, #8
    14a8:	bd70      	pop	{r4, r5, r6, pc}
		com_rslt = E_BMP280_NULL_PTR;
    14aa:	247f      	movs	r4, #127	; 0x7f
    14ac:	4264      	negs	r4, r4
    14ae:	e7f9      	b.n	14a4 <bmp280_read_pressure_temperature+0x30>
    14b0:	200000ec 	.word	0x200000ec
    14b4:	0000140d 	.word	0x0000140d
    14b8:	0000131d 	.word	0x0000131d
    14bc:	00001355 	.word	0x00001355

000014c0 <bmp280_get_calib_param>:
 *	@retval -1 -> Error
 *
 *
 */
BMP280_RETURN_FUNCTION_TYPE bmp280_get_calib_param(void)
{
    14c0:	b510      	push	{r4, lr}
    14c2:	b086      	sub	sp, #24
	/* variable used to return communication result*/
	BMP280_RETURN_FUNCTION_TYPE com_rslt = ERROR;
	u8 a_data_u8[BMP280_CALIB_DATA_SIZE] = {BMP280_INIT_VALUE,
    14c4:	2218      	movs	r2, #24
    14c6:	2100      	movs	r1, #0
    14c8:	4668      	mov	r0, sp
    14ca:	4b32      	ldr	r3, [pc, #200]	; (1594 <bmp280_get_calib_param+0xd4>)
    14cc:	4798      	blx	r3
			BMP280_INIT_VALUE, BMP280_INIT_VALUE, BMP280_INIT_VALUE,
			BMP280_INIT_VALUE, BMP280_INIT_VALUE, BMP280_INIT_VALUE,
			BMP280_INIT_VALUE, BMP280_INIT_VALUE, BMP280_INIT_VALUE,
			BMP280_INIT_VALUE, BMP280_INIT_VALUE};
	/* check the p_bmp280 structure pointer as NULL*/
	if (p_bmp280 == BMP280_NULL) {
    14ce:	4b32      	ldr	r3, [pc, #200]	; (1598 <bmp280_get_calib_param+0xd8>)
    14d0:	681b      	ldr	r3, [r3, #0]
    14d2:	2b00      	cmp	r3, #0
    14d4:	d05b      	beq.n	158e <bmp280_get_calib_param+0xce>
		com_rslt = E_BMP280_NULL_PTR;
	} else {
		com_rslt = p_bmp280->BMP280_BUS_READ_FUNC(p_bmp280->dev_addr,
    14d6:	7f58      	ldrb	r0, [r3, #29]
    14d8:	6a5c      	ldr	r4, [r3, #36]	; 0x24
    14da:	2318      	movs	r3, #24
    14dc:	466a      	mov	r2, sp
    14de:	2188      	movs	r1, #136	; 0x88
    14e0:	47a0      	blx	r4
				BMP280_TEMPERATURE_CALIB_DIG_T1_LSB_REG,
				a_data_u8,
				BMP280_PRESSURE_TEMPERATURE_CALIB_DATA_LENGTH);
		/* read calibration values*/
		p_bmp280->calib_param.dig_T1 = (u16)((((u16)((u8)a_data_u8[
    14e2:	4b2d      	ldr	r3, [pc, #180]	; (1598 <bmp280_get_calib_param+0xd8>)
    14e4:	681b      	ldr	r3, [r3, #0]
    14e6:	466a      	mov	r2, sp
    14e8:	7851      	ldrb	r1, [r2, #1]
					BMP280_TEMPERATURE_CALIB_DIG_T1_MSB]))
					<< BMP280_SHIFT_BIT_POSITION_BY_08_BITS)
    14ea:	0209      	lsls	r1, r1, #8
					| a_data_u8[
    14ec:	7812      	ldrb	r2, [r2, #0]
    14ee:	430a      	orrs	r2, r1
		p_bmp280->calib_param.dig_T1 = (u16)((((u16)((u8)a_data_u8[
    14f0:	801a      	strh	r2, [r3, #0]
					BMP280_TEMPERATURE_CALIB_DIG_T1_LSB]);
		p_bmp280->calib_param.dig_T2 = (s16)((((s16)((s8)a_data_u8[
    14f2:	466a      	mov	r2, sp
    14f4:	2103      	movs	r1, #3
    14f6:	5651      	ldrsb	r1, [r2, r1]
					BMP280_TEMPERATURE_CALIB_DIG_T2_MSB]))
					<< BMP280_SHIFT_BIT_POSITION_BY_08_BITS)
    14f8:	0209      	lsls	r1, r1, #8
					| a_data_u8[
    14fa:	7892      	ldrb	r2, [r2, #2]
		p_bmp280->calib_param.dig_T2 = (s16)((((s16)((s8)a_data_u8[
    14fc:	430a      	orrs	r2, r1
    14fe:	805a      	strh	r2, [r3, #2]
					BMP280_TEMPERATURE_CALIB_DIG_T2_LSB]);
		p_bmp280->calib_param.dig_T3 = (s16)((((s16)((s8)a_data_u8[
    1500:	466a      	mov	r2, sp
    1502:	2105      	movs	r1, #5
    1504:	5651      	ldrsb	r1, [r2, r1]
					BMP280_TEMPERATURE_CALIB_DIG_T3_MSB]))
					<< BMP280_SHIFT_BIT_POSITION_BY_08_BITS)
    1506:	0209      	lsls	r1, r1, #8
					| a_data_u8[
    1508:	7912      	ldrb	r2, [r2, #4]
		p_bmp280->calib_param.dig_T3 = (s16)((((s16)((s8)a_data_u8[
    150a:	430a      	orrs	r2, r1
    150c:	809a      	strh	r2, [r3, #4]
					BMP280_TEMPERATURE_CALIB_DIG_T3_LSB]);
		p_bmp280->calib_param.dig_P1 = (u16)((((u16)((u8)a_data_u8[
    150e:	466a      	mov	r2, sp
    1510:	79d1      	ldrb	r1, [r2, #7]
					BMP280_PRESSURE_CALIB_DIG_P1_MSB]))
					<< BMP280_SHIFT_BIT_POSITION_BY_08_BITS)
    1512:	0209      	lsls	r1, r1, #8
					| a_data_u8[
    1514:	7992      	ldrb	r2, [r2, #6]
    1516:	430a      	orrs	r2, r1
		p_bmp280->calib_param.dig_P1 = (u16)((((u16)((u8)a_data_u8[
    1518:	80da      	strh	r2, [r3, #6]
					BMP280_PRESSURE_CALIB_DIG_P1_LSB]);
		p_bmp280->calib_param.dig_P2 = (s16)((((s16)((s8)a_data_u8[
    151a:	466a      	mov	r2, sp
    151c:	2109      	movs	r1, #9
    151e:	5651      	ldrsb	r1, [r2, r1]
					BMP280_PRESSURE_CALIB_DIG_P2_MSB]))
					<< BMP280_SHIFT_BIT_POSITION_BY_08_BITS)
    1520:	0209      	lsls	r1, r1, #8
					| a_data_u8[
    1522:	7a12      	ldrb	r2, [r2, #8]
		p_bmp280->calib_param.dig_P2 = (s16)((((s16)((s8)a_data_u8[
    1524:	430a      	orrs	r2, r1
    1526:	811a      	strh	r2, [r3, #8]
					BMP280_PRESSURE_CALIB_DIG_P2_LSB]);
		p_bmp280->calib_param.dig_P3 = (s16)((((s16)((s8)a_data_u8[
    1528:	466a      	mov	r2, sp
    152a:	210b      	movs	r1, #11
    152c:	5651      	ldrsb	r1, [r2, r1]
					BMP280_PRESSURE_CALIB_DIG_P3_MSB]))
					<< BMP280_SHIFT_BIT_POSITION_BY_08_BITS)
    152e:	0209      	lsls	r1, r1, #8
					| a_data_u8[
    1530:	7a92      	ldrb	r2, [r2, #10]
		p_bmp280->calib_param.dig_P3 = (s16)((((s16)((s8)a_data_u8[
    1532:	430a      	orrs	r2, r1
    1534:	815a      	strh	r2, [r3, #10]
					BMP280_PRESSURE_CALIB_DIG_P3_LSB]);
		p_bmp280->calib_param.dig_P4 = (s16)((((s16)((s8)a_data_u8[
    1536:	466a      	mov	r2, sp
    1538:	210d      	movs	r1, #13
    153a:	5651      	ldrsb	r1, [r2, r1]
					BMP280_PRESSURE_CALIB_DIG_P4_MSB]))
					<< BMP280_SHIFT_BIT_POSITION_BY_08_BITS)
    153c:	0209      	lsls	r1, r1, #8
					| a_data_u8[
    153e:	7b12      	ldrb	r2, [r2, #12]
		p_bmp280->calib_param.dig_P4 = (s16)((((s16)((s8)a_data_u8[
    1540:	430a      	orrs	r2, r1
    1542:	819a      	strh	r2, [r3, #12]
					BMP280_PRESSURE_CALIB_DIG_P4_LSB]);
		p_bmp280->calib_param.dig_P5 = (s16)((((s16)((s8)a_data_u8[
    1544:	466a      	mov	r2, sp
    1546:	210f      	movs	r1, #15
    1548:	5651      	ldrsb	r1, [r2, r1]
					BMP280_PRESSURE_CALIB_DIG_P5_MSB]))
					<< BMP280_SHIFT_BIT_POSITION_BY_08_BITS)
    154a:	0209      	lsls	r1, r1, #8
					| a_data_u8[
    154c:	7b92      	ldrb	r2, [r2, #14]
		p_bmp280->calib_param.dig_P5 = (s16)((((s16)((s8)a_data_u8[
    154e:	430a      	orrs	r2, r1
    1550:	81da      	strh	r2, [r3, #14]
					BMP280_PRESSURE_CALIB_DIG_P5_LSB]);
		p_bmp280->calib_param.dig_P6 = (s16)((((s16)((s8)a_data_u8[
    1552:	466a      	mov	r2, sp
    1554:	2111      	movs	r1, #17
    1556:	5651      	ldrsb	r1, [r2, r1]
					BMP280_PRESSURE_CALIB_DIG_P6_MSB]))
					<< BMP280_SHIFT_BIT_POSITION_BY_08_BITS)
    1558:	0209      	lsls	r1, r1, #8
					| a_data_u8[
    155a:	7c12      	ldrb	r2, [r2, #16]
		p_bmp280->calib_param.dig_P6 = (s16)((((s16)((s8)a_data_u8[
    155c:	430a      	orrs	r2, r1
    155e:	821a      	strh	r2, [r3, #16]
					BMP280_PRESSURE_CALIB_DIG_P6_LSB]);
		p_bmp280->calib_param.dig_P7 = (s16)((((s16)((s8)a_data_u8[
    1560:	466a      	mov	r2, sp
    1562:	2113      	movs	r1, #19
    1564:	5651      	ldrsb	r1, [r2, r1]
					BMP280_PRESSURE_CALIB_DIG_P7_MSB]))
					<< BMP280_SHIFT_BIT_POSITION_BY_08_BITS)
    1566:	0209      	lsls	r1, r1, #8
					| a_data_u8[
    1568:	7c92      	ldrb	r2, [r2, #18]
		p_bmp280->calib_param.dig_P7 = (s16)((((s16)((s8)a_data_u8[
    156a:	430a      	orrs	r2, r1
    156c:	825a      	strh	r2, [r3, #18]
					BMP280_PRESSURE_CALIB_DIG_P7_LSB]);
		p_bmp280->calib_param.dig_P8 = (s16)((((s16)((s8)a_data_u8[
    156e:	466a      	mov	r2, sp
    1570:	2115      	movs	r1, #21
    1572:	5651      	ldrsb	r1, [r2, r1]
					BMP280_PRESSURE_CALIB_DIG_P8_MSB]))
					<< BMP280_SHIFT_BIT_POSITION_BY_08_BITS)
    1574:	0209      	lsls	r1, r1, #8
					| a_data_u8[
    1576:	7d12      	ldrb	r2, [r2, #20]
		p_bmp280->calib_param.dig_P8 = (s16)((((s16)((s8)a_data_u8[
    1578:	430a      	orrs	r2, r1
    157a:	829a      	strh	r2, [r3, #20]
					BMP280_PRESSURE_CALIB_DIG_P8_LSB]);
		p_bmp280->calib_param.dig_P9 = (s16)((((s16)((s8)a_data_u8[
    157c:	466a      	mov	r2, sp
    157e:	2117      	movs	r1, #23
    1580:	5651      	ldrsb	r1, [r2, r1]
					BMP280_PRESSURE_CALIB_DIG_P9_MSB]))
					<< BMP280_SHIFT_BIT_POSITION_BY_08_BITS)
    1582:	0209      	lsls	r1, r1, #8
					| a_data_u8[
    1584:	7d92      	ldrb	r2, [r2, #22]
		p_bmp280->calib_param.dig_P9 = (s16)((((s16)((s8)a_data_u8[
    1586:	430a      	orrs	r2, r1
    1588:	82da      	strh	r2, [r3, #22]
					BMP280_PRESSURE_CALIB_DIG_P9_LSB]);
	}
	return com_rslt;
}
    158a:	b006      	add	sp, #24
    158c:	bd10      	pop	{r4, pc}
		com_rslt = E_BMP280_NULL_PTR;
    158e:	207f      	movs	r0, #127	; 0x7f
    1590:	4240      	negs	r0, r0
    1592:	e7fa      	b.n	158a <bmp280_get_calib_param+0xca>
    1594:	00003145 	.word	0x00003145
    1598:	200000ec 	.word	0x200000ec

0000159c <bmp280_init>:
{
    159c:	b5f0      	push	{r4, r5, r6, r7, lr}
    159e:	46c6      	mov	lr, r8
    15a0:	b500      	push	{lr}
    15a2:	b082      	sub	sp, #8
	u8 v_data_u8 = BMP280_INIT_VALUE;
    15a4:	2200      	movs	r2, #0
    15a6:	466b      	mov	r3, sp
    15a8:	71da      	strb	r2, [r3, #7]
	p_bmp280 = bmp280;/* assign BMP280 ptr */
    15aa:	4b19      	ldr	r3, [pc, #100]	; (1610 <bmp280_init+0x74>)
    15ac:	6018      	str	r0, [r3, #0]
	u8 v_chip_id_read_count = BMP280_CHIP_ID_READ_COUNT;
    15ae:	2405      	movs	r4, #5
		com_rslt = p_bmp280->BMP280_BUS_READ_FUNC(p_bmp280->dev_addr,
    15b0:	001f      	movs	r7, r3
    15b2:	466b      	mov	r3, sp
    15b4:	1ddd      	adds	r5, r3, #7
		p_bmp280->delay_msec(BMP280_REGISTER_READ_DELAY);
    15b6:	46b8      	mov	r8, r7
		com_rslt = p_bmp280->BMP280_BUS_READ_FUNC(p_bmp280->dev_addr,
    15b8:	683b      	ldr	r3, [r7, #0]
    15ba:	7f58      	ldrb	r0, [r3, #29]
    15bc:	6a5e      	ldr	r6, [r3, #36]	; 0x24
    15be:	2301      	movs	r3, #1
    15c0:	002a      	movs	r2, r5
    15c2:	21d0      	movs	r1, #208	; 0xd0
    15c4:	47b0      	blx	r6
			|| (v_data_u8 == BMP280_CHIP_ID3))
    15c6:	782b      	ldrb	r3, [r5, #0]
		if ((v_data_u8 == BMP280_CHIP_ID1)
    15c8:	001a      	movs	r2, r3
    15ca:	3a56      	subs	r2, #86	; 0x56
    15cc:	2a02      	cmp	r2, #2
    15ce:	d914      	bls.n	15fa <bmp280_init+0x5e>
		v_chip_id_read_count--;
    15d0:	3c01      	subs	r4, #1
    15d2:	b2e4      	uxtb	r4, r4
		p_bmp280->delay_msec(BMP280_REGISTER_READ_DELAY);
    15d4:	4643      	mov	r3, r8
    15d6:	681b      	ldr	r3, [r3, #0]
    15d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    15da:	2001      	movs	r0, #1
    15dc:	4798      	blx	r3
	while (v_chip_id_read_count > 0) {
    15de:	2c00      	cmp	r4, #0
    15e0:	d1ea      	bne.n	15b8 <bmp280_init+0x1c>
	p_bmp280->chip_id = v_data_u8;
    15e2:	4b0b      	ldr	r3, [pc, #44]	; (1610 <bmp280_init+0x74>)
    15e4:	681b      	ldr	r3, [r3, #0]
    15e6:	466a      	mov	r2, sp
    15e8:	3207      	adds	r2, #7
    15ea:	7812      	ldrb	r2, [r2, #0]
    15ec:	771a      	strb	r2, [r3, #28]
	com_rslt = (v_chip_id_read_count == BMP280_INIT_VALUE) ?
    15ee:	2001      	movs	r0, #1
    15f0:	4240      	negs	r0, r0
}
    15f2:	b002      	add	sp, #8
    15f4:	bc04      	pop	{r2}
    15f6:	4690      	mov	r8, r2
    15f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	p_bmp280->chip_id = v_data_u8;
    15fa:	4a05      	ldr	r2, [pc, #20]	; (1610 <bmp280_init+0x74>)
    15fc:	6812      	ldr	r2, [r2, #0]
    15fe:	7713      	strb	r3, [r2, #28]
	com_rslt = (v_chip_id_read_count == BMP280_INIT_VALUE) ?
    1600:	4260      	negs	r0, r4
    1602:	4160      	adcs	r0, r4
    1604:	4240      	negs	r0, r0
	if (com_rslt == BMP280_CHIP_ID_READ_SUCCESS) {
    1606:	2800      	cmp	r0, #0
    1608:	d1f3      	bne.n	15f2 <bmp280_init+0x56>
		com_rslt += bmp280_get_calib_param();
    160a:	4b02      	ldr	r3, [pc, #8]	; (1614 <bmp280_init+0x78>)
    160c:	4798      	blx	r3
    160e:	e7f0      	b.n	15f2 <bmp280_init+0x56>
    1610:	200000ec 	.word	0x200000ec
    1614:	000014c1 	.word	0x000014c1

00001618 <configure_i2c_master>:
 #include <I2C.h>



void configure_i2c_master(void)
{
    1618:	b530      	push	{r4, r5, lr}
    161a:	b08f      	sub	sp, #60	; 0x3c
static inline void i2c_master_get_config_defaults(
		struct i2c_master_config *const config)
{
	/*Sanity check argument */
	Assert(config);
	config->baud_rate        = I2C_MASTER_BAUD_RATE_100KHZ;
    161c:	aa01      	add	r2, sp, #4
    161e:	2364      	movs	r3, #100	; 0x64
    1620:	9301      	str	r3, [sp, #4]
#ifdef FEATURE_I2C_FAST_MODE_PLUS_AND_HIGH_SPEED
	config->baud_rate_high_speed = I2C_MASTER_BAUD_RATE_3400KHZ;
    1622:	4b20      	ldr	r3, [pc, #128]	; (16a4 <configure_i2c_master+0x8c>)
    1624:	6053      	str	r3, [r2, #4]
	config->transfer_speed       = I2C_MASTER_SPEED_STANDARD_AND_FAST;
    1626:	2300      	movs	r3, #0
    1628:	6093      	str	r3, [r2, #8]
#endif
	config->generator_source = GCLK_GENERATOR_0;
    162a:	7313      	strb	r3, [r2, #12]
	config->run_in_standby   = false;
    162c:	7613      	strb	r3, [r2, #24]
	config->start_hold_time  = I2C_MASTER_START_HOLD_TIME_300NS_600NS;
    162e:	2180      	movs	r1, #128	; 0x80
    1630:	0389      	lsls	r1, r1, #14
    1632:	6111      	str	r1, [r2, #16]
	config->buffer_timeout   = 65535;
	config->unknown_bus_state_timeout = 65535;
    1634:	2101      	movs	r1, #1
    1636:	4249      	negs	r1, r1
    1638:	8291      	strh	r1, [r2, #20]
	config->pinmux_pad0      = PINMUX_DEFAULT;
    163a:	61d3      	str	r3, [r2, #28]
	config->pinmux_pad1      = PINMUX_DEFAULT;
    163c:	6213      	str	r3, [r2, #32]
	config->scl_low_timeout  = false;
    163e:	3125      	adds	r1, #37	; 0x25
    1640:	5453      	strb	r3, [r2, r1]
	config->inactive_timeout = I2C_MASTER_INACTIVE_TIMEOUT_DISABLED;
    1642:	6293      	str	r3, [r2, #40]	; 0x28
#ifdef FEATURE_I2C_SCL_STRETCH_MODE
	config->scl_stretch_only_after_ack_bit = false;
    1644:	3108      	adds	r1, #8
    1646:	5453      	strb	r3, [r2, r1]
#endif
#ifdef FEATURE_I2C_SCL_EXTEND_TIMEOUT
	config->slave_scl_low_extend_timeout   = false;
    1648:	3101      	adds	r1, #1
    164a:	5453      	strb	r3, [r2, r1]
	config->master_scl_low_extend_timeout  = false;
    164c:	3101      	adds	r1, #1
    164e:	5453      	strb	r3, [r2, r1]
#endif
	/* The typical value is 215ns */
	config->sda_scl_rise_time_ns = 215;
    1650:	33d7      	adds	r3, #215	; 0xd7
    1652:	8613      	strh	r3, [r2, #48]	; 0x30
	/* Initialize config structure and software module. */
	struct i2c_master_config config_i2c_master;
	i2c_master_get_config_defaults(&config_i2c_master);
	/* Change buffer timeout to something longer. */
	config_i2c_master.buffer_timeout = 10000;
    1654:	4b14      	ldr	r3, [pc, #80]	; (16a8 <configure_i2c_master+0x90>)
    1656:	82d3      	strh	r3, [r2, #22]
	/* Initialize and enable device with config. */
	i2c_master_init(&i2c_master_instance, SERCOM5, &config_i2c_master);
    1658:	4c14      	ldr	r4, [pc, #80]	; (16ac <configure_i2c_master+0x94>)
    165a:	4915      	ldr	r1, [pc, #84]	; (16b0 <configure_i2c_master+0x98>)
    165c:	0020      	movs	r0, r4
    165e:	4b15      	ldr	r3, [pc, #84]	; (16b4 <configure_i2c_master+0x9c>)
    1660:	4798      	blx	r3
{
	/* Sanity check of arguments */
	Assert(module);
	Assert(module->hw);

	SercomI2cm *const i2c_module = &(module->hw->I2CM);
    1662:	6824      	ldr	r4, [r4, #0]
	return (i2c_hw->SYNCBUSY.reg & SERCOM_I2CM_SYNCBUSY_MASK);
    1664:	2207      	movs	r2, #7
    1666:	69e3      	ldr	r3, [r4, #28]
	while (i2c_master_is_syncing(module)) {
    1668:	421a      	tst	r2, r3
    166a:	d1fc      	bne.n	1666 <configure_i2c_master+0x4e>

	/* Wait for module to sync */
	_i2c_master_wait_for_sync(module);

	/* Enable module */
	i2c_module->CTRLA.reg |= SERCOM_I2CM_CTRLA_ENABLE;
    166c:	6823      	ldr	r3, [r4, #0]
    166e:	2202      	movs	r2, #2
    1670:	4313      	orrs	r3, r2
    1672:	6023      	str	r3, [r4, #0]

#if I2C_MASTER_CALLBACK_MODE == true
	/* Enable module interrupts */
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    1674:	4d0d      	ldr	r5, [pc, #52]	; (16ac <configure_i2c_master+0x94>)
    1676:	6828      	ldr	r0, [r5, #0]
    1678:	4b0f      	ldr	r3, [pc, #60]	; (16b8 <configure_i2c_master+0xa0>)
    167a:	4798      	blx	r3
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    167c:	231f      	movs	r3, #31
    167e:	4018      	ands	r0, r3
    1680:	3b1e      	subs	r3, #30
    1682:	4083      	lsls	r3, r0
    1684:	4a0d      	ldr	r2, [pc, #52]	; (16bc <configure_i2c_master+0xa4>)
    1686:	6013      	str	r3, [r2, #0]
#endif
	/* Start timeout if bus state is unknown */
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
		timeout_counter++;
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
    1688:	88e8      	ldrh	r0, [r5, #6]
	uint32_t timeout_counter = 0;
    168a:	2300      	movs	r3, #0
	while (!(i2c_module->STATUS.reg & SERCOM_I2CM_STATUS_BUSSTATE(1))) {
    168c:	2110      	movs	r1, #16
    168e:	8b62      	ldrh	r2, [r4, #26]
    1690:	420a      	tst	r2, r1
    1692:	d104      	bne.n	169e <configure_i2c_master+0x86>
		timeout_counter++;
    1694:	3301      	adds	r3, #1
		if(timeout_counter >= (module->unknown_bus_state_timeout)) {
    1696:	4283      	cmp	r3, r0
    1698:	d3f9      	bcc.n	168e <configure_i2c_master+0x76>
			/* Timeout, force bus state to idle */
			i2c_module->STATUS.reg = SERCOM_I2CM_STATUS_BUSSTATE(1);
    169a:	2310      	movs	r3, #16
    169c:	8363      	strh	r3, [r4, #26]
	i2c_master_enable(&i2c_master_instance);
}
    169e:	b00f      	add	sp, #60	; 0x3c
    16a0:	bd30      	pop	{r4, r5, pc}
    16a2:	46c0      	nop			; (mov r8, r8)
    16a4:	00000d48 	.word	0x00000d48
    16a8:	00002710 	.word	0x00002710
    16ac:	20000114 	.word	0x20000114
    16b0:	42001c00 	.word	0x42001c00
    16b4:	00000115 	.word	0x00000115
    16b8:	00000b95 	.word	0x00000b95
    16bc:	e000e100 	.word	0xe000e100

000016c0 <initI2CStruct>:
}

 void initI2CStruct(void)
 {
	/* Init i2c packet. */	  
	packet.address = SLAVE_ADDRESS;
    16c0:	4b05      	ldr	r3, [pc, #20]	; (16d8 <initI2CStruct+0x18>)
    16c2:	2276      	movs	r2, #118	; 0x76
    16c4:	801a      	strh	r2, [r3, #0]
	packet.data_length = DATA_LENGTH;
    16c6:	3a75      	subs	r2, #117	; 0x75
    16c8:	805a      	strh	r2, [r3, #2]
	packet.data = write_buffer;
    16ca:	4a04      	ldr	r2, [pc, #16]	; (16dc <initI2CStruct+0x1c>)
    16cc:	605a      	str	r2, [r3, #4]
	packet.ten_bit_address = false;
    16ce:	2200      	movs	r2, #0
    16d0:	721a      	strb	r2, [r3, #8]
	packet.high_speed = false;
    16d2:	725a      	strb	r2, [r3, #9]
	packet.hs_master_code = 0x0;
    16d4:	729a      	strb	r2, [r3, #10]
 }
    16d6:	4770      	bx	lr
    16d8:	20000108 	.word	0x20000108
    16dc:	20000008 	.word	0x20000008

000016e0 <main>:

/* Timeout counter. */
uint16_t timeout = 0;

int main (void)
{
    16e0:	b510      	push	{r4, lr}

	uint8_t *ptr = read_buffer;
	struct bmp280_t *ptSens;
	u32 v_pressure_u32; 
	s32 v_temperature_s32;
	system_init();
    16e2:	4b08      	ldr	r3, [pc, #32]	; (1704 <main+0x24>)
    16e4:	4798      	blx	r3
	system_clock_init();
    16e6:	4b08      	ldr	r3, [pc, #32]	; (1708 <main+0x28>)
    16e8:	4798      	blx	r3
	arch_ioport_init();

	initI2CStruct();
    16ea:	4b08      	ldr	r3, [pc, #32]	; (170c <main+0x2c>)
    16ec:	4798      	blx	r3

	configure_i2c_master();
    16ee:	4b08      	ldr	r3, [pc, #32]	; (1710 <main+0x30>)
    16f0:	4798      	blx	r3
	ptSens->chip_id = 0x58;
	ptSens->dev_addr = 0X76;
	bmp280_init(ptSens);
    16f2:	2000      	movs	r0, #0
    16f4:	4b07      	ldr	r3, [pc, #28]	; (1714 <main+0x34>)
    16f6:	4798      	blx	r3
	bmp280_read_pressure_temperature(v_temperature_s32,v_pressure_u32);
    16f8:	2100      	movs	r1, #0
    16fa:	2000      	movs	r0, #0
    16fc:	4b06      	ldr	r3, [pc, #24]	; (1718 <main+0x38>)
    16fe:	4798      	blx	r3
	/* Create timer to toggle Pin 13 LED                                                                      */
	/************************************************************************/
	//xTimerStart(Timer_id, 0);
	//vTaskStartScheduler();
	//while(1);
}
    1700:	2000      	movs	r0, #0
    1702:	bd10      	pop	{r4, pc}
    1704:	00001209 	.word	0x00001209
    1708:	00000e0d 	.word	0x00000e0d
    170c:	000016c1 	.word	0x000016c1
    1710:	00001619 	.word	0x00001619
    1714:	0000159d 	.word	0x0000159d
    1718:	00001475 	.word	0x00001475

0000171c <__udivsi3>:
    171c:	2200      	movs	r2, #0
    171e:	0843      	lsrs	r3, r0, #1
    1720:	428b      	cmp	r3, r1
    1722:	d374      	bcc.n	180e <__udivsi3+0xf2>
    1724:	0903      	lsrs	r3, r0, #4
    1726:	428b      	cmp	r3, r1
    1728:	d35f      	bcc.n	17ea <__udivsi3+0xce>
    172a:	0a03      	lsrs	r3, r0, #8
    172c:	428b      	cmp	r3, r1
    172e:	d344      	bcc.n	17ba <__udivsi3+0x9e>
    1730:	0b03      	lsrs	r3, r0, #12
    1732:	428b      	cmp	r3, r1
    1734:	d328      	bcc.n	1788 <__udivsi3+0x6c>
    1736:	0c03      	lsrs	r3, r0, #16
    1738:	428b      	cmp	r3, r1
    173a:	d30d      	bcc.n	1758 <__udivsi3+0x3c>
    173c:	22ff      	movs	r2, #255	; 0xff
    173e:	0209      	lsls	r1, r1, #8
    1740:	ba12      	rev	r2, r2
    1742:	0c03      	lsrs	r3, r0, #16
    1744:	428b      	cmp	r3, r1
    1746:	d302      	bcc.n	174e <__udivsi3+0x32>
    1748:	1212      	asrs	r2, r2, #8
    174a:	0209      	lsls	r1, r1, #8
    174c:	d065      	beq.n	181a <__udivsi3+0xfe>
    174e:	0b03      	lsrs	r3, r0, #12
    1750:	428b      	cmp	r3, r1
    1752:	d319      	bcc.n	1788 <__udivsi3+0x6c>
    1754:	e000      	b.n	1758 <__udivsi3+0x3c>
    1756:	0a09      	lsrs	r1, r1, #8
    1758:	0bc3      	lsrs	r3, r0, #15
    175a:	428b      	cmp	r3, r1
    175c:	d301      	bcc.n	1762 <__udivsi3+0x46>
    175e:	03cb      	lsls	r3, r1, #15
    1760:	1ac0      	subs	r0, r0, r3
    1762:	4152      	adcs	r2, r2
    1764:	0b83      	lsrs	r3, r0, #14
    1766:	428b      	cmp	r3, r1
    1768:	d301      	bcc.n	176e <__udivsi3+0x52>
    176a:	038b      	lsls	r3, r1, #14
    176c:	1ac0      	subs	r0, r0, r3
    176e:	4152      	adcs	r2, r2
    1770:	0b43      	lsrs	r3, r0, #13
    1772:	428b      	cmp	r3, r1
    1774:	d301      	bcc.n	177a <__udivsi3+0x5e>
    1776:	034b      	lsls	r3, r1, #13
    1778:	1ac0      	subs	r0, r0, r3
    177a:	4152      	adcs	r2, r2
    177c:	0b03      	lsrs	r3, r0, #12
    177e:	428b      	cmp	r3, r1
    1780:	d301      	bcc.n	1786 <__udivsi3+0x6a>
    1782:	030b      	lsls	r3, r1, #12
    1784:	1ac0      	subs	r0, r0, r3
    1786:	4152      	adcs	r2, r2
    1788:	0ac3      	lsrs	r3, r0, #11
    178a:	428b      	cmp	r3, r1
    178c:	d301      	bcc.n	1792 <__udivsi3+0x76>
    178e:	02cb      	lsls	r3, r1, #11
    1790:	1ac0      	subs	r0, r0, r3
    1792:	4152      	adcs	r2, r2
    1794:	0a83      	lsrs	r3, r0, #10
    1796:	428b      	cmp	r3, r1
    1798:	d301      	bcc.n	179e <__udivsi3+0x82>
    179a:	028b      	lsls	r3, r1, #10
    179c:	1ac0      	subs	r0, r0, r3
    179e:	4152      	adcs	r2, r2
    17a0:	0a43      	lsrs	r3, r0, #9
    17a2:	428b      	cmp	r3, r1
    17a4:	d301      	bcc.n	17aa <__udivsi3+0x8e>
    17a6:	024b      	lsls	r3, r1, #9
    17a8:	1ac0      	subs	r0, r0, r3
    17aa:	4152      	adcs	r2, r2
    17ac:	0a03      	lsrs	r3, r0, #8
    17ae:	428b      	cmp	r3, r1
    17b0:	d301      	bcc.n	17b6 <__udivsi3+0x9a>
    17b2:	020b      	lsls	r3, r1, #8
    17b4:	1ac0      	subs	r0, r0, r3
    17b6:	4152      	adcs	r2, r2
    17b8:	d2cd      	bcs.n	1756 <__udivsi3+0x3a>
    17ba:	09c3      	lsrs	r3, r0, #7
    17bc:	428b      	cmp	r3, r1
    17be:	d301      	bcc.n	17c4 <__udivsi3+0xa8>
    17c0:	01cb      	lsls	r3, r1, #7
    17c2:	1ac0      	subs	r0, r0, r3
    17c4:	4152      	adcs	r2, r2
    17c6:	0983      	lsrs	r3, r0, #6
    17c8:	428b      	cmp	r3, r1
    17ca:	d301      	bcc.n	17d0 <__udivsi3+0xb4>
    17cc:	018b      	lsls	r3, r1, #6
    17ce:	1ac0      	subs	r0, r0, r3
    17d0:	4152      	adcs	r2, r2
    17d2:	0943      	lsrs	r3, r0, #5
    17d4:	428b      	cmp	r3, r1
    17d6:	d301      	bcc.n	17dc <__udivsi3+0xc0>
    17d8:	014b      	lsls	r3, r1, #5
    17da:	1ac0      	subs	r0, r0, r3
    17dc:	4152      	adcs	r2, r2
    17de:	0903      	lsrs	r3, r0, #4
    17e0:	428b      	cmp	r3, r1
    17e2:	d301      	bcc.n	17e8 <__udivsi3+0xcc>
    17e4:	010b      	lsls	r3, r1, #4
    17e6:	1ac0      	subs	r0, r0, r3
    17e8:	4152      	adcs	r2, r2
    17ea:	08c3      	lsrs	r3, r0, #3
    17ec:	428b      	cmp	r3, r1
    17ee:	d301      	bcc.n	17f4 <__udivsi3+0xd8>
    17f0:	00cb      	lsls	r3, r1, #3
    17f2:	1ac0      	subs	r0, r0, r3
    17f4:	4152      	adcs	r2, r2
    17f6:	0883      	lsrs	r3, r0, #2
    17f8:	428b      	cmp	r3, r1
    17fa:	d301      	bcc.n	1800 <__udivsi3+0xe4>
    17fc:	008b      	lsls	r3, r1, #2
    17fe:	1ac0      	subs	r0, r0, r3
    1800:	4152      	adcs	r2, r2
    1802:	0843      	lsrs	r3, r0, #1
    1804:	428b      	cmp	r3, r1
    1806:	d301      	bcc.n	180c <__udivsi3+0xf0>
    1808:	004b      	lsls	r3, r1, #1
    180a:	1ac0      	subs	r0, r0, r3
    180c:	4152      	adcs	r2, r2
    180e:	1a41      	subs	r1, r0, r1
    1810:	d200      	bcs.n	1814 <__udivsi3+0xf8>
    1812:	4601      	mov	r1, r0
    1814:	4152      	adcs	r2, r2
    1816:	4610      	mov	r0, r2
    1818:	4770      	bx	lr
    181a:	e7ff      	b.n	181c <__udivsi3+0x100>
    181c:	b501      	push	{r0, lr}
    181e:	2000      	movs	r0, #0
    1820:	f000 f806 	bl	1830 <__aeabi_idiv0>
    1824:	bd02      	pop	{r1, pc}
    1826:	46c0      	nop			; (mov r8, r8)

00001828 <__aeabi_uidivmod>:
    1828:	2900      	cmp	r1, #0
    182a:	d0f7      	beq.n	181c <__udivsi3+0x100>
    182c:	e776      	b.n	171c <__udivsi3>
    182e:	4770      	bx	lr

00001830 <__aeabi_idiv0>:
    1830:	4770      	bx	lr
    1832:	46c0      	nop			; (mov r8, r8)

00001834 <__aeabi_dadd>:
    1834:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1836:	4645      	mov	r5, r8
    1838:	46de      	mov	lr, fp
    183a:	4657      	mov	r7, sl
    183c:	464e      	mov	r6, r9
    183e:	030c      	lsls	r4, r1, #12
    1840:	b5e0      	push	{r5, r6, r7, lr}
    1842:	004e      	lsls	r6, r1, #1
    1844:	0fc9      	lsrs	r1, r1, #31
    1846:	4688      	mov	r8, r1
    1848:	000d      	movs	r5, r1
    184a:	0a61      	lsrs	r1, r4, #9
    184c:	0f44      	lsrs	r4, r0, #29
    184e:	430c      	orrs	r4, r1
    1850:	00c7      	lsls	r7, r0, #3
    1852:	0319      	lsls	r1, r3, #12
    1854:	0058      	lsls	r0, r3, #1
    1856:	0fdb      	lsrs	r3, r3, #31
    1858:	469b      	mov	fp, r3
    185a:	0a4b      	lsrs	r3, r1, #9
    185c:	0f51      	lsrs	r1, r2, #29
    185e:	430b      	orrs	r3, r1
    1860:	0d76      	lsrs	r6, r6, #21
    1862:	0d40      	lsrs	r0, r0, #21
    1864:	0019      	movs	r1, r3
    1866:	00d2      	lsls	r2, r2, #3
    1868:	45d8      	cmp	r8, fp
    186a:	d100      	bne.n	186e <__aeabi_dadd+0x3a>
    186c:	e0ae      	b.n	19cc <__aeabi_dadd+0x198>
    186e:	1a35      	subs	r5, r6, r0
    1870:	2d00      	cmp	r5, #0
    1872:	dc00      	bgt.n	1876 <__aeabi_dadd+0x42>
    1874:	e0f6      	b.n	1a64 <__aeabi_dadd+0x230>
    1876:	2800      	cmp	r0, #0
    1878:	d10f      	bne.n	189a <__aeabi_dadd+0x66>
    187a:	4313      	orrs	r3, r2
    187c:	d100      	bne.n	1880 <__aeabi_dadd+0x4c>
    187e:	e0db      	b.n	1a38 <__aeabi_dadd+0x204>
    1880:	1e6b      	subs	r3, r5, #1
    1882:	2b00      	cmp	r3, #0
    1884:	d000      	beq.n	1888 <__aeabi_dadd+0x54>
    1886:	e137      	b.n	1af8 <__aeabi_dadd+0x2c4>
    1888:	1aba      	subs	r2, r7, r2
    188a:	4297      	cmp	r7, r2
    188c:	41bf      	sbcs	r7, r7
    188e:	1a64      	subs	r4, r4, r1
    1890:	427f      	negs	r7, r7
    1892:	1be4      	subs	r4, r4, r7
    1894:	2601      	movs	r6, #1
    1896:	0017      	movs	r7, r2
    1898:	e024      	b.n	18e4 <__aeabi_dadd+0xb0>
    189a:	4bc6      	ldr	r3, [pc, #792]	; (1bb4 <__aeabi_dadd+0x380>)
    189c:	429e      	cmp	r6, r3
    189e:	d04d      	beq.n	193c <__aeabi_dadd+0x108>
    18a0:	2380      	movs	r3, #128	; 0x80
    18a2:	041b      	lsls	r3, r3, #16
    18a4:	4319      	orrs	r1, r3
    18a6:	2d38      	cmp	r5, #56	; 0x38
    18a8:	dd00      	ble.n	18ac <__aeabi_dadd+0x78>
    18aa:	e107      	b.n	1abc <__aeabi_dadd+0x288>
    18ac:	2d1f      	cmp	r5, #31
    18ae:	dd00      	ble.n	18b2 <__aeabi_dadd+0x7e>
    18b0:	e138      	b.n	1b24 <__aeabi_dadd+0x2f0>
    18b2:	2020      	movs	r0, #32
    18b4:	1b43      	subs	r3, r0, r5
    18b6:	469a      	mov	sl, r3
    18b8:	000b      	movs	r3, r1
    18ba:	4650      	mov	r0, sl
    18bc:	4083      	lsls	r3, r0
    18be:	4699      	mov	r9, r3
    18c0:	0013      	movs	r3, r2
    18c2:	4648      	mov	r0, r9
    18c4:	40eb      	lsrs	r3, r5
    18c6:	4318      	orrs	r0, r3
    18c8:	0003      	movs	r3, r0
    18ca:	4650      	mov	r0, sl
    18cc:	4082      	lsls	r2, r0
    18ce:	1e50      	subs	r0, r2, #1
    18d0:	4182      	sbcs	r2, r0
    18d2:	40e9      	lsrs	r1, r5
    18d4:	431a      	orrs	r2, r3
    18d6:	1aba      	subs	r2, r7, r2
    18d8:	1a61      	subs	r1, r4, r1
    18da:	4297      	cmp	r7, r2
    18dc:	41a4      	sbcs	r4, r4
    18de:	0017      	movs	r7, r2
    18e0:	4264      	negs	r4, r4
    18e2:	1b0c      	subs	r4, r1, r4
    18e4:	0223      	lsls	r3, r4, #8
    18e6:	d562      	bpl.n	19ae <__aeabi_dadd+0x17a>
    18e8:	0264      	lsls	r4, r4, #9
    18ea:	0a65      	lsrs	r5, r4, #9
    18ec:	2d00      	cmp	r5, #0
    18ee:	d100      	bne.n	18f2 <__aeabi_dadd+0xbe>
    18f0:	e0df      	b.n	1ab2 <__aeabi_dadd+0x27e>
    18f2:	0028      	movs	r0, r5
    18f4:	f001 fbe4 	bl	30c0 <__clzsi2>
    18f8:	0003      	movs	r3, r0
    18fa:	3b08      	subs	r3, #8
    18fc:	2b1f      	cmp	r3, #31
    18fe:	dd00      	ble.n	1902 <__aeabi_dadd+0xce>
    1900:	e0d2      	b.n	1aa8 <__aeabi_dadd+0x274>
    1902:	2220      	movs	r2, #32
    1904:	003c      	movs	r4, r7
    1906:	1ad2      	subs	r2, r2, r3
    1908:	409d      	lsls	r5, r3
    190a:	40d4      	lsrs	r4, r2
    190c:	409f      	lsls	r7, r3
    190e:	4325      	orrs	r5, r4
    1910:	429e      	cmp	r6, r3
    1912:	dd00      	ble.n	1916 <__aeabi_dadd+0xe2>
    1914:	e0c4      	b.n	1aa0 <__aeabi_dadd+0x26c>
    1916:	1b9e      	subs	r6, r3, r6
    1918:	1c73      	adds	r3, r6, #1
    191a:	2b1f      	cmp	r3, #31
    191c:	dd00      	ble.n	1920 <__aeabi_dadd+0xec>
    191e:	e0f1      	b.n	1b04 <__aeabi_dadd+0x2d0>
    1920:	2220      	movs	r2, #32
    1922:	0038      	movs	r0, r7
    1924:	0029      	movs	r1, r5
    1926:	1ad2      	subs	r2, r2, r3
    1928:	40d8      	lsrs	r0, r3
    192a:	4091      	lsls	r1, r2
    192c:	4097      	lsls	r7, r2
    192e:	002c      	movs	r4, r5
    1930:	4301      	orrs	r1, r0
    1932:	1e78      	subs	r0, r7, #1
    1934:	4187      	sbcs	r7, r0
    1936:	40dc      	lsrs	r4, r3
    1938:	2600      	movs	r6, #0
    193a:	430f      	orrs	r7, r1
    193c:	077b      	lsls	r3, r7, #29
    193e:	d009      	beq.n	1954 <__aeabi_dadd+0x120>
    1940:	230f      	movs	r3, #15
    1942:	403b      	ands	r3, r7
    1944:	2b04      	cmp	r3, #4
    1946:	d005      	beq.n	1954 <__aeabi_dadd+0x120>
    1948:	1d3b      	adds	r3, r7, #4
    194a:	42bb      	cmp	r3, r7
    194c:	41bf      	sbcs	r7, r7
    194e:	427f      	negs	r7, r7
    1950:	19e4      	adds	r4, r4, r7
    1952:	001f      	movs	r7, r3
    1954:	0223      	lsls	r3, r4, #8
    1956:	d52c      	bpl.n	19b2 <__aeabi_dadd+0x17e>
    1958:	4b96      	ldr	r3, [pc, #600]	; (1bb4 <__aeabi_dadd+0x380>)
    195a:	3601      	adds	r6, #1
    195c:	429e      	cmp	r6, r3
    195e:	d100      	bne.n	1962 <__aeabi_dadd+0x12e>
    1960:	e09a      	b.n	1a98 <__aeabi_dadd+0x264>
    1962:	4645      	mov	r5, r8
    1964:	4b94      	ldr	r3, [pc, #592]	; (1bb8 <__aeabi_dadd+0x384>)
    1966:	08ff      	lsrs	r7, r7, #3
    1968:	401c      	ands	r4, r3
    196a:	0760      	lsls	r0, r4, #29
    196c:	0576      	lsls	r6, r6, #21
    196e:	0264      	lsls	r4, r4, #9
    1970:	4307      	orrs	r7, r0
    1972:	0b24      	lsrs	r4, r4, #12
    1974:	0d76      	lsrs	r6, r6, #21
    1976:	2100      	movs	r1, #0
    1978:	0324      	lsls	r4, r4, #12
    197a:	0b23      	lsrs	r3, r4, #12
    197c:	0d0c      	lsrs	r4, r1, #20
    197e:	4a8f      	ldr	r2, [pc, #572]	; (1bbc <__aeabi_dadd+0x388>)
    1980:	0524      	lsls	r4, r4, #20
    1982:	431c      	orrs	r4, r3
    1984:	4014      	ands	r4, r2
    1986:	0533      	lsls	r3, r6, #20
    1988:	4323      	orrs	r3, r4
    198a:	005b      	lsls	r3, r3, #1
    198c:	07ed      	lsls	r5, r5, #31
    198e:	085b      	lsrs	r3, r3, #1
    1990:	432b      	orrs	r3, r5
    1992:	0038      	movs	r0, r7
    1994:	0019      	movs	r1, r3
    1996:	bc3c      	pop	{r2, r3, r4, r5}
    1998:	4690      	mov	r8, r2
    199a:	4699      	mov	r9, r3
    199c:	46a2      	mov	sl, r4
    199e:	46ab      	mov	fp, r5
    19a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    19a2:	4664      	mov	r4, ip
    19a4:	4304      	orrs	r4, r0
    19a6:	d100      	bne.n	19aa <__aeabi_dadd+0x176>
    19a8:	e211      	b.n	1dce <__aeabi_dadd+0x59a>
    19aa:	0004      	movs	r4, r0
    19ac:	4667      	mov	r7, ip
    19ae:	077b      	lsls	r3, r7, #29
    19b0:	d1c6      	bne.n	1940 <__aeabi_dadd+0x10c>
    19b2:	4645      	mov	r5, r8
    19b4:	0760      	lsls	r0, r4, #29
    19b6:	08ff      	lsrs	r7, r7, #3
    19b8:	4307      	orrs	r7, r0
    19ba:	08e4      	lsrs	r4, r4, #3
    19bc:	4b7d      	ldr	r3, [pc, #500]	; (1bb4 <__aeabi_dadd+0x380>)
    19be:	429e      	cmp	r6, r3
    19c0:	d030      	beq.n	1a24 <__aeabi_dadd+0x1f0>
    19c2:	0324      	lsls	r4, r4, #12
    19c4:	0576      	lsls	r6, r6, #21
    19c6:	0b24      	lsrs	r4, r4, #12
    19c8:	0d76      	lsrs	r6, r6, #21
    19ca:	e7d4      	b.n	1976 <__aeabi_dadd+0x142>
    19cc:	1a33      	subs	r3, r6, r0
    19ce:	469a      	mov	sl, r3
    19d0:	2b00      	cmp	r3, #0
    19d2:	dd78      	ble.n	1ac6 <__aeabi_dadd+0x292>
    19d4:	2800      	cmp	r0, #0
    19d6:	d031      	beq.n	1a3c <__aeabi_dadd+0x208>
    19d8:	4876      	ldr	r0, [pc, #472]	; (1bb4 <__aeabi_dadd+0x380>)
    19da:	4286      	cmp	r6, r0
    19dc:	d0ae      	beq.n	193c <__aeabi_dadd+0x108>
    19de:	2080      	movs	r0, #128	; 0x80
    19e0:	0400      	lsls	r0, r0, #16
    19e2:	4301      	orrs	r1, r0
    19e4:	4653      	mov	r3, sl
    19e6:	2b38      	cmp	r3, #56	; 0x38
    19e8:	dc00      	bgt.n	19ec <__aeabi_dadd+0x1b8>
    19ea:	e0e9      	b.n	1bc0 <__aeabi_dadd+0x38c>
    19ec:	430a      	orrs	r2, r1
    19ee:	1e51      	subs	r1, r2, #1
    19f0:	418a      	sbcs	r2, r1
    19f2:	2100      	movs	r1, #0
    19f4:	19d2      	adds	r2, r2, r7
    19f6:	42ba      	cmp	r2, r7
    19f8:	41bf      	sbcs	r7, r7
    19fa:	1909      	adds	r1, r1, r4
    19fc:	427c      	negs	r4, r7
    19fe:	0017      	movs	r7, r2
    1a00:	190c      	adds	r4, r1, r4
    1a02:	0223      	lsls	r3, r4, #8
    1a04:	d5d3      	bpl.n	19ae <__aeabi_dadd+0x17a>
    1a06:	4b6b      	ldr	r3, [pc, #428]	; (1bb4 <__aeabi_dadd+0x380>)
    1a08:	3601      	adds	r6, #1
    1a0a:	429e      	cmp	r6, r3
    1a0c:	d100      	bne.n	1a10 <__aeabi_dadd+0x1dc>
    1a0e:	e13a      	b.n	1c86 <__aeabi_dadd+0x452>
    1a10:	2001      	movs	r0, #1
    1a12:	4b69      	ldr	r3, [pc, #420]	; (1bb8 <__aeabi_dadd+0x384>)
    1a14:	401c      	ands	r4, r3
    1a16:	087b      	lsrs	r3, r7, #1
    1a18:	4007      	ands	r7, r0
    1a1a:	431f      	orrs	r7, r3
    1a1c:	07e0      	lsls	r0, r4, #31
    1a1e:	4307      	orrs	r7, r0
    1a20:	0864      	lsrs	r4, r4, #1
    1a22:	e78b      	b.n	193c <__aeabi_dadd+0x108>
    1a24:	0023      	movs	r3, r4
    1a26:	433b      	orrs	r3, r7
    1a28:	d100      	bne.n	1a2c <__aeabi_dadd+0x1f8>
    1a2a:	e1cb      	b.n	1dc4 <__aeabi_dadd+0x590>
    1a2c:	2280      	movs	r2, #128	; 0x80
    1a2e:	0312      	lsls	r2, r2, #12
    1a30:	4314      	orrs	r4, r2
    1a32:	0324      	lsls	r4, r4, #12
    1a34:	0b24      	lsrs	r4, r4, #12
    1a36:	e79e      	b.n	1976 <__aeabi_dadd+0x142>
    1a38:	002e      	movs	r6, r5
    1a3a:	e77f      	b.n	193c <__aeabi_dadd+0x108>
    1a3c:	0008      	movs	r0, r1
    1a3e:	4310      	orrs	r0, r2
    1a40:	d100      	bne.n	1a44 <__aeabi_dadd+0x210>
    1a42:	e0b4      	b.n	1bae <__aeabi_dadd+0x37a>
    1a44:	1e58      	subs	r0, r3, #1
    1a46:	2800      	cmp	r0, #0
    1a48:	d000      	beq.n	1a4c <__aeabi_dadd+0x218>
    1a4a:	e0de      	b.n	1c0a <__aeabi_dadd+0x3d6>
    1a4c:	18ba      	adds	r2, r7, r2
    1a4e:	42ba      	cmp	r2, r7
    1a50:	419b      	sbcs	r3, r3
    1a52:	1864      	adds	r4, r4, r1
    1a54:	425b      	negs	r3, r3
    1a56:	18e4      	adds	r4, r4, r3
    1a58:	0017      	movs	r7, r2
    1a5a:	2601      	movs	r6, #1
    1a5c:	0223      	lsls	r3, r4, #8
    1a5e:	d5a6      	bpl.n	19ae <__aeabi_dadd+0x17a>
    1a60:	2602      	movs	r6, #2
    1a62:	e7d5      	b.n	1a10 <__aeabi_dadd+0x1dc>
    1a64:	2d00      	cmp	r5, #0
    1a66:	d16e      	bne.n	1b46 <__aeabi_dadd+0x312>
    1a68:	1c70      	adds	r0, r6, #1
    1a6a:	0540      	lsls	r0, r0, #21
    1a6c:	0d40      	lsrs	r0, r0, #21
    1a6e:	2801      	cmp	r0, #1
    1a70:	dc00      	bgt.n	1a74 <__aeabi_dadd+0x240>
    1a72:	e0f9      	b.n	1c68 <__aeabi_dadd+0x434>
    1a74:	1ab8      	subs	r0, r7, r2
    1a76:	4684      	mov	ip, r0
    1a78:	4287      	cmp	r7, r0
    1a7a:	4180      	sbcs	r0, r0
    1a7c:	1ae5      	subs	r5, r4, r3
    1a7e:	4240      	negs	r0, r0
    1a80:	1a2d      	subs	r5, r5, r0
    1a82:	0228      	lsls	r0, r5, #8
    1a84:	d400      	bmi.n	1a88 <__aeabi_dadd+0x254>
    1a86:	e089      	b.n	1b9c <__aeabi_dadd+0x368>
    1a88:	1bd7      	subs	r7, r2, r7
    1a8a:	42ba      	cmp	r2, r7
    1a8c:	4192      	sbcs	r2, r2
    1a8e:	1b1c      	subs	r4, r3, r4
    1a90:	4252      	negs	r2, r2
    1a92:	1aa5      	subs	r5, r4, r2
    1a94:	46d8      	mov	r8, fp
    1a96:	e729      	b.n	18ec <__aeabi_dadd+0xb8>
    1a98:	4645      	mov	r5, r8
    1a9a:	2400      	movs	r4, #0
    1a9c:	2700      	movs	r7, #0
    1a9e:	e76a      	b.n	1976 <__aeabi_dadd+0x142>
    1aa0:	4c45      	ldr	r4, [pc, #276]	; (1bb8 <__aeabi_dadd+0x384>)
    1aa2:	1af6      	subs	r6, r6, r3
    1aa4:	402c      	ands	r4, r5
    1aa6:	e749      	b.n	193c <__aeabi_dadd+0x108>
    1aa8:	003d      	movs	r5, r7
    1aaa:	3828      	subs	r0, #40	; 0x28
    1aac:	4085      	lsls	r5, r0
    1aae:	2700      	movs	r7, #0
    1ab0:	e72e      	b.n	1910 <__aeabi_dadd+0xdc>
    1ab2:	0038      	movs	r0, r7
    1ab4:	f001 fb04 	bl	30c0 <__clzsi2>
    1ab8:	3020      	adds	r0, #32
    1aba:	e71d      	b.n	18f8 <__aeabi_dadd+0xc4>
    1abc:	430a      	orrs	r2, r1
    1abe:	1e51      	subs	r1, r2, #1
    1ac0:	418a      	sbcs	r2, r1
    1ac2:	2100      	movs	r1, #0
    1ac4:	e707      	b.n	18d6 <__aeabi_dadd+0xa2>
    1ac6:	2b00      	cmp	r3, #0
    1ac8:	d000      	beq.n	1acc <__aeabi_dadd+0x298>
    1aca:	e0f3      	b.n	1cb4 <__aeabi_dadd+0x480>
    1acc:	1c70      	adds	r0, r6, #1
    1ace:	0543      	lsls	r3, r0, #21
    1ad0:	0d5b      	lsrs	r3, r3, #21
    1ad2:	2b01      	cmp	r3, #1
    1ad4:	dc00      	bgt.n	1ad8 <__aeabi_dadd+0x2a4>
    1ad6:	e0ad      	b.n	1c34 <__aeabi_dadd+0x400>
    1ad8:	4b36      	ldr	r3, [pc, #216]	; (1bb4 <__aeabi_dadd+0x380>)
    1ada:	4298      	cmp	r0, r3
    1adc:	d100      	bne.n	1ae0 <__aeabi_dadd+0x2ac>
    1ade:	e0d1      	b.n	1c84 <__aeabi_dadd+0x450>
    1ae0:	18ba      	adds	r2, r7, r2
    1ae2:	42ba      	cmp	r2, r7
    1ae4:	41bf      	sbcs	r7, r7
    1ae6:	1864      	adds	r4, r4, r1
    1ae8:	427f      	negs	r7, r7
    1aea:	19e4      	adds	r4, r4, r7
    1aec:	07e7      	lsls	r7, r4, #31
    1aee:	0852      	lsrs	r2, r2, #1
    1af0:	4317      	orrs	r7, r2
    1af2:	0864      	lsrs	r4, r4, #1
    1af4:	0006      	movs	r6, r0
    1af6:	e721      	b.n	193c <__aeabi_dadd+0x108>
    1af8:	482e      	ldr	r0, [pc, #184]	; (1bb4 <__aeabi_dadd+0x380>)
    1afa:	4285      	cmp	r5, r0
    1afc:	d100      	bne.n	1b00 <__aeabi_dadd+0x2cc>
    1afe:	e093      	b.n	1c28 <__aeabi_dadd+0x3f4>
    1b00:	001d      	movs	r5, r3
    1b02:	e6d0      	b.n	18a6 <__aeabi_dadd+0x72>
    1b04:	0029      	movs	r1, r5
    1b06:	3e1f      	subs	r6, #31
    1b08:	40f1      	lsrs	r1, r6
    1b0a:	2b20      	cmp	r3, #32
    1b0c:	d100      	bne.n	1b10 <__aeabi_dadd+0x2dc>
    1b0e:	e08d      	b.n	1c2c <__aeabi_dadd+0x3f8>
    1b10:	2240      	movs	r2, #64	; 0x40
    1b12:	1ad3      	subs	r3, r2, r3
    1b14:	409d      	lsls	r5, r3
    1b16:	432f      	orrs	r7, r5
    1b18:	1e7d      	subs	r5, r7, #1
    1b1a:	41af      	sbcs	r7, r5
    1b1c:	2400      	movs	r4, #0
    1b1e:	430f      	orrs	r7, r1
    1b20:	2600      	movs	r6, #0
    1b22:	e744      	b.n	19ae <__aeabi_dadd+0x17a>
    1b24:	002b      	movs	r3, r5
    1b26:	0008      	movs	r0, r1
    1b28:	3b20      	subs	r3, #32
    1b2a:	40d8      	lsrs	r0, r3
    1b2c:	0003      	movs	r3, r0
    1b2e:	2d20      	cmp	r5, #32
    1b30:	d100      	bne.n	1b34 <__aeabi_dadd+0x300>
    1b32:	e07d      	b.n	1c30 <__aeabi_dadd+0x3fc>
    1b34:	2040      	movs	r0, #64	; 0x40
    1b36:	1b45      	subs	r5, r0, r5
    1b38:	40a9      	lsls	r1, r5
    1b3a:	430a      	orrs	r2, r1
    1b3c:	1e51      	subs	r1, r2, #1
    1b3e:	418a      	sbcs	r2, r1
    1b40:	2100      	movs	r1, #0
    1b42:	431a      	orrs	r2, r3
    1b44:	e6c7      	b.n	18d6 <__aeabi_dadd+0xa2>
    1b46:	2e00      	cmp	r6, #0
    1b48:	d050      	beq.n	1bec <__aeabi_dadd+0x3b8>
    1b4a:	4e1a      	ldr	r6, [pc, #104]	; (1bb4 <__aeabi_dadd+0x380>)
    1b4c:	42b0      	cmp	r0, r6
    1b4e:	d057      	beq.n	1c00 <__aeabi_dadd+0x3cc>
    1b50:	2680      	movs	r6, #128	; 0x80
    1b52:	426b      	negs	r3, r5
    1b54:	4699      	mov	r9, r3
    1b56:	0436      	lsls	r6, r6, #16
    1b58:	4334      	orrs	r4, r6
    1b5a:	464b      	mov	r3, r9
    1b5c:	2b38      	cmp	r3, #56	; 0x38
    1b5e:	dd00      	ble.n	1b62 <__aeabi_dadd+0x32e>
    1b60:	e0d6      	b.n	1d10 <__aeabi_dadd+0x4dc>
    1b62:	2b1f      	cmp	r3, #31
    1b64:	dd00      	ble.n	1b68 <__aeabi_dadd+0x334>
    1b66:	e135      	b.n	1dd4 <__aeabi_dadd+0x5a0>
    1b68:	2620      	movs	r6, #32
    1b6a:	1af5      	subs	r5, r6, r3
    1b6c:	0026      	movs	r6, r4
    1b6e:	40ae      	lsls	r6, r5
    1b70:	46b2      	mov	sl, r6
    1b72:	003e      	movs	r6, r7
    1b74:	40de      	lsrs	r6, r3
    1b76:	46ac      	mov	ip, r5
    1b78:	0035      	movs	r5, r6
    1b7a:	4656      	mov	r6, sl
    1b7c:	432e      	orrs	r6, r5
    1b7e:	4665      	mov	r5, ip
    1b80:	40af      	lsls	r7, r5
    1b82:	1e7d      	subs	r5, r7, #1
    1b84:	41af      	sbcs	r7, r5
    1b86:	40dc      	lsrs	r4, r3
    1b88:	4337      	orrs	r7, r6
    1b8a:	1bd7      	subs	r7, r2, r7
    1b8c:	42ba      	cmp	r2, r7
    1b8e:	4192      	sbcs	r2, r2
    1b90:	1b0c      	subs	r4, r1, r4
    1b92:	4252      	negs	r2, r2
    1b94:	1aa4      	subs	r4, r4, r2
    1b96:	0006      	movs	r6, r0
    1b98:	46d8      	mov	r8, fp
    1b9a:	e6a3      	b.n	18e4 <__aeabi_dadd+0xb0>
    1b9c:	4664      	mov	r4, ip
    1b9e:	4667      	mov	r7, ip
    1ba0:	432c      	orrs	r4, r5
    1ba2:	d000      	beq.n	1ba6 <__aeabi_dadd+0x372>
    1ba4:	e6a2      	b.n	18ec <__aeabi_dadd+0xb8>
    1ba6:	2500      	movs	r5, #0
    1ba8:	2600      	movs	r6, #0
    1baa:	2700      	movs	r7, #0
    1bac:	e706      	b.n	19bc <__aeabi_dadd+0x188>
    1bae:	001e      	movs	r6, r3
    1bb0:	e6c4      	b.n	193c <__aeabi_dadd+0x108>
    1bb2:	46c0      	nop			; (mov r8, r8)
    1bb4:	000007ff 	.word	0x000007ff
    1bb8:	ff7fffff 	.word	0xff7fffff
    1bbc:	800fffff 	.word	0x800fffff
    1bc0:	2b1f      	cmp	r3, #31
    1bc2:	dc63      	bgt.n	1c8c <__aeabi_dadd+0x458>
    1bc4:	2020      	movs	r0, #32
    1bc6:	1ac3      	subs	r3, r0, r3
    1bc8:	0008      	movs	r0, r1
    1bca:	4098      	lsls	r0, r3
    1bcc:	469c      	mov	ip, r3
    1bce:	4683      	mov	fp, r0
    1bd0:	4653      	mov	r3, sl
    1bd2:	0010      	movs	r0, r2
    1bd4:	40d8      	lsrs	r0, r3
    1bd6:	0003      	movs	r3, r0
    1bd8:	4658      	mov	r0, fp
    1bda:	4318      	orrs	r0, r3
    1bdc:	4663      	mov	r3, ip
    1bde:	409a      	lsls	r2, r3
    1be0:	1e53      	subs	r3, r2, #1
    1be2:	419a      	sbcs	r2, r3
    1be4:	4653      	mov	r3, sl
    1be6:	4302      	orrs	r2, r0
    1be8:	40d9      	lsrs	r1, r3
    1bea:	e703      	b.n	19f4 <__aeabi_dadd+0x1c0>
    1bec:	0026      	movs	r6, r4
    1bee:	433e      	orrs	r6, r7
    1bf0:	d006      	beq.n	1c00 <__aeabi_dadd+0x3cc>
    1bf2:	43eb      	mvns	r3, r5
    1bf4:	4699      	mov	r9, r3
    1bf6:	2b00      	cmp	r3, #0
    1bf8:	d0c7      	beq.n	1b8a <__aeabi_dadd+0x356>
    1bfa:	4e94      	ldr	r6, [pc, #592]	; (1e4c <__aeabi_dadd+0x618>)
    1bfc:	42b0      	cmp	r0, r6
    1bfe:	d1ac      	bne.n	1b5a <__aeabi_dadd+0x326>
    1c00:	000c      	movs	r4, r1
    1c02:	0017      	movs	r7, r2
    1c04:	0006      	movs	r6, r0
    1c06:	46d8      	mov	r8, fp
    1c08:	e698      	b.n	193c <__aeabi_dadd+0x108>
    1c0a:	4b90      	ldr	r3, [pc, #576]	; (1e4c <__aeabi_dadd+0x618>)
    1c0c:	459a      	cmp	sl, r3
    1c0e:	d00b      	beq.n	1c28 <__aeabi_dadd+0x3f4>
    1c10:	4682      	mov	sl, r0
    1c12:	e6e7      	b.n	19e4 <__aeabi_dadd+0x1b0>
    1c14:	2800      	cmp	r0, #0
    1c16:	d000      	beq.n	1c1a <__aeabi_dadd+0x3e6>
    1c18:	e09e      	b.n	1d58 <__aeabi_dadd+0x524>
    1c1a:	0018      	movs	r0, r3
    1c1c:	4310      	orrs	r0, r2
    1c1e:	d100      	bne.n	1c22 <__aeabi_dadd+0x3ee>
    1c20:	e0e9      	b.n	1df6 <__aeabi_dadd+0x5c2>
    1c22:	001c      	movs	r4, r3
    1c24:	0017      	movs	r7, r2
    1c26:	46d8      	mov	r8, fp
    1c28:	4e88      	ldr	r6, [pc, #544]	; (1e4c <__aeabi_dadd+0x618>)
    1c2a:	e687      	b.n	193c <__aeabi_dadd+0x108>
    1c2c:	2500      	movs	r5, #0
    1c2e:	e772      	b.n	1b16 <__aeabi_dadd+0x2e2>
    1c30:	2100      	movs	r1, #0
    1c32:	e782      	b.n	1b3a <__aeabi_dadd+0x306>
    1c34:	0023      	movs	r3, r4
    1c36:	433b      	orrs	r3, r7
    1c38:	2e00      	cmp	r6, #0
    1c3a:	d000      	beq.n	1c3e <__aeabi_dadd+0x40a>
    1c3c:	e0ab      	b.n	1d96 <__aeabi_dadd+0x562>
    1c3e:	2b00      	cmp	r3, #0
    1c40:	d100      	bne.n	1c44 <__aeabi_dadd+0x410>
    1c42:	e0e7      	b.n	1e14 <__aeabi_dadd+0x5e0>
    1c44:	000b      	movs	r3, r1
    1c46:	4313      	orrs	r3, r2
    1c48:	d100      	bne.n	1c4c <__aeabi_dadd+0x418>
    1c4a:	e677      	b.n	193c <__aeabi_dadd+0x108>
    1c4c:	18ba      	adds	r2, r7, r2
    1c4e:	42ba      	cmp	r2, r7
    1c50:	41bf      	sbcs	r7, r7
    1c52:	1864      	adds	r4, r4, r1
    1c54:	427f      	negs	r7, r7
    1c56:	19e4      	adds	r4, r4, r7
    1c58:	0223      	lsls	r3, r4, #8
    1c5a:	d400      	bmi.n	1c5e <__aeabi_dadd+0x42a>
    1c5c:	e0f2      	b.n	1e44 <__aeabi_dadd+0x610>
    1c5e:	4b7c      	ldr	r3, [pc, #496]	; (1e50 <__aeabi_dadd+0x61c>)
    1c60:	0017      	movs	r7, r2
    1c62:	401c      	ands	r4, r3
    1c64:	0006      	movs	r6, r0
    1c66:	e669      	b.n	193c <__aeabi_dadd+0x108>
    1c68:	0020      	movs	r0, r4
    1c6a:	4338      	orrs	r0, r7
    1c6c:	2e00      	cmp	r6, #0
    1c6e:	d1d1      	bne.n	1c14 <__aeabi_dadd+0x3e0>
    1c70:	2800      	cmp	r0, #0
    1c72:	d15b      	bne.n	1d2c <__aeabi_dadd+0x4f8>
    1c74:	001c      	movs	r4, r3
    1c76:	4314      	orrs	r4, r2
    1c78:	d100      	bne.n	1c7c <__aeabi_dadd+0x448>
    1c7a:	e0a8      	b.n	1dce <__aeabi_dadd+0x59a>
    1c7c:	001c      	movs	r4, r3
    1c7e:	0017      	movs	r7, r2
    1c80:	46d8      	mov	r8, fp
    1c82:	e65b      	b.n	193c <__aeabi_dadd+0x108>
    1c84:	0006      	movs	r6, r0
    1c86:	2400      	movs	r4, #0
    1c88:	2700      	movs	r7, #0
    1c8a:	e697      	b.n	19bc <__aeabi_dadd+0x188>
    1c8c:	4650      	mov	r0, sl
    1c8e:	000b      	movs	r3, r1
    1c90:	3820      	subs	r0, #32
    1c92:	40c3      	lsrs	r3, r0
    1c94:	4699      	mov	r9, r3
    1c96:	4653      	mov	r3, sl
    1c98:	2b20      	cmp	r3, #32
    1c9a:	d100      	bne.n	1c9e <__aeabi_dadd+0x46a>
    1c9c:	e095      	b.n	1dca <__aeabi_dadd+0x596>
    1c9e:	2340      	movs	r3, #64	; 0x40
    1ca0:	4650      	mov	r0, sl
    1ca2:	1a1b      	subs	r3, r3, r0
    1ca4:	4099      	lsls	r1, r3
    1ca6:	430a      	orrs	r2, r1
    1ca8:	1e51      	subs	r1, r2, #1
    1caa:	418a      	sbcs	r2, r1
    1cac:	464b      	mov	r3, r9
    1cae:	2100      	movs	r1, #0
    1cb0:	431a      	orrs	r2, r3
    1cb2:	e69f      	b.n	19f4 <__aeabi_dadd+0x1c0>
    1cb4:	2e00      	cmp	r6, #0
    1cb6:	d130      	bne.n	1d1a <__aeabi_dadd+0x4e6>
    1cb8:	0026      	movs	r6, r4
    1cba:	433e      	orrs	r6, r7
    1cbc:	d067      	beq.n	1d8e <__aeabi_dadd+0x55a>
    1cbe:	43db      	mvns	r3, r3
    1cc0:	469a      	mov	sl, r3
    1cc2:	2b00      	cmp	r3, #0
    1cc4:	d01c      	beq.n	1d00 <__aeabi_dadd+0x4cc>
    1cc6:	4e61      	ldr	r6, [pc, #388]	; (1e4c <__aeabi_dadd+0x618>)
    1cc8:	42b0      	cmp	r0, r6
    1cca:	d060      	beq.n	1d8e <__aeabi_dadd+0x55a>
    1ccc:	4653      	mov	r3, sl
    1cce:	2b38      	cmp	r3, #56	; 0x38
    1cd0:	dd00      	ble.n	1cd4 <__aeabi_dadd+0x4a0>
    1cd2:	e096      	b.n	1e02 <__aeabi_dadd+0x5ce>
    1cd4:	2b1f      	cmp	r3, #31
    1cd6:	dd00      	ble.n	1cda <__aeabi_dadd+0x4a6>
    1cd8:	e09f      	b.n	1e1a <__aeabi_dadd+0x5e6>
    1cda:	2620      	movs	r6, #32
    1cdc:	1af3      	subs	r3, r6, r3
    1cde:	0026      	movs	r6, r4
    1ce0:	409e      	lsls	r6, r3
    1ce2:	469c      	mov	ip, r3
    1ce4:	46b3      	mov	fp, r6
    1ce6:	4653      	mov	r3, sl
    1ce8:	003e      	movs	r6, r7
    1cea:	40de      	lsrs	r6, r3
    1cec:	0033      	movs	r3, r6
    1cee:	465e      	mov	r6, fp
    1cf0:	431e      	orrs	r6, r3
    1cf2:	4663      	mov	r3, ip
    1cf4:	409f      	lsls	r7, r3
    1cf6:	1e7b      	subs	r3, r7, #1
    1cf8:	419f      	sbcs	r7, r3
    1cfa:	4653      	mov	r3, sl
    1cfc:	40dc      	lsrs	r4, r3
    1cfe:	4337      	orrs	r7, r6
    1d00:	18bf      	adds	r7, r7, r2
    1d02:	4297      	cmp	r7, r2
    1d04:	4192      	sbcs	r2, r2
    1d06:	1864      	adds	r4, r4, r1
    1d08:	4252      	negs	r2, r2
    1d0a:	18a4      	adds	r4, r4, r2
    1d0c:	0006      	movs	r6, r0
    1d0e:	e678      	b.n	1a02 <__aeabi_dadd+0x1ce>
    1d10:	4327      	orrs	r7, r4
    1d12:	1e7c      	subs	r4, r7, #1
    1d14:	41a7      	sbcs	r7, r4
    1d16:	2400      	movs	r4, #0
    1d18:	e737      	b.n	1b8a <__aeabi_dadd+0x356>
    1d1a:	4e4c      	ldr	r6, [pc, #304]	; (1e4c <__aeabi_dadd+0x618>)
    1d1c:	42b0      	cmp	r0, r6
    1d1e:	d036      	beq.n	1d8e <__aeabi_dadd+0x55a>
    1d20:	2680      	movs	r6, #128	; 0x80
    1d22:	425b      	negs	r3, r3
    1d24:	0436      	lsls	r6, r6, #16
    1d26:	469a      	mov	sl, r3
    1d28:	4334      	orrs	r4, r6
    1d2a:	e7cf      	b.n	1ccc <__aeabi_dadd+0x498>
    1d2c:	0018      	movs	r0, r3
    1d2e:	4310      	orrs	r0, r2
    1d30:	d100      	bne.n	1d34 <__aeabi_dadd+0x500>
    1d32:	e603      	b.n	193c <__aeabi_dadd+0x108>
    1d34:	1ab8      	subs	r0, r7, r2
    1d36:	4684      	mov	ip, r0
    1d38:	4567      	cmp	r7, ip
    1d3a:	41ad      	sbcs	r5, r5
    1d3c:	1ae0      	subs	r0, r4, r3
    1d3e:	426d      	negs	r5, r5
    1d40:	1b40      	subs	r0, r0, r5
    1d42:	0205      	lsls	r5, r0, #8
    1d44:	d400      	bmi.n	1d48 <__aeabi_dadd+0x514>
    1d46:	e62c      	b.n	19a2 <__aeabi_dadd+0x16e>
    1d48:	1bd7      	subs	r7, r2, r7
    1d4a:	42ba      	cmp	r2, r7
    1d4c:	4192      	sbcs	r2, r2
    1d4e:	1b1c      	subs	r4, r3, r4
    1d50:	4252      	negs	r2, r2
    1d52:	1aa4      	subs	r4, r4, r2
    1d54:	46d8      	mov	r8, fp
    1d56:	e5f1      	b.n	193c <__aeabi_dadd+0x108>
    1d58:	0018      	movs	r0, r3
    1d5a:	4310      	orrs	r0, r2
    1d5c:	d100      	bne.n	1d60 <__aeabi_dadd+0x52c>
    1d5e:	e763      	b.n	1c28 <__aeabi_dadd+0x3f4>
    1d60:	08f8      	lsrs	r0, r7, #3
    1d62:	0767      	lsls	r7, r4, #29
    1d64:	4307      	orrs	r7, r0
    1d66:	2080      	movs	r0, #128	; 0x80
    1d68:	08e4      	lsrs	r4, r4, #3
    1d6a:	0300      	lsls	r0, r0, #12
    1d6c:	4204      	tst	r4, r0
    1d6e:	d008      	beq.n	1d82 <__aeabi_dadd+0x54e>
    1d70:	08dd      	lsrs	r5, r3, #3
    1d72:	4205      	tst	r5, r0
    1d74:	d105      	bne.n	1d82 <__aeabi_dadd+0x54e>
    1d76:	08d2      	lsrs	r2, r2, #3
    1d78:	0759      	lsls	r1, r3, #29
    1d7a:	4311      	orrs	r1, r2
    1d7c:	000f      	movs	r7, r1
    1d7e:	002c      	movs	r4, r5
    1d80:	46d8      	mov	r8, fp
    1d82:	0f7b      	lsrs	r3, r7, #29
    1d84:	00e4      	lsls	r4, r4, #3
    1d86:	431c      	orrs	r4, r3
    1d88:	00ff      	lsls	r7, r7, #3
    1d8a:	4e30      	ldr	r6, [pc, #192]	; (1e4c <__aeabi_dadd+0x618>)
    1d8c:	e5d6      	b.n	193c <__aeabi_dadd+0x108>
    1d8e:	000c      	movs	r4, r1
    1d90:	0017      	movs	r7, r2
    1d92:	0006      	movs	r6, r0
    1d94:	e5d2      	b.n	193c <__aeabi_dadd+0x108>
    1d96:	2b00      	cmp	r3, #0
    1d98:	d038      	beq.n	1e0c <__aeabi_dadd+0x5d8>
    1d9a:	000b      	movs	r3, r1
    1d9c:	4313      	orrs	r3, r2
    1d9e:	d100      	bne.n	1da2 <__aeabi_dadd+0x56e>
    1da0:	e742      	b.n	1c28 <__aeabi_dadd+0x3f4>
    1da2:	08f8      	lsrs	r0, r7, #3
    1da4:	0767      	lsls	r7, r4, #29
    1da6:	4307      	orrs	r7, r0
    1da8:	2080      	movs	r0, #128	; 0x80
    1daa:	08e4      	lsrs	r4, r4, #3
    1dac:	0300      	lsls	r0, r0, #12
    1dae:	4204      	tst	r4, r0
    1db0:	d0e7      	beq.n	1d82 <__aeabi_dadd+0x54e>
    1db2:	08cb      	lsrs	r3, r1, #3
    1db4:	4203      	tst	r3, r0
    1db6:	d1e4      	bne.n	1d82 <__aeabi_dadd+0x54e>
    1db8:	08d2      	lsrs	r2, r2, #3
    1dba:	0749      	lsls	r1, r1, #29
    1dbc:	4311      	orrs	r1, r2
    1dbe:	000f      	movs	r7, r1
    1dc0:	001c      	movs	r4, r3
    1dc2:	e7de      	b.n	1d82 <__aeabi_dadd+0x54e>
    1dc4:	2700      	movs	r7, #0
    1dc6:	2400      	movs	r4, #0
    1dc8:	e5d5      	b.n	1976 <__aeabi_dadd+0x142>
    1dca:	2100      	movs	r1, #0
    1dcc:	e76b      	b.n	1ca6 <__aeabi_dadd+0x472>
    1dce:	2500      	movs	r5, #0
    1dd0:	2700      	movs	r7, #0
    1dd2:	e5f3      	b.n	19bc <__aeabi_dadd+0x188>
    1dd4:	464e      	mov	r6, r9
    1dd6:	0025      	movs	r5, r4
    1dd8:	3e20      	subs	r6, #32
    1dda:	40f5      	lsrs	r5, r6
    1ddc:	464b      	mov	r3, r9
    1dde:	002e      	movs	r6, r5
    1de0:	2b20      	cmp	r3, #32
    1de2:	d02d      	beq.n	1e40 <__aeabi_dadd+0x60c>
    1de4:	2540      	movs	r5, #64	; 0x40
    1de6:	1aed      	subs	r5, r5, r3
    1de8:	40ac      	lsls	r4, r5
    1dea:	4327      	orrs	r7, r4
    1dec:	1e7c      	subs	r4, r7, #1
    1dee:	41a7      	sbcs	r7, r4
    1df0:	2400      	movs	r4, #0
    1df2:	4337      	orrs	r7, r6
    1df4:	e6c9      	b.n	1b8a <__aeabi_dadd+0x356>
    1df6:	2480      	movs	r4, #128	; 0x80
    1df8:	2500      	movs	r5, #0
    1dfa:	0324      	lsls	r4, r4, #12
    1dfc:	4e13      	ldr	r6, [pc, #76]	; (1e4c <__aeabi_dadd+0x618>)
    1dfe:	2700      	movs	r7, #0
    1e00:	e5dc      	b.n	19bc <__aeabi_dadd+0x188>
    1e02:	4327      	orrs	r7, r4
    1e04:	1e7c      	subs	r4, r7, #1
    1e06:	41a7      	sbcs	r7, r4
    1e08:	2400      	movs	r4, #0
    1e0a:	e779      	b.n	1d00 <__aeabi_dadd+0x4cc>
    1e0c:	000c      	movs	r4, r1
    1e0e:	0017      	movs	r7, r2
    1e10:	4e0e      	ldr	r6, [pc, #56]	; (1e4c <__aeabi_dadd+0x618>)
    1e12:	e593      	b.n	193c <__aeabi_dadd+0x108>
    1e14:	000c      	movs	r4, r1
    1e16:	0017      	movs	r7, r2
    1e18:	e590      	b.n	193c <__aeabi_dadd+0x108>
    1e1a:	4656      	mov	r6, sl
    1e1c:	0023      	movs	r3, r4
    1e1e:	3e20      	subs	r6, #32
    1e20:	40f3      	lsrs	r3, r6
    1e22:	4699      	mov	r9, r3
    1e24:	4653      	mov	r3, sl
    1e26:	2b20      	cmp	r3, #32
    1e28:	d00e      	beq.n	1e48 <__aeabi_dadd+0x614>
    1e2a:	2340      	movs	r3, #64	; 0x40
    1e2c:	4656      	mov	r6, sl
    1e2e:	1b9b      	subs	r3, r3, r6
    1e30:	409c      	lsls	r4, r3
    1e32:	4327      	orrs	r7, r4
    1e34:	1e7c      	subs	r4, r7, #1
    1e36:	41a7      	sbcs	r7, r4
    1e38:	464b      	mov	r3, r9
    1e3a:	2400      	movs	r4, #0
    1e3c:	431f      	orrs	r7, r3
    1e3e:	e75f      	b.n	1d00 <__aeabi_dadd+0x4cc>
    1e40:	2400      	movs	r4, #0
    1e42:	e7d2      	b.n	1dea <__aeabi_dadd+0x5b6>
    1e44:	0017      	movs	r7, r2
    1e46:	e5b2      	b.n	19ae <__aeabi_dadd+0x17a>
    1e48:	2400      	movs	r4, #0
    1e4a:	e7f2      	b.n	1e32 <__aeabi_dadd+0x5fe>
    1e4c:	000007ff 	.word	0x000007ff
    1e50:	ff7fffff 	.word	0xff7fffff

00001e54 <__aeabi_ddiv>:
    1e54:	b5f0      	push	{r4, r5, r6, r7, lr}
    1e56:	4657      	mov	r7, sl
    1e58:	4645      	mov	r5, r8
    1e5a:	46de      	mov	lr, fp
    1e5c:	464e      	mov	r6, r9
    1e5e:	b5e0      	push	{r5, r6, r7, lr}
    1e60:	004c      	lsls	r4, r1, #1
    1e62:	030e      	lsls	r6, r1, #12
    1e64:	b087      	sub	sp, #28
    1e66:	4683      	mov	fp, r0
    1e68:	4692      	mov	sl, r2
    1e6a:	001d      	movs	r5, r3
    1e6c:	4680      	mov	r8, r0
    1e6e:	0b36      	lsrs	r6, r6, #12
    1e70:	0d64      	lsrs	r4, r4, #21
    1e72:	0fcf      	lsrs	r7, r1, #31
    1e74:	2c00      	cmp	r4, #0
    1e76:	d04f      	beq.n	1f18 <__aeabi_ddiv+0xc4>
    1e78:	4b6f      	ldr	r3, [pc, #444]	; (2038 <STACK_SIZE+0x38>)
    1e7a:	429c      	cmp	r4, r3
    1e7c:	d035      	beq.n	1eea <__aeabi_ddiv+0x96>
    1e7e:	2380      	movs	r3, #128	; 0x80
    1e80:	0f42      	lsrs	r2, r0, #29
    1e82:	041b      	lsls	r3, r3, #16
    1e84:	00f6      	lsls	r6, r6, #3
    1e86:	4313      	orrs	r3, r2
    1e88:	4333      	orrs	r3, r6
    1e8a:	4699      	mov	r9, r3
    1e8c:	00c3      	lsls	r3, r0, #3
    1e8e:	4698      	mov	r8, r3
    1e90:	4b6a      	ldr	r3, [pc, #424]	; (203c <STACK_SIZE+0x3c>)
    1e92:	2600      	movs	r6, #0
    1e94:	469c      	mov	ip, r3
    1e96:	2300      	movs	r3, #0
    1e98:	4464      	add	r4, ip
    1e9a:	9303      	str	r3, [sp, #12]
    1e9c:	032b      	lsls	r3, r5, #12
    1e9e:	0b1b      	lsrs	r3, r3, #12
    1ea0:	469b      	mov	fp, r3
    1ea2:	006b      	lsls	r3, r5, #1
    1ea4:	0fed      	lsrs	r5, r5, #31
    1ea6:	4650      	mov	r0, sl
    1ea8:	0d5b      	lsrs	r3, r3, #21
    1eaa:	9501      	str	r5, [sp, #4]
    1eac:	d05e      	beq.n	1f6c <__aeabi_ddiv+0x118>
    1eae:	4a62      	ldr	r2, [pc, #392]	; (2038 <STACK_SIZE+0x38>)
    1eb0:	4293      	cmp	r3, r2
    1eb2:	d053      	beq.n	1f5c <__aeabi_ddiv+0x108>
    1eb4:	465a      	mov	r2, fp
    1eb6:	00d1      	lsls	r1, r2, #3
    1eb8:	2280      	movs	r2, #128	; 0x80
    1eba:	0f40      	lsrs	r0, r0, #29
    1ebc:	0412      	lsls	r2, r2, #16
    1ebe:	4302      	orrs	r2, r0
    1ec0:	430a      	orrs	r2, r1
    1ec2:	4693      	mov	fp, r2
    1ec4:	4652      	mov	r2, sl
    1ec6:	00d1      	lsls	r1, r2, #3
    1ec8:	4a5c      	ldr	r2, [pc, #368]	; (203c <STACK_SIZE+0x3c>)
    1eca:	4694      	mov	ip, r2
    1ecc:	2200      	movs	r2, #0
    1ece:	4463      	add	r3, ip
    1ed0:	0038      	movs	r0, r7
    1ed2:	4068      	eors	r0, r5
    1ed4:	4684      	mov	ip, r0
    1ed6:	9002      	str	r0, [sp, #8]
    1ed8:	1ae4      	subs	r4, r4, r3
    1eda:	4316      	orrs	r6, r2
    1edc:	2e0f      	cmp	r6, #15
    1ede:	d900      	bls.n	1ee2 <__aeabi_ddiv+0x8e>
    1ee0:	e0b4      	b.n	204c <STACK_SIZE+0x4c>
    1ee2:	4b57      	ldr	r3, [pc, #348]	; (2040 <STACK_SIZE+0x40>)
    1ee4:	00b6      	lsls	r6, r6, #2
    1ee6:	599b      	ldr	r3, [r3, r6]
    1ee8:	469f      	mov	pc, r3
    1eea:	0003      	movs	r3, r0
    1eec:	4333      	orrs	r3, r6
    1eee:	4699      	mov	r9, r3
    1ef0:	d16c      	bne.n	1fcc <__aeabi_ddiv+0x178>
    1ef2:	2300      	movs	r3, #0
    1ef4:	4698      	mov	r8, r3
    1ef6:	3302      	adds	r3, #2
    1ef8:	2608      	movs	r6, #8
    1efa:	9303      	str	r3, [sp, #12]
    1efc:	e7ce      	b.n	1e9c <__aeabi_ddiv+0x48>
    1efe:	46cb      	mov	fp, r9
    1f00:	4641      	mov	r1, r8
    1f02:	9a03      	ldr	r2, [sp, #12]
    1f04:	9701      	str	r7, [sp, #4]
    1f06:	2a02      	cmp	r2, #2
    1f08:	d165      	bne.n	1fd6 <__aeabi_ddiv+0x182>
    1f0a:	9b01      	ldr	r3, [sp, #4]
    1f0c:	4c4a      	ldr	r4, [pc, #296]	; (2038 <STACK_SIZE+0x38>)
    1f0e:	469c      	mov	ip, r3
    1f10:	2300      	movs	r3, #0
    1f12:	2200      	movs	r2, #0
    1f14:	4698      	mov	r8, r3
    1f16:	e06b      	b.n	1ff0 <__aeabi_ddiv+0x19c>
    1f18:	0003      	movs	r3, r0
    1f1a:	4333      	orrs	r3, r6
    1f1c:	4699      	mov	r9, r3
    1f1e:	d04e      	beq.n	1fbe <__aeabi_ddiv+0x16a>
    1f20:	2e00      	cmp	r6, #0
    1f22:	d100      	bne.n	1f26 <__aeabi_ddiv+0xd2>
    1f24:	e1bc      	b.n	22a0 <STACK_SIZE+0x2a0>
    1f26:	0030      	movs	r0, r6
    1f28:	f001 f8ca 	bl	30c0 <__clzsi2>
    1f2c:	0003      	movs	r3, r0
    1f2e:	3b0b      	subs	r3, #11
    1f30:	2b1c      	cmp	r3, #28
    1f32:	dd00      	ble.n	1f36 <__aeabi_ddiv+0xe2>
    1f34:	e1ac      	b.n	2290 <STACK_SIZE+0x290>
    1f36:	221d      	movs	r2, #29
    1f38:	1ad3      	subs	r3, r2, r3
    1f3a:	465a      	mov	r2, fp
    1f3c:	0001      	movs	r1, r0
    1f3e:	40da      	lsrs	r2, r3
    1f40:	3908      	subs	r1, #8
    1f42:	408e      	lsls	r6, r1
    1f44:	0013      	movs	r3, r2
    1f46:	4333      	orrs	r3, r6
    1f48:	4699      	mov	r9, r3
    1f4a:	465b      	mov	r3, fp
    1f4c:	408b      	lsls	r3, r1
    1f4e:	4698      	mov	r8, r3
    1f50:	2300      	movs	r3, #0
    1f52:	4c3c      	ldr	r4, [pc, #240]	; (2044 <STACK_SIZE+0x44>)
    1f54:	2600      	movs	r6, #0
    1f56:	1a24      	subs	r4, r4, r0
    1f58:	9303      	str	r3, [sp, #12]
    1f5a:	e79f      	b.n	1e9c <__aeabi_ddiv+0x48>
    1f5c:	4651      	mov	r1, sl
    1f5e:	465a      	mov	r2, fp
    1f60:	4311      	orrs	r1, r2
    1f62:	d129      	bne.n	1fb8 <__aeabi_ddiv+0x164>
    1f64:	2200      	movs	r2, #0
    1f66:	4693      	mov	fp, r2
    1f68:	3202      	adds	r2, #2
    1f6a:	e7b1      	b.n	1ed0 <__aeabi_ddiv+0x7c>
    1f6c:	4659      	mov	r1, fp
    1f6e:	4301      	orrs	r1, r0
    1f70:	d01e      	beq.n	1fb0 <__aeabi_ddiv+0x15c>
    1f72:	465b      	mov	r3, fp
    1f74:	2b00      	cmp	r3, #0
    1f76:	d100      	bne.n	1f7a <__aeabi_ddiv+0x126>
    1f78:	e19e      	b.n	22b8 <STACK_SIZE+0x2b8>
    1f7a:	4658      	mov	r0, fp
    1f7c:	f001 f8a0 	bl	30c0 <__clzsi2>
    1f80:	0003      	movs	r3, r0
    1f82:	3b0b      	subs	r3, #11
    1f84:	2b1c      	cmp	r3, #28
    1f86:	dd00      	ble.n	1f8a <__aeabi_ddiv+0x136>
    1f88:	e18f      	b.n	22aa <STACK_SIZE+0x2aa>
    1f8a:	0002      	movs	r2, r0
    1f8c:	4659      	mov	r1, fp
    1f8e:	3a08      	subs	r2, #8
    1f90:	4091      	lsls	r1, r2
    1f92:	468b      	mov	fp, r1
    1f94:	211d      	movs	r1, #29
    1f96:	1acb      	subs	r3, r1, r3
    1f98:	4651      	mov	r1, sl
    1f9a:	40d9      	lsrs	r1, r3
    1f9c:	000b      	movs	r3, r1
    1f9e:	4659      	mov	r1, fp
    1fa0:	430b      	orrs	r3, r1
    1fa2:	4651      	mov	r1, sl
    1fa4:	469b      	mov	fp, r3
    1fa6:	4091      	lsls	r1, r2
    1fa8:	4b26      	ldr	r3, [pc, #152]	; (2044 <STACK_SIZE+0x44>)
    1faa:	2200      	movs	r2, #0
    1fac:	1a1b      	subs	r3, r3, r0
    1fae:	e78f      	b.n	1ed0 <__aeabi_ddiv+0x7c>
    1fb0:	2300      	movs	r3, #0
    1fb2:	2201      	movs	r2, #1
    1fb4:	469b      	mov	fp, r3
    1fb6:	e78b      	b.n	1ed0 <__aeabi_ddiv+0x7c>
    1fb8:	4651      	mov	r1, sl
    1fba:	2203      	movs	r2, #3
    1fbc:	e788      	b.n	1ed0 <__aeabi_ddiv+0x7c>
    1fbe:	2300      	movs	r3, #0
    1fc0:	4698      	mov	r8, r3
    1fc2:	3301      	adds	r3, #1
    1fc4:	2604      	movs	r6, #4
    1fc6:	2400      	movs	r4, #0
    1fc8:	9303      	str	r3, [sp, #12]
    1fca:	e767      	b.n	1e9c <__aeabi_ddiv+0x48>
    1fcc:	2303      	movs	r3, #3
    1fce:	46b1      	mov	r9, r6
    1fd0:	9303      	str	r3, [sp, #12]
    1fd2:	260c      	movs	r6, #12
    1fd4:	e762      	b.n	1e9c <__aeabi_ddiv+0x48>
    1fd6:	2a03      	cmp	r2, #3
    1fd8:	d100      	bne.n	1fdc <__aeabi_ddiv+0x188>
    1fda:	e25c      	b.n	2496 <STACK_SIZE+0x496>
    1fdc:	9b01      	ldr	r3, [sp, #4]
    1fde:	2a01      	cmp	r2, #1
    1fe0:	d000      	beq.n	1fe4 <__aeabi_ddiv+0x190>
    1fe2:	e1e4      	b.n	23ae <STACK_SIZE+0x3ae>
    1fe4:	4013      	ands	r3, r2
    1fe6:	469c      	mov	ip, r3
    1fe8:	2300      	movs	r3, #0
    1fea:	2400      	movs	r4, #0
    1fec:	2200      	movs	r2, #0
    1fee:	4698      	mov	r8, r3
    1ff0:	2100      	movs	r1, #0
    1ff2:	0312      	lsls	r2, r2, #12
    1ff4:	0b13      	lsrs	r3, r2, #12
    1ff6:	0d0a      	lsrs	r2, r1, #20
    1ff8:	0512      	lsls	r2, r2, #20
    1ffa:	431a      	orrs	r2, r3
    1ffc:	0523      	lsls	r3, r4, #20
    1ffe:	4c12      	ldr	r4, [pc, #72]	; (2048 <STACK_SIZE+0x48>)
    2000:	4640      	mov	r0, r8
    2002:	4022      	ands	r2, r4
    2004:	4313      	orrs	r3, r2
    2006:	4662      	mov	r2, ip
    2008:	005b      	lsls	r3, r3, #1
    200a:	07d2      	lsls	r2, r2, #31
    200c:	085b      	lsrs	r3, r3, #1
    200e:	4313      	orrs	r3, r2
    2010:	0019      	movs	r1, r3
    2012:	b007      	add	sp, #28
    2014:	bc3c      	pop	{r2, r3, r4, r5}
    2016:	4690      	mov	r8, r2
    2018:	4699      	mov	r9, r3
    201a:	46a2      	mov	sl, r4
    201c:	46ab      	mov	fp, r5
    201e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2020:	2300      	movs	r3, #0
    2022:	2280      	movs	r2, #128	; 0x80
    2024:	469c      	mov	ip, r3
    2026:	0312      	lsls	r2, r2, #12
    2028:	4698      	mov	r8, r3
    202a:	4c03      	ldr	r4, [pc, #12]	; (2038 <STACK_SIZE+0x38>)
    202c:	e7e0      	b.n	1ff0 <__aeabi_ddiv+0x19c>
    202e:	2300      	movs	r3, #0
    2030:	4c01      	ldr	r4, [pc, #4]	; (2038 <STACK_SIZE+0x38>)
    2032:	2200      	movs	r2, #0
    2034:	4698      	mov	r8, r3
    2036:	e7db      	b.n	1ff0 <__aeabi_ddiv+0x19c>
    2038:	000007ff 	.word	0x000007ff
    203c:	fffffc01 	.word	0xfffffc01
    2040:	000031b4 	.word	0x000031b4
    2044:	fffffc0d 	.word	0xfffffc0d
    2048:	800fffff 	.word	0x800fffff
    204c:	45d9      	cmp	r9, fp
    204e:	d900      	bls.n	2052 <STACK_SIZE+0x52>
    2050:	e139      	b.n	22c6 <STACK_SIZE+0x2c6>
    2052:	d100      	bne.n	2056 <STACK_SIZE+0x56>
    2054:	e134      	b.n	22c0 <STACK_SIZE+0x2c0>
    2056:	2300      	movs	r3, #0
    2058:	4646      	mov	r6, r8
    205a:	464d      	mov	r5, r9
    205c:	469a      	mov	sl, r3
    205e:	3c01      	subs	r4, #1
    2060:	465b      	mov	r3, fp
    2062:	0e0a      	lsrs	r2, r1, #24
    2064:	021b      	lsls	r3, r3, #8
    2066:	431a      	orrs	r2, r3
    2068:	020b      	lsls	r3, r1, #8
    206a:	0c17      	lsrs	r7, r2, #16
    206c:	9303      	str	r3, [sp, #12]
    206e:	0413      	lsls	r3, r2, #16
    2070:	0c1b      	lsrs	r3, r3, #16
    2072:	0039      	movs	r1, r7
    2074:	0028      	movs	r0, r5
    2076:	4690      	mov	r8, r2
    2078:	9301      	str	r3, [sp, #4]
    207a:	f7ff fb4f 	bl	171c <__udivsi3>
    207e:	0002      	movs	r2, r0
    2080:	9b01      	ldr	r3, [sp, #4]
    2082:	4683      	mov	fp, r0
    2084:	435a      	muls	r2, r3
    2086:	0028      	movs	r0, r5
    2088:	0039      	movs	r1, r7
    208a:	4691      	mov	r9, r2
    208c:	f7ff fbcc 	bl	1828 <__aeabi_uidivmod>
    2090:	0c35      	lsrs	r5, r6, #16
    2092:	0409      	lsls	r1, r1, #16
    2094:	430d      	orrs	r5, r1
    2096:	45a9      	cmp	r9, r5
    2098:	d90d      	bls.n	20b6 <STACK_SIZE+0xb6>
    209a:	465b      	mov	r3, fp
    209c:	4445      	add	r5, r8
    209e:	3b01      	subs	r3, #1
    20a0:	45a8      	cmp	r8, r5
    20a2:	d900      	bls.n	20a6 <STACK_SIZE+0xa6>
    20a4:	e13a      	b.n	231c <STACK_SIZE+0x31c>
    20a6:	45a9      	cmp	r9, r5
    20a8:	d800      	bhi.n	20ac <STACK_SIZE+0xac>
    20aa:	e137      	b.n	231c <STACK_SIZE+0x31c>
    20ac:	2302      	movs	r3, #2
    20ae:	425b      	negs	r3, r3
    20b0:	469c      	mov	ip, r3
    20b2:	4445      	add	r5, r8
    20b4:	44e3      	add	fp, ip
    20b6:	464b      	mov	r3, r9
    20b8:	1aeb      	subs	r3, r5, r3
    20ba:	0039      	movs	r1, r7
    20bc:	0018      	movs	r0, r3
    20be:	9304      	str	r3, [sp, #16]
    20c0:	f7ff fb2c 	bl	171c <__udivsi3>
    20c4:	9b01      	ldr	r3, [sp, #4]
    20c6:	0005      	movs	r5, r0
    20c8:	4343      	muls	r3, r0
    20ca:	0039      	movs	r1, r7
    20cc:	9804      	ldr	r0, [sp, #16]
    20ce:	4699      	mov	r9, r3
    20d0:	f7ff fbaa 	bl	1828 <__aeabi_uidivmod>
    20d4:	0433      	lsls	r3, r6, #16
    20d6:	0409      	lsls	r1, r1, #16
    20d8:	0c1b      	lsrs	r3, r3, #16
    20da:	430b      	orrs	r3, r1
    20dc:	4599      	cmp	r9, r3
    20de:	d909      	bls.n	20f4 <STACK_SIZE+0xf4>
    20e0:	4443      	add	r3, r8
    20e2:	1e6a      	subs	r2, r5, #1
    20e4:	4598      	cmp	r8, r3
    20e6:	d900      	bls.n	20ea <STACK_SIZE+0xea>
    20e8:	e11a      	b.n	2320 <STACK_SIZE+0x320>
    20ea:	4599      	cmp	r9, r3
    20ec:	d800      	bhi.n	20f0 <STACK_SIZE+0xf0>
    20ee:	e117      	b.n	2320 <STACK_SIZE+0x320>
    20f0:	3d02      	subs	r5, #2
    20f2:	4443      	add	r3, r8
    20f4:	464a      	mov	r2, r9
    20f6:	1a9b      	subs	r3, r3, r2
    20f8:	465a      	mov	r2, fp
    20fa:	0412      	lsls	r2, r2, #16
    20fc:	432a      	orrs	r2, r5
    20fe:	9903      	ldr	r1, [sp, #12]
    2100:	4693      	mov	fp, r2
    2102:	0c10      	lsrs	r0, r2, #16
    2104:	0c0a      	lsrs	r2, r1, #16
    2106:	4691      	mov	r9, r2
    2108:	0409      	lsls	r1, r1, #16
    210a:	465a      	mov	r2, fp
    210c:	0c09      	lsrs	r1, r1, #16
    210e:	464e      	mov	r6, r9
    2110:	000d      	movs	r5, r1
    2112:	0412      	lsls	r2, r2, #16
    2114:	0c12      	lsrs	r2, r2, #16
    2116:	4345      	muls	r5, r0
    2118:	9105      	str	r1, [sp, #20]
    211a:	4351      	muls	r1, r2
    211c:	4372      	muls	r2, r6
    211e:	4370      	muls	r0, r6
    2120:	1952      	adds	r2, r2, r5
    2122:	0c0e      	lsrs	r6, r1, #16
    2124:	18b2      	adds	r2, r6, r2
    2126:	4295      	cmp	r5, r2
    2128:	d903      	bls.n	2132 <STACK_SIZE+0x132>
    212a:	2580      	movs	r5, #128	; 0x80
    212c:	026d      	lsls	r5, r5, #9
    212e:	46ac      	mov	ip, r5
    2130:	4460      	add	r0, ip
    2132:	0c15      	lsrs	r5, r2, #16
    2134:	0409      	lsls	r1, r1, #16
    2136:	0412      	lsls	r2, r2, #16
    2138:	0c09      	lsrs	r1, r1, #16
    213a:	1828      	adds	r0, r5, r0
    213c:	1852      	adds	r2, r2, r1
    213e:	4283      	cmp	r3, r0
    2140:	d200      	bcs.n	2144 <STACK_SIZE+0x144>
    2142:	e0ce      	b.n	22e2 <STACK_SIZE+0x2e2>
    2144:	d100      	bne.n	2148 <STACK_SIZE+0x148>
    2146:	e0c8      	b.n	22da <STACK_SIZE+0x2da>
    2148:	1a1d      	subs	r5, r3, r0
    214a:	4653      	mov	r3, sl
    214c:	1a9e      	subs	r6, r3, r2
    214e:	45b2      	cmp	sl, r6
    2150:	4192      	sbcs	r2, r2
    2152:	4252      	negs	r2, r2
    2154:	1aab      	subs	r3, r5, r2
    2156:	469a      	mov	sl, r3
    2158:	4598      	cmp	r8, r3
    215a:	d100      	bne.n	215e <STACK_SIZE+0x15e>
    215c:	e117      	b.n	238e <STACK_SIZE+0x38e>
    215e:	0039      	movs	r1, r7
    2160:	0018      	movs	r0, r3
    2162:	f7ff fadb 	bl	171c <__udivsi3>
    2166:	9b01      	ldr	r3, [sp, #4]
    2168:	0005      	movs	r5, r0
    216a:	4343      	muls	r3, r0
    216c:	0039      	movs	r1, r7
    216e:	4650      	mov	r0, sl
    2170:	9304      	str	r3, [sp, #16]
    2172:	f7ff fb59 	bl	1828 <__aeabi_uidivmod>
    2176:	9804      	ldr	r0, [sp, #16]
    2178:	040b      	lsls	r3, r1, #16
    217a:	0c31      	lsrs	r1, r6, #16
    217c:	4319      	orrs	r1, r3
    217e:	4288      	cmp	r0, r1
    2180:	d909      	bls.n	2196 <STACK_SIZE+0x196>
    2182:	4441      	add	r1, r8
    2184:	1e6b      	subs	r3, r5, #1
    2186:	4588      	cmp	r8, r1
    2188:	d900      	bls.n	218c <STACK_SIZE+0x18c>
    218a:	e107      	b.n	239c <STACK_SIZE+0x39c>
    218c:	4288      	cmp	r0, r1
    218e:	d800      	bhi.n	2192 <STACK_SIZE+0x192>
    2190:	e104      	b.n	239c <STACK_SIZE+0x39c>
    2192:	3d02      	subs	r5, #2
    2194:	4441      	add	r1, r8
    2196:	9b04      	ldr	r3, [sp, #16]
    2198:	1acb      	subs	r3, r1, r3
    219a:	0018      	movs	r0, r3
    219c:	0039      	movs	r1, r7
    219e:	9304      	str	r3, [sp, #16]
    21a0:	f7ff fabc 	bl	171c <__udivsi3>
    21a4:	9b01      	ldr	r3, [sp, #4]
    21a6:	4682      	mov	sl, r0
    21a8:	4343      	muls	r3, r0
    21aa:	0039      	movs	r1, r7
    21ac:	9804      	ldr	r0, [sp, #16]
    21ae:	9301      	str	r3, [sp, #4]
    21b0:	f7ff fb3a 	bl	1828 <__aeabi_uidivmod>
    21b4:	9801      	ldr	r0, [sp, #4]
    21b6:	040b      	lsls	r3, r1, #16
    21b8:	0431      	lsls	r1, r6, #16
    21ba:	0c09      	lsrs	r1, r1, #16
    21bc:	4319      	orrs	r1, r3
    21be:	4288      	cmp	r0, r1
    21c0:	d90d      	bls.n	21de <STACK_SIZE+0x1de>
    21c2:	4653      	mov	r3, sl
    21c4:	4441      	add	r1, r8
    21c6:	3b01      	subs	r3, #1
    21c8:	4588      	cmp	r8, r1
    21ca:	d900      	bls.n	21ce <STACK_SIZE+0x1ce>
    21cc:	e0e8      	b.n	23a0 <STACK_SIZE+0x3a0>
    21ce:	4288      	cmp	r0, r1
    21d0:	d800      	bhi.n	21d4 <STACK_SIZE+0x1d4>
    21d2:	e0e5      	b.n	23a0 <STACK_SIZE+0x3a0>
    21d4:	2302      	movs	r3, #2
    21d6:	425b      	negs	r3, r3
    21d8:	469c      	mov	ip, r3
    21da:	4441      	add	r1, r8
    21dc:	44e2      	add	sl, ip
    21de:	9b01      	ldr	r3, [sp, #4]
    21e0:	042d      	lsls	r5, r5, #16
    21e2:	1ace      	subs	r6, r1, r3
    21e4:	4651      	mov	r1, sl
    21e6:	4329      	orrs	r1, r5
    21e8:	9d05      	ldr	r5, [sp, #20]
    21ea:	464f      	mov	r7, r9
    21ec:	002a      	movs	r2, r5
    21ee:	040b      	lsls	r3, r1, #16
    21f0:	0c08      	lsrs	r0, r1, #16
    21f2:	0c1b      	lsrs	r3, r3, #16
    21f4:	435a      	muls	r2, r3
    21f6:	4345      	muls	r5, r0
    21f8:	437b      	muls	r3, r7
    21fa:	4378      	muls	r0, r7
    21fc:	195b      	adds	r3, r3, r5
    21fe:	0c17      	lsrs	r7, r2, #16
    2200:	18fb      	adds	r3, r7, r3
    2202:	429d      	cmp	r5, r3
    2204:	d903      	bls.n	220e <STACK_SIZE+0x20e>
    2206:	2580      	movs	r5, #128	; 0x80
    2208:	026d      	lsls	r5, r5, #9
    220a:	46ac      	mov	ip, r5
    220c:	4460      	add	r0, ip
    220e:	0c1d      	lsrs	r5, r3, #16
    2210:	0412      	lsls	r2, r2, #16
    2212:	041b      	lsls	r3, r3, #16
    2214:	0c12      	lsrs	r2, r2, #16
    2216:	1828      	adds	r0, r5, r0
    2218:	189b      	adds	r3, r3, r2
    221a:	4286      	cmp	r6, r0
    221c:	d200      	bcs.n	2220 <STACK_SIZE+0x220>
    221e:	e093      	b.n	2348 <STACK_SIZE+0x348>
    2220:	d100      	bne.n	2224 <STACK_SIZE+0x224>
    2222:	e08e      	b.n	2342 <STACK_SIZE+0x342>
    2224:	2301      	movs	r3, #1
    2226:	4319      	orrs	r1, r3
    2228:	4ba0      	ldr	r3, [pc, #640]	; (24ac <STACK_SIZE+0x4ac>)
    222a:	18e3      	adds	r3, r4, r3
    222c:	2b00      	cmp	r3, #0
    222e:	dc00      	bgt.n	2232 <STACK_SIZE+0x232>
    2230:	e099      	b.n	2366 <STACK_SIZE+0x366>
    2232:	074a      	lsls	r2, r1, #29
    2234:	d000      	beq.n	2238 <STACK_SIZE+0x238>
    2236:	e09e      	b.n	2376 <STACK_SIZE+0x376>
    2238:	465a      	mov	r2, fp
    223a:	01d2      	lsls	r2, r2, #7
    223c:	d506      	bpl.n	224c <STACK_SIZE+0x24c>
    223e:	465a      	mov	r2, fp
    2240:	4b9b      	ldr	r3, [pc, #620]	; (24b0 <STACK_SIZE+0x4b0>)
    2242:	401a      	ands	r2, r3
    2244:	2380      	movs	r3, #128	; 0x80
    2246:	4693      	mov	fp, r2
    2248:	00db      	lsls	r3, r3, #3
    224a:	18e3      	adds	r3, r4, r3
    224c:	4a99      	ldr	r2, [pc, #612]	; (24b4 <STACK_SIZE+0x4b4>)
    224e:	4293      	cmp	r3, r2
    2250:	dd68      	ble.n	2324 <STACK_SIZE+0x324>
    2252:	2301      	movs	r3, #1
    2254:	9a02      	ldr	r2, [sp, #8]
    2256:	4c98      	ldr	r4, [pc, #608]	; (24b8 <STACK_SIZE+0x4b8>)
    2258:	401a      	ands	r2, r3
    225a:	2300      	movs	r3, #0
    225c:	4694      	mov	ip, r2
    225e:	4698      	mov	r8, r3
    2260:	2200      	movs	r2, #0
    2262:	e6c5      	b.n	1ff0 <__aeabi_ddiv+0x19c>
    2264:	2280      	movs	r2, #128	; 0x80
    2266:	464b      	mov	r3, r9
    2268:	0312      	lsls	r2, r2, #12
    226a:	4213      	tst	r3, r2
    226c:	d00a      	beq.n	2284 <STACK_SIZE+0x284>
    226e:	465b      	mov	r3, fp
    2270:	4213      	tst	r3, r2
    2272:	d106      	bne.n	2282 <STACK_SIZE+0x282>
    2274:	431a      	orrs	r2, r3
    2276:	0312      	lsls	r2, r2, #12
    2278:	0b12      	lsrs	r2, r2, #12
    227a:	46ac      	mov	ip, r5
    227c:	4688      	mov	r8, r1
    227e:	4c8e      	ldr	r4, [pc, #568]	; (24b8 <STACK_SIZE+0x4b8>)
    2280:	e6b6      	b.n	1ff0 <__aeabi_ddiv+0x19c>
    2282:	464b      	mov	r3, r9
    2284:	431a      	orrs	r2, r3
    2286:	0312      	lsls	r2, r2, #12
    2288:	0b12      	lsrs	r2, r2, #12
    228a:	46bc      	mov	ip, r7
    228c:	4c8a      	ldr	r4, [pc, #552]	; (24b8 <STACK_SIZE+0x4b8>)
    228e:	e6af      	b.n	1ff0 <__aeabi_ddiv+0x19c>
    2290:	0003      	movs	r3, r0
    2292:	465a      	mov	r2, fp
    2294:	3b28      	subs	r3, #40	; 0x28
    2296:	409a      	lsls	r2, r3
    2298:	2300      	movs	r3, #0
    229a:	4691      	mov	r9, r2
    229c:	4698      	mov	r8, r3
    229e:	e657      	b.n	1f50 <__aeabi_ddiv+0xfc>
    22a0:	4658      	mov	r0, fp
    22a2:	f000 ff0d 	bl	30c0 <__clzsi2>
    22a6:	3020      	adds	r0, #32
    22a8:	e640      	b.n	1f2c <__aeabi_ddiv+0xd8>
    22aa:	0003      	movs	r3, r0
    22ac:	4652      	mov	r2, sl
    22ae:	3b28      	subs	r3, #40	; 0x28
    22b0:	409a      	lsls	r2, r3
    22b2:	2100      	movs	r1, #0
    22b4:	4693      	mov	fp, r2
    22b6:	e677      	b.n	1fa8 <__aeabi_ddiv+0x154>
    22b8:	f000 ff02 	bl	30c0 <__clzsi2>
    22bc:	3020      	adds	r0, #32
    22be:	e65f      	b.n	1f80 <__aeabi_ddiv+0x12c>
    22c0:	4588      	cmp	r8, r1
    22c2:	d200      	bcs.n	22c6 <STACK_SIZE+0x2c6>
    22c4:	e6c7      	b.n	2056 <STACK_SIZE+0x56>
    22c6:	464b      	mov	r3, r9
    22c8:	07de      	lsls	r6, r3, #31
    22ca:	085d      	lsrs	r5, r3, #1
    22cc:	4643      	mov	r3, r8
    22ce:	085b      	lsrs	r3, r3, #1
    22d0:	431e      	orrs	r6, r3
    22d2:	4643      	mov	r3, r8
    22d4:	07db      	lsls	r3, r3, #31
    22d6:	469a      	mov	sl, r3
    22d8:	e6c2      	b.n	2060 <STACK_SIZE+0x60>
    22da:	2500      	movs	r5, #0
    22dc:	4592      	cmp	sl, r2
    22de:	d300      	bcc.n	22e2 <STACK_SIZE+0x2e2>
    22e0:	e733      	b.n	214a <STACK_SIZE+0x14a>
    22e2:	9e03      	ldr	r6, [sp, #12]
    22e4:	4659      	mov	r1, fp
    22e6:	46b4      	mov	ip, r6
    22e8:	44e2      	add	sl, ip
    22ea:	45b2      	cmp	sl, r6
    22ec:	41ad      	sbcs	r5, r5
    22ee:	426d      	negs	r5, r5
    22f0:	4445      	add	r5, r8
    22f2:	18eb      	adds	r3, r5, r3
    22f4:	3901      	subs	r1, #1
    22f6:	4598      	cmp	r8, r3
    22f8:	d207      	bcs.n	230a <STACK_SIZE+0x30a>
    22fa:	4298      	cmp	r0, r3
    22fc:	d900      	bls.n	2300 <STACK_SIZE+0x300>
    22fe:	e07f      	b.n	2400 <STACK_SIZE+0x400>
    2300:	d100      	bne.n	2304 <STACK_SIZE+0x304>
    2302:	e0bc      	b.n	247e <STACK_SIZE+0x47e>
    2304:	1a1d      	subs	r5, r3, r0
    2306:	468b      	mov	fp, r1
    2308:	e71f      	b.n	214a <STACK_SIZE+0x14a>
    230a:	4598      	cmp	r8, r3
    230c:	d1fa      	bne.n	2304 <STACK_SIZE+0x304>
    230e:	9d03      	ldr	r5, [sp, #12]
    2310:	4555      	cmp	r5, sl
    2312:	d9f2      	bls.n	22fa <STACK_SIZE+0x2fa>
    2314:	4643      	mov	r3, r8
    2316:	468b      	mov	fp, r1
    2318:	1a1d      	subs	r5, r3, r0
    231a:	e716      	b.n	214a <STACK_SIZE+0x14a>
    231c:	469b      	mov	fp, r3
    231e:	e6ca      	b.n	20b6 <STACK_SIZE+0xb6>
    2320:	0015      	movs	r5, r2
    2322:	e6e7      	b.n	20f4 <STACK_SIZE+0xf4>
    2324:	465a      	mov	r2, fp
    2326:	08c9      	lsrs	r1, r1, #3
    2328:	0752      	lsls	r2, r2, #29
    232a:	430a      	orrs	r2, r1
    232c:	055b      	lsls	r3, r3, #21
    232e:	4690      	mov	r8, r2
    2330:	0d5c      	lsrs	r4, r3, #21
    2332:	465a      	mov	r2, fp
    2334:	2301      	movs	r3, #1
    2336:	9902      	ldr	r1, [sp, #8]
    2338:	0252      	lsls	r2, r2, #9
    233a:	4019      	ands	r1, r3
    233c:	0b12      	lsrs	r2, r2, #12
    233e:	468c      	mov	ip, r1
    2340:	e656      	b.n	1ff0 <__aeabi_ddiv+0x19c>
    2342:	2b00      	cmp	r3, #0
    2344:	d100      	bne.n	2348 <STACK_SIZE+0x348>
    2346:	e76f      	b.n	2228 <STACK_SIZE+0x228>
    2348:	4446      	add	r6, r8
    234a:	1e4a      	subs	r2, r1, #1
    234c:	45b0      	cmp	r8, r6
    234e:	d929      	bls.n	23a4 <STACK_SIZE+0x3a4>
    2350:	0011      	movs	r1, r2
    2352:	4286      	cmp	r6, r0
    2354:	d000      	beq.n	2358 <STACK_SIZE+0x358>
    2356:	e765      	b.n	2224 <STACK_SIZE+0x224>
    2358:	9a03      	ldr	r2, [sp, #12]
    235a:	4293      	cmp	r3, r2
    235c:	d000      	beq.n	2360 <STACK_SIZE+0x360>
    235e:	e761      	b.n	2224 <STACK_SIZE+0x224>
    2360:	e762      	b.n	2228 <STACK_SIZE+0x228>
    2362:	2101      	movs	r1, #1
    2364:	4249      	negs	r1, r1
    2366:	2001      	movs	r0, #1
    2368:	1ac2      	subs	r2, r0, r3
    236a:	2a38      	cmp	r2, #56	; 0x38
    236c:	dd21      	ble.n	23b2 <STACK_SIZE+0x3b2>
    236e:	9b02      	ldr	r3, [sp, #8]
    2370:	4003      	ands	r3, r0
    2372:	469c      	mov	ip, r3
    2374:	e638      	b.n	1fe8 <__aeabi_ddiv+0x194>
    2376:	220f      	movs	r2, #15
    2378:	400a      	ands	r2, r1
    237a:	2a04      	cmp	r2, #4
    237c:	d100      	bne.n	2380 <STACK_SIZE+0x380>
    237e:	e75b      	b.n	2238 <STACK_SIZE+0x238>
    2380:	000a      	movs	r2, r1
    2382:	1d11      	adds	r1, r2, #4
    2384:	4291      	cmp	r1, r2
    2386:	4192      	sbcs	r2, r2
    2388:	4252      	negs	r2, r2
    238a:	4493      	add	fp, r2
    238c:	e754      	b.n	2238 <STACK_SIZE+0x238>
    238e:	4b47      	ldr	r3, [pc, #284]	; (24ac <STACK_SIZE+0x4ac>)
    2390:	18e3      	adds	r3, r4, r3
    2392:	2b00      	cmp	r3, #0
    2394:	dde5      	ble.n	2362 <STACK_SIZE+0x362>
    2396:	2201      	movs	r2, #1
    2398:	4252      	negs	r2, r2
    239a:	e7f2      	b.n	2382 <STACK_SIZE+0x382>
    239c:	001d      	movs	r5, r3
    239e:	e6fa      	b.n	2196 <STACK_SIZE+0x196>
    23a0:	469a      	mov	sl, r3
    23a2:	e71c      	b.n	21de <STACK_SIZE+0x1de>
    23a4:	42b0      	cmp	r0, r6
    23a6:	d839      	bhi.n	241c <STACK_SIZE+0x41c>
    23a8:	d06e      	beq.n	2488 <STACK_SIZE+0x488>
    23aa:	0011      	movs	r1, r2
    23ac:	e73a      	b.n	2224 <STACK_SIZE+0x224>
    23ae:	9302      	str	r3, [sp, #8]
    23b0:	e73a      	b.n	2228 <STACK_SIZE+0x228>
    23b2:	2a1f      	cmp	r2, #31
    23b4:	dc3c      	bgt.n	2430 <STACK_SIZE+0x430>
    23b6:	2320      	movs	r3, #32
    23b8:	1a9b      	subs	r3, r3, r2
    23ba:	000c      	movs	r4, r1
    23bc:	4658      	mov	r0, fp
    23be:	4099      	lsls	r1, r3
    23c0:	4098      	lsls	r0, r3
    23c2:	1e4b      	subs	r3, r1, #1
    23c4:	4199      	sbcs	r1, r3
    23c6:	465b      	mov	r3, fp
    23c8:	40d4      	lsrs	r4, r2
    23ca:	40d3      	lsrs	r3, r2
    23cc:	4320      	orrs	r0, r4
    23ce:	4308      	orrs	r0, r1
    23d0:	001a      	movs	r2, r3
    23d2:	0743      	lsls	r3, r0, #29
    23d4:	d009      	beq.n	23ea <STACK_SIZE+0x3ea>
    23d6:	230f      	movs	r3, #15
    23d8:	4003      	ands	r3, r0
    23da:	2b04      	cmp	r3, #4
    23dc:	d005      	beq.n	23ea <STACK_SIZE+0x3ea>
    23de:	0001      	movs	r1, r0
    23e0:	1d08      	adds	r0, r1, #4
    23e2:	4288      	cmp	r0, r1
    23e4:	419b      	sbcs	r3, r3
    23e6:	425b      	negs	r3, r3
    23e8:	18d2      	adds	r2, r2, r3
    23ea:	0213      	lsls	r3, r2, #8
    23ec:	d53a      	bpl.n	2464 <STACK_SIZE+0x464>
    23ee:	2301      	movs	r3, #1
    23f0:	9a02      	ldr	r2, [sp, #8]
    23f2:	2401      	movs	r4, #1
    23f4:	401a      	ands	r2, r3
    23f6:	2300      	movs	r3, #0
    23f8:	4694      	mov	ip, r2
    23fa:	4698      	mov	r8, r3
    23fc:	2200      	movs	r2, #0
    23fe:	e5f7      	b.n	1ff0 <__aeabi_ddiv+0x19c>
    2400:	2102      	movs	r1, #2
    2402:	4249      	negs	r1, r1
    2404:	468c      	mov	ip, r1
    2406:	9d03      	ldr	r5, [sp, #12]
    2408:	44e3      	add	fp, ip
    240a:	46ac      	mov	ip, r5
    240c:	44e2      	add	sl, ip
    240e:	45aa      	cmp	sl, r5
    2410:	41ad      	sbcs	r5, r5
    2412:	426d      	negs	r5, r5
    2414:	4445      	add	r5, r8
    2416:	18ed      	adds	r5, r5, r3
    2418:	1a2d      	subs	r5, r5, r0
    241a:	e696      	b.n	214a <STACK_SIZE+0x14a>
    241c:	1e8a      	subs	r2, r1, #2
    241e:	9903      	ldr	r1, [sp, #12]
    2420:	004d      	lsls	r5, r1, #1
    2422:	428d      	cmp	r5, r1
    2424:	4189      	sbcs	r1, r1
    2426:	4249      	negs	r1, r1
    2428:	4441      	add	r1, r8
    242a:	1876      	adds	r6, r6, r1
    242c:	9503      	str	r5, [sp, #12]
    242e:	e78f      	b.n	2350 <STACK_SIZE+0x350>
    2430:	201f      	movs	r0, #31
    2432:	4240      	negs	r0, r0
    2434:	1ac3      	subs	r3, r0, r3
    2436:	4658      	mov	r0, fp
    2438:	40d8      	lsrs	r0, r3
    243a:	0003      	movs	r3, r0
    243c:	2a20      	cmp	r2, #32
    243e:	d028      	beq.n	2492 <STACK_SIZE+0x492>
    2440:	2040      	movs	r0, #64	; 0x40
    2442:	465d      	mov	r5, fp
    2444:	1a82      	subs	r2, r0, r2
    2446:	4095      	lsls	r5, r2
    2448:	4329      	orrs	r1, r5
    244a:	1e4a      	subs	r2, r1, #1
    244c:	4191      	sbcs	r1, r2
    244e:	4319      	orrs	r1, r3
    2450:	2307      	movs	r3, #7
    2452:	2200      	movs	r2, #0
    2454:	400b      	ands	r3, r1
    2456:	d009      	beq.n	246c <STACK_SIZE+0x46c>
    2458:	230f      	movs	r3, #15
    245a:	2200      	movs	r2, #0
    245c:	400b      	ands	r3, r1
    245e:	0008      	movs	r0, r1
    2460:	2b04      	cmp	r3, #4
    2462:	d1bd      	bne.n	23e0 <STACK_SIZE+0x3e0>
    2464:	0001      	movs	r1, r0
    2466:	0753      	lsls	r3, r2, #29
    2468:	0252      	lsls	r2, r2, #9
    246a:	0b12      	lsrs	r2, r2, #12
    246c:	08c9      	lsrs	r1, r1, #3
    246e:	4319      	orrs	r1, r3
    2470:	2301      	movs	r3, #1
    2472:	4688      	mov	r8, r1
    2474:	9902      	ldr	r1, [sp, #8]
    2476:	2400      	movs	r4, #0
    2478:	4019      	ands	r1, r3
    247a:	468c      	mov	ip, r1
    247c:	e5b8      	b.n	1ff0 <__aeabi_ddiv+0x19c>
    247e:	4552      	cmp	r2, sl
    2480:	d8be      	bhi.n	2400 <STACK_SIZE+0x400>
    2482:	468b      	mov	fp, r1
    2484:	2500      	movs	r5, #0
    2486:	e660      	b.n	214a <STACK_SIZE+0x14a>
    2488:	9d03      	ldr	r5, [sp, #12]
    248a:	429d      	cmp	r5, r3
    248c:	d3c6      	bcc.n	241c <STACK_SIZE+0x41c>
    248e:	0011      	movs	r1, r2
    2490:	e762      	b.n	2358 <STACK_SIZE+0x358>
    2492:	2500      	movs	r5, #0
    2494:	e7d8      	b.n	2448 <STACK_SIZE+0x448>
    2496:	2280      	movs	r2, #128	; 0x80
    2498:	465b      	mov	r3, fp
    249a:	0312      	lsls	r2, r2, #12
    249c:	431a      	orrs	r2, r3
    249e:	9b01      	ldr	r3, [sp, #4]
    24a0:	0312      	lsls	r2, r2, #12
    24a2:	0b12      	lsrs	r2, r2, #12
    24a4:	469c      	mov	ip, r3
    24a6:	4688      	mov	r8, r1
    24a8:	4c03      	ldr	r4, [pc, #12]	; (24b8 <STACK_SIZE+0x4b8>)
    24aa:	e5a1      	b.n	1ff0 <__aeabi_ddiv+0x19c>
    24ac:	000003ff 	.word	0x000003ff
    24b0:	feffffff 	.word	0xfeffffff
    24b4:	000007fe 	.word	0x000007fe
    24b8:	000007ff 	.word	0x000007ff

000024bc <__aeabi_dmul>:
    24bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    24be:	4657      	mov	r7, sl
    24c0:	4645      	mov	r5, r8
    24c2:	46de      	mov	lr, fp
    24c4:	464e      	mov	r6, r9
    24c6:	b5e0      	push	{r5, r6, r7, lr}
    24c8:	030c      	lsls	r4, r1, #12
    24ca:	4698      	mov	r8, r3
    24cc:	004e      	lsls	r6, r1, #1
    24ce:	0b23      	lsrs	r3, r4, #12
    24d0:	b087      	sub	sp, #28
    24d2:	0007      	movs	r7, r0
    24d4:	4692      	mov	sl, r2
    24d6:	469b      	mov	fp, r3
    24d8:	0d76      	lsrs	r6, r6, #21
    24da:	0fcd      	lsrs	r5, r1, #31
    24dc:	2e00      	cmp	r6, #0
    24de:	d06b      	beq.n	25b8 <__aeabi_dmul+0xfc>
    24e0:	4b6d      	ldr	r3, [pc, #436]	; (2698 <__aeabi_dmul+0x1dc>)
    24e2:	429e      	cmp	r6, r3
    24e4:	d035      	beq.n	2552 <__aeabi_dmul+0x96>
    24e6:	2480      	movs	r4, #128	; 0x80
    24e8:	465b      	mov	r3, fp
    24ea:	0f42      	lsrs	r2, r0, #29
    24ec:	0424      	lsls	r4, r4, #16
    24ee:	00db      	lsls	r3, r3, #3
    24f0:	4314      	orrs	r4, r2
    24f2:	431c      	orrs	r4, r3
    24f4:	00c3      	lsls	r3, r0, #3
    24f6:	4699      	mov	r9, r3
    24f8:	4b68      	ldr	r3, [pc, #416]	; (269c <__aeabi_dmul+0x1e0>)
    24fa:	46a3      	mov	fp, r4
    24fc:	469c      	mov	ip, r3
    24fe:	2300      	movs	r3, #0
    2500:	2700      	movs	r7, #0
    2502:	4466      	add	r6, ip
    2504:	9302      	str	r3, [sp, #8]
    2506:	4643      	mov	r3, r8
    2508:	031c      	lsls	r4, r3, #12
    250a:	005a      	lsls	r2, r3, #1
    250c:	0fdb      	lsrs	r3, r3, #31
    250e:	4650      	mov	r0, sl
    2510:	0b24      	lsrs	r4, r4, #12
    2512:	0d52      	lsrs	r2, r2, #21
    2514:	4698      	mov	r8, r3
    2516:	d100      	bne.n	251a <__aeabi_dmul+0x5e>
    2518:	e076      	b.n	2608 <__aeabi_dmul+0x14c>
    251a:	4b5f      	ldr	r3, [pc, #380]	; (2698 <__aeabi_dmul+0x1dc>)
    251c:	429a      	cmp	r2, r3
    251e:	d06d      	beq.n	25fc <__aeabi_dmul+0x140>
    2520:	2380      	movs	r3, #128	; 0x80
    2522:	0f41      	lsrs	r1, r0, #29
    2524:	041b      	lsls	r3, r3, #16
    2526:	430b      	orrs	r3, r1
    2528:	495c      	ldr	r1, [pc, #368]	; (269c <__aeabi_dmul+0x1e0>)
    252a:	00e4      	lsls	r4, r4, #3
    252c:	468c      	mov	ip, r1
    252e:	431c      	orrs	r4, r3
    2530:	00c3      	lsls	r3, r0, #3
    2532:	2000      	movs	r0, #0
    2534:	4462      	add	r2, ip
    2536:	4641      	mov	r1, r8
    2538:	18b6      	adds	r6, r6, r2
    253a:	4069      	eors	r1, r5
    253c:	1c72      	adds	r2, r6, #1
    253e:	9101      	str	r1, [sp, #4]
    2540:	4694      	mov	ip, r2
    2542:	4307      	orrs	r7, r0
    2544:	2f0f      	cmp	r7, #15
    2546:	d900      	bls.n	254a <__aeabi_dmul+0x8e>
    2548:	e0b0      	b.n	26ac <__aeabi_dmul+0x1f0>
    254a:	4a55      	ldr	r2, [pc, #340]	; (26a0 <__aeabi_dmul+0x1e4>)
    254c:	00bf      	lsls	r7, r7, #2
    254e:	59d2      	ldr	r2, [r2, r7]
    2550:	4697      	mov	pc, r2
    2552:	465b      	mov	r3, fp
    2554:	4303      	orrs	r3, r0
    2556:	4699      	mov	r9, r3
    2558:	d000      	beq.n	255c <__aeabi_dmul+0xa0>
    255a:	e087      	b.n	266c <__aeabi_dmul+0x1b0>
    255c:	2300      	movs	r3, #0
    255e:	469b      	mov	fp, r3
    2560:	3302      	adds	r3, #2
    2562:	2708      	movs	r7, #8
    2564:	9302      	str	r3, [sp, #8]
    2566:	e7ce      	b.n	2506 <__aeabi_dmul+0x4a>
    2568:	4642      	mov	r2, r8
    256a:	9201      	str	r2, [sp, #4]
    256c:	2802      	cmp	r0, #2
    256e:	d067      	beq.n	2640 <__aeabi_dmul+0x184>
    2570:	2803      	cmp	r0, #3
    2572:	d100      	bne.n	2576 <__aeabi_dmul+0xba>
    2574:	e20e      	b.n	2994 <__aeabi_dmul+0x4d8>
    2576:	2801      	cmp	r0, #1
    2578:	d000      	beq.n	257c <__aeabi_dmul+0xc0>
    257a:	e162      	b.n	2842 <__aeabi_dmul+0x386>
    257c:	2300      	movs	r3, #0
    257e:	2400      	movs	r4, #0
    2580:	2200      	movs	r2, #0
    2582:	4699      	mov	r9, r3
    2584:	9901      	ldr	r1, [sp, #4]
    2586:	4001      	ands	r1, r0
    2588:	b2cd      	uxtb	r5, r1
    258a:	2100      	movs	r1, #0
    258c:	0312      	lsls	r2, r2, #12
    258e:	0d0b      	lsrs	r3, r1, #20
    2590:	0b12      	lsrs	r2, r2, #12
    2592:	051b      	lsls	r3, r3, #20
    2594:	4313      	orrs	r3, r2
    2596:	4a43      	ldr	r2, [pc, #268]	; (26a4 <__aeabi_dmul+0x1e8>)
    2598:	0524      	lsls	r4, r4, #20
    259a:	4013      	ands	r3, r2
    259c:	431c      	orrs	r4, r3
    259e:	0064      	lsls	r4, r4, #1
    25a0:	07ed      	lsls	r5, r5, #31
    25a2:	0864      	lsrs	r4, r4, #1
    25a4:	432c      	orrs	r4, r5
    25a6:	4648      	mov	r0, r9
    25a8:	0021      	movs	r1, r4
    25aa:	b007      	add	sp, #28
    25ac:	bc3c      	pop	{r2, r3, r4, r5}
    25ae:	4690      	mov	r8, r2
    25b0:	4699      	mov	r9, r3
    25b2:	46a2      	mov	sl, r4
    25b4:	46ab      	mov	fp, r5
    25b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    25b8:	4303      	orrs	r3, r0
    25ba:	4699      	mov	r9, r3
    25bc:	d04f      	beq.n	265e <__aeabi_dmul+0x1a2>
    25be:	465b      	mov	r3, fp
    25c0:	2b00      	cmp	r3, #0
    25c2:	d100      	bne.n	25c6 <__aeabi_dmul+0x10a>
    25c4:	e189      	b.n	28da <__aeabi_dmul+0x41e>
    25c6:	4658      	mov	r0, fp
    25c8:	f000 fd7a 	bl	30c0 <__clzsi2>
    25cc:	0003      	movs	r3, r0
    25ce:	3b0b      	subs	r3, #11
    25d0:	2b1c      	cmp	r3, #28
    25d2:	dd00      	ble.n	25d6 <__aeabi_dmul+0x11a>
    25d4:	e17a      	b.n	28cc <__aeabi_dmul+0x410>
    25d6:	221d      	movs	r2, #29
    25d8:	1ad3      	subs	r3, r2, r3
    25da:	003a      	movs	r2, r7
    25dc:	0001      	movs	r1, r0
    25de:	465c      	mov	r4, fp
    25e0:	40da      	lsrs	r2, r3
    25e2:	3908      	subs	r1, #8
    25e4:	408c      	lsls	r4, r1
    25e6:	0013      	movs	r3, r2
    25e8:	408f      	lsls	r7, r1
    25ea:	4323      	orrs	r3, r4
    25ec:	469b      	mov	fp, r3
    25ee:	46b9      	mov	r9, r7
    25f0:	2300      	movs	r3, #0
    25f2:	4e2d      	ldr	r6, [pc, #180]	; (26a8 <__aeabi_dmul+0x1ec>)
    25f4:	2700      	movs	r7, #0
    25f6:	1a36      	subs	r6, r6, r0
    25f8:	9302      	str	r3, [sp, #8]
    25fa:	e784      	b.n	2506 <__aeabi_dmul+0x4a>
    25fc:	4653      	mov	r3, sl
    25fe:	4323      	orrs	r3, r4
    2600:	d12a      	bne.n	2658 <__aeabi_dmul+0x19c>
    2602:	2400      	movs	r4, #0
    2604:	2002      	movs	r0, #2
    2606:	e796      	b.n	2536 <__aeabi_dmul+0x7a>
    2608:	4653      	mov	r3, sl
    260a:	4323      	orrs	r3, r4
    260c:	d020      	beq.n	2650 <__aeabi_dmul+0x194>
    260e:	2c00      	cmp	r4, #0
    2610:	d100      	bne.n	2614 <__aeabi_dmul+0x158>
    2612:	e157      	b.n	28c4 <__aeabi_dmul+0x408>
    2614:	0020      	movs	r0, r4
    2616:	f000 fd53 	bl	30c0 <__clzsi2>
    261a:	0003      	movs	r3, r0
    261c:	3b0b      	subs	r3, #11
    261e:	2b1c      	cmp	r3, #28
    2620:	dd00      	ble.n	2624 <__aeabi_dmul+0x168>
    2622:	e149      	b.n	28b8 <__aeabi_dmul+0x3fc>
    2624:	211d      	movs	r1, #29
    2626:	1acb      	subs	r3, r1, r3
    2628:	4651      	mov	r1, sl
    262a:	0002      	movs	r2, r0
    262c:	40d9      	lsrs	r1, r3
    262e:	4653      	mov	r3, sl
    2630:	3a08      	subs	r2, #8
    2632:	4094      	lsls	r4, r2
    2634:	4093      	lsls	r3, r2
    2636:	430c      	orrs	r4, r1
    2638:	4a1b      	ldr	r2, [pc, #108]	; (26a8 <__aeabi_dmul+0x1ec>)
    263a:	1a12      	subs	r2, r2, r0
    263c:	2000      	movs	r0, #0
    263e:	e77a      	b.n	2536 <__aeabi_dmul+0x7a>
    2640:	2501      	movs	r5, #1
    2642:	9b01      	ldr	r3, [sp, #4]
    2644:	4c14      	ldr	r4, [pc, #80]	; (2698 <__aeabi_dmul+0x1dc>)
    2646:	401d      	ands	r5, r3
    2648:	2300      	movs	r3, #0
    264a:	2200      	movs	r2, #0
    264c:	4699      	mov	r9, r3
    264e:	e79c      	b.n	258a <__aeabi_dmul+0xce>
    2650:	2400      	movs	r4, #0
    2652:	2200      	movs	r2, #0
    2654:	2001      	movs	r0, #1
    2656:	e76e      	b.n	2536 <__aeabi_dmul+0x7a>
    2658:	4653      	mov	r3, sl
    265a:	2003      	movs	r0, #3
    265c:	e76b      	b.n	2536 <__aeabi_dmul+0x7a>
    265e:	2300      	movs	r3, #0
    2660:	469b      	mov	fp, r3
    2662:	3301      	adds	r3, #1
    2664:	2704      	movs	r7, #4
    2666:	2600      	movs	r6, #0
    2668:	9302      	str	r3, [sp, #8]
    266a:	e74c      	b.n	2506 <__aeabi_dmul+0x4a>
    266c:	2303      	movs	r3, #3
    266e:	4681      	mov	r9, r0
    2670:	270c      	movs	r7, #12
    2672:	9302      	str	r3, [sp, #8]
    2674:	e747      	b.n	2506 <__aeabi_dmul+0x4a>
    2676:	2280      	movs	r2, #128	; 0x80
    2678:	2300      	movs	r3, #0
    267a:	2500      	movs	r5, #0
    267c:	0312      	lsls	r2, r2, #12
    267e:	4699      	mov	r9, r3
    2680:	4c05      	ldr	r4, [pc, #20]	; (2698 <__aeabi_dmul+0x1dc>)
    2682:	e782      	b.n	258a <__aeabi_dmul+0xce>
    2684:	465c      	mov	r4, fp
    2686:	464b      	mov	r3, r9
    2688:	9802      	ldr	r0, [sp, #8]
    268a:	e76f      	b.n	256c <__aeabi_dmul+0xb0>
    268c:	465c      	mov	r4, fp
    268e:	464b      	mov	r3, r9
    2690:	9501      	str	r5, [sp, #4]
    2692:	9802      	ldr	r0, [sp, #8]
    2694:	e76a      	b.n	256c <__aeabi_dmul+0xb0>
    2696:	46c0      	nop			; (mov r8, r8)
    2698:	000007ff 	.word	0x000007ff
    269c:	fffffc01 	.word	0xfffffc01
    26a0:	000031f4 	.word	0x000031f4
    26a4:	800fffff 	.word	0x800fffff
    26a8:	fffffc0d 	.word	0xfffffc0d
    26ac:	464a      	mov	r2, r9
    26ae:	4649      	mov	r1, r9
    26b0:	0c17      	lsrs	r7, r2, #16
    26b2:	0c1a      	lsrs	r2, r3, #16
    26b4:	041b      	lsls	r3, r3, #16
    26b6:	0c1b      	lsrs	r3, r3, #16
    26b8:	0408      	lsls	r0, r1, #16
    26ba:	0019      	movs	r1, r3
    26bc:	0c00      	lsrs	r0, r0, #16
    26be:	4341      	muls	r1, r0
    26c0:	0015      	movs	r5, r2
    26c2:	4688      	mov	r8, r1
    26c4:	0019      	movs	r1, r3
    26c6:	437d      	muls	r5, r7
    26c8:	4379      	muls	r1, r7
    26ca:	9503      	str	r5, [sp, #12]
    26cc:	4689      	mov	r9, r1
    26ce:	0029      	movs	r1, r5
    26d0:	0015      	movs	r5, r2
    26d2:	4345      	muls	r5, r0
    26d4:	444d      	add	r5, r9
    26d6:	9502      	str	r5, [sp, #8]
    26d8:	4645      	mov	r5, r8
    26da:	0c2d      	lsrs	r5, r5, #16
    26dc:	46aa      	mov	sl, r5
    26de:	9d02      	ldr	r5, [sp, #8]
    26e0:	4455      	add	r5, sl
    26e2:	45a9      	cmp	r9, r5
    26e4:	d906      	bls.n	26f4 <__aeabi_dmul+0x238>
    26e6:	468a      	mov	sl, r1
    26e8:	2180      	movs	r1, #128	; 0x80
    26ea:	0249      	lsls	r1, r1, #9
    26ec:	4689      	mov	r9, r1
    26ee:	44ca      	add	sl, r9
    26f0:	4651      	mov	r1, sl
    26f2:	9103      	str	r1, [sp, #12]
    26f4:	0c29      	lsrs	r1, r5, #16
    26f6:	9104      	str	r1, [sp, #16]
    26f8:	4641      	mov	r1, r8
    26fa:	0409      	lsls	r1, r1, #16
    26fc:	042d      	lsls	r5, r5, #16
    26fe:	0c09      	lsrs	r1, r1, #16
    2700:	4688      	mov	r8, r1
    2702:	0029      	movs	r1, r5
    2704:	0c25      	lsrs	r5, r4, #16
    2706:	0424      	lsls	r4, r4, #16
    2708:	4441      	add	r1, r8
    270a:	0c24      	lsrs	r4, r4, #16
    270c:	9105      	str	r1, [sp, #20]
    270e:	0021      	movs	r1, r4
    2710:	4341      	muls	r1, r0
    2712:	4688      	mov	r8, r1
    2714:	0021      	movs	r1, r4
    2716:	4379      	muls	r1, r7
    2718:	468a      	mov	sl, r1
    271a:	4368      	muls	r0, r5
    271c:	4641      	mov	r1, r8
    271e:	4450      	add	r0, sl
    2720:	4681      	mov	r9, r0
    2722:	0c08      	lsrs	r0, r1, #16
    2724:	4448      	add	r0, r9
    2726:	436f      	muls	r7, r5
    2728:	4582      	cmp	sl, r0
    272a:	d903      	bls.n	2734 <__aeabi_dmul+0x278>
    272c:	2180      	movs	r1, #128	; 0x80
    272e:	0249      	lsls	r1, r1, #9
    2730:	4689      	mov	r9, r1
    2732:	444f      	add	r7, r9
    2734:	0c01      	lsrs	r1, r0, #16
    2736:	4689      	mov	r9, r1
    2738:	0039      	movs	r1, r7
    273a:	4449      	add	r1, r9
    273c:	9102      	str	r1, [sp, #8]
    273e:	4641      	mov	r1, r8
    2740:	040f      	lsls	r7, r1, #16
    2742:	9904      	ldr	r1, [sp, #16]
    2744:	0c3f      	lsrs	r7, r7, #16
    2746:	4688      	mov	r8, r1
    2748:	0400      	lsls	r0, r0, #16
    274a:	19c0      	adds	r0, r0, r7
    274c:	4480      	add	r8, r0
    274e:	4641      	mov	r1, r8
    2750:	9104      	str	r1, [sp, #16]
    2752:	4659      	mov	r1, fp
    2754:	0c0f      	lsrs	r7, r1, #16
    2756:	0409      	lsls	r1, r1, #16
    2758:	0c09      	lsrs	r1, r1, #16
    275a:	4688      	mov	r8, r1
    275c:	4359      	muls	r1, r3
    275e:	468a      	mov	sl, r1
    2760:	0039      	movs	r1, r7
    2762:	4351      	muls	r1, r2
    2764:	4689      	mov	r9, r1
    2766:	4641      	mov	r1, r8
    2768:	434a      	muls	r2, r1
    276a:	4651      	mov	r1, sl
    276c:	0c09      	lsrs	r1, r1, #16
    276e:	468b      	mov	fp, r1
    2770:	437b      	muls	r3, r7
    2772:	18d2      	adds	r2, r2, r3
    2774:	445a      	add	r2, fp
    2776:	4293      	cmp	r3, r2
    2778:	d903      	bls.n	2782 <__aeabi_dmul+0x2c6>
    277a:	2380      	movs	r3, #128	; 0x80
    277c:	025b      	lsls	r3, r3, #9
    277e:	469b      	mov	fp, r3
    2780:	44d9      	add	r9, fp
    2782:	4651      	mov	r1, sl
    2784:	0409      	lsls	r1, r1, #16
    2786:	0c09      	lsrs	r1, r1, #16
    2788:	468a      	mov	sl, r1
    278a:	4641      	mov	r1, r8
    278c:	4361      	muls	r1, r4
    278e:	437c      	muls	r4, r7
    2790:	0c13      	lsrs	r3, r2, #16
    2792:	0412      	lsls	r2, r2, #16
    2794:	444b      	add	r3, r9
    2796:	4452      	add	r2, sl
    2798:	46a1      	mov	r9, r4
    279a:	468a      	mov	sl, r1
    279c:	003c      	movs	r4, r7
    279e:	4641      	mov	r1, r8
    27a0:	436c      	muls	r4, r5
    27a2:	434d      	muls	r5, r1
    27a4:	4651      	mov	r1, sl
    27a6:	444d      	add	r5, r9
    27a8:	0c0f      	lsrs	r7, r1, #16
    27aa:	197d      	adds	r5, r7, r5
    27ac:	45a9      	cmp	r9, r5
    27ae:	d903      	bls.n	27b8 <__aeabi_dmul+0x2fc>
    27b0:	2180      	movs	r1, #128	; 0x80
    27b2:	0249      	lsls	r1, r1, #9
    27b4:	4688      	mov	r8, r1
    27b6:	4444      	add	r4, r8
    27b8:	9f04      	ldr	r7, [sp, #16]
    27ba:	9903      	ldr	r1, [sp, #12]
    27bc:	46b8      	mov	r8, r7
    27be:	4441      	add	r1, r8
    27c0:	468b      	mov	fp, r1
    27c2:	4583      	cmp	fp, r0
    27c4:	4180      	sbcs	r0, r0
    27c6:	4241      	negs	r1, r0
    27c8:	4688      	mov	r8, r1
    27ca:	4651      	mov	r1, sl
    27cc:	0408      	lsls	r0, r1, #16
    27ce:	042f      	lsls	r7, r5, #16
    27d0:	0c00      	lsrs	r0, r0, #16
    27d2:	183f      	adds	r7, r7, r0
    27d4:	4658      	mov	r0, fp
    27d6:	9902      	ldr	r1, [sp, #8]
    27d8:	1810      	adds	r0, r2, r0
    27da:	4689      	mov	r9, r1
    27dc:	4290      	cmp	r0, r2
    27de:	4192      	sbcs	r2, r2
    27e0:	444f      	add	r7, r9
    27e2:	46ba      	mov	sl, r7
    27e4:	4252      	negs	r2, r2
    27e6:	4699      	mov	r9, r3
    27e8:	4693      	mov	fp, r2
    27ea:	44c2      	add	sl, r8
    27ec:	44d1      	add	r9, sl
    27ee:	44cb      	add	fp, r9
    27f0:	428f      	cmp	r7, r1
    27f2:	41bf      	sbcs	r7, r7
    27f4:	45c2      	cmp	sl, r8
    27f6:	4189      	sbcs	r1, r1
    27f8:	4599      	cmp	r9, r3
    27fa:	419b      	sbcs	r3, r3
    27fc:	4593      	cmp	fp, r2
    27fe:	4192      	sbcs	r2, r2
    2800:	427f      	negs	r7, r7
    2802:	4249      	negs	r1, r1
    2804:	0c2d      	lsrs	r5, r5, #16
    2806:	4252      	negs	r2, r2
    2808:	430f      	orrs	r7, r1
    280a:	425b      	negs	r3, r3
    280c:	4313      	orrs	r3, r2
    280e:	197f      	adds	r7, r7, r5
    2810:	18ff      	adds	r7, r7, r3
    2812:	465b      	mov	r3, fp
    2814:	193c      	adds	r4, r7, r4
    2816:	0ddb      	lsrs	r3, r3, #23
    2818:	9a05      	ldr	r2, [sp, #20]
    281a:	0264      	lsls	r4, r4, #9
    281c:	431c      	orrs	r4, r3
    281e:	0243      	lsls	r3, r0, #9
    2820:	4313      	orrs	r3, r2
    2822:	1e5d      	subs	r5, r3, #1
    2824:	41ab      	sbcs	r3, r5
    2826:	465a      	mov	r2, fp
    2828:	0dc0      	lsrs	r0, r0, #23
    282a:	4303      	orrs	r3, r0
    282c:	0252      	lsls	r2, r2, #9
    282e:	4313      	orrs	r3, r2
    2830:	01e2      	lsls	r2, r4, #7
    2832:	d556      	bpl.n	28e2 <__aeabi_dmul+0x426>
    2834:	2001      	movs	r0, #1
    2836:	085a      	lsrs	r2, r3, #1
    2838:	4003      	ands	r3, r0
    283a:	4313      	orrs	r3, r2
    283c:	07e2      	lsls	r2, r4, #31
    283e:	4313      	orrs	r3, r2
    2840:	0864      	lsrs	r4, r4, #1
    2842:	485a      	ldr	r0, [pc, #360]	; (29ac <__aeabi_dmul+0x4f0>)
    2844:	4460      	add	r0, ip
    2846:	2800      	cmp	r0, #0
    2848:	dd4d      	ble.n	28e6 <__aeabi_dmul+0x42a>
    284a:	075a      	lsls	r2, r3, #29
    284c:	d009      	beq.n	2862 <__aeabi_dmul+0x3a6>
    284e:	220f      	movs	r2, #15
    2850:	401a      	ands	r2, r3
    2852:	2a04      	cmp	r2, #4
    2854:	d005      	beq.n	2862 <__aeabi_dmul+0x3a6>
    2856:	1d1a      	adds	r2, r3, #4
    2858:	429a      	cmp	r2, r3
    285a:	419b      	sbcs	r3, r3
    285c:	425b      	negs	r3, r3
    285e:	18e4      	adds	r4, r4, r3
    2860:	0013      	movs	r3, r2
    2862:	01e2      	lsls	r2, r4, #7
    2864:	d504      	bpl.n	2870 <__aeabi_dmul+0x3b4>
    2866:	2080      	movs	r0, #128	; 0x80
    2868:	4a51      	ldr	r2, [pc, #324]	; (29b0 <__aeabi_dmul+0x4f4>)
    286a:	00c0      	lsls	r0, r0, #3
    286c:	4014      	ands	r4, r2
    286e:	4460      	add	r0, ip
    2870:	4a50      	ldr	r2, [pc, #320]	; (29b4 <__aeabi_dmul+0x4f8>)
    2872:	4290      	cmp	r0, r2
    2874:	dd00      	ble.n	2878 <__aeabi_dmul+0x3bc>
    2876:	e6e3      	b.n	2640 <__aeabi_dmul+0x184>
    2878:	2501      	movs	r5, #1
    287a:	08db      	lsrs	r3, r3, #3
    287c:	0762      	lsls	r2, r4, #29
    287e:	431a      	orrs	r2, r3
    2880:	0264      	lsls	r4, r4, #9
    2882:	9b01      	ldr	r3, [sp, #4]
    2884:	4691      	mov	r9, r2
    2886:	0b22      	lsrs	r2, r4, #12
    2888:	0544      	lsls	r4, r0, #21
    288a:	0d64      	lsrs	r4, r4, #21
    288c:	401d      	ands	r5, r3
    288e:	e67c      	b.n	258a <__aeabi_dmul+0xce>
    2890:	2280      	movs	r2, #128	; 0x80
    2892:	4659      	mov	r1, fp
    2894:	0312      	lsls	r2, r2, #12
    2896:	4211      	tst	r1, r2
    2898:	d008      	beq.n	28ac <__aeabi_dmul+0x3f0>
    289a:	4214      	tst	r4, r2
    289c:	d106      	bne.n	28ac <__aeabi_dmul+0x3f0>
    289e:	4322      	orrs	r2, r4
    28a0:	0312      	lsls	r2, r2, #12
    28a2:	0b12      	lsrs	r2, r2, #12
    28a4:	4645      	mov	r5, r8
    28a6:	4699      	mov	r9, r3
    28a8:	4c43      	ldr	r4, [pc, #268]	; (29b8 <__aeabi_dmul+0x4fc>)
    28aa:	e66e      	b.n	258a <__aeabi_dmul+0xce>
    28ac:	465b      	mov	r3, fp
    28ae:	431a      	orrs	r2, r3
    28b0:	0312      	lsls	r2, r2, #12
    28b2:	0b12      	lsrs	r2, r2, #12
    28b4:	4c40      	ldr	r4, [pc, #256]	; (29b8 <__aeabi_dmul+0x4fc>)
    28b6:	e668      	b.n	258a <__aeabi_dmul+0xce>
    28b8:	0003      	movs	r3, r0
    28ba:	4654      	mov	r4, sl
    28bc:	3b28      	subs	r3, #40	; 0x28
    28be:	409c      	lsls	r4, r3
    28c0:	2300      	movs	r3, #0
    28c2:	e6b9      	b.n	2638 <__aeabi_dmul+0x17c>
    28c4:	f000 fbfc 	bl	30c0 <__clzsi2>
    28c8:	3020      	adds	r0, #32
    28ca:	e6a6      	b.n	261a <__aeabi_dmul+0x15e>
    28cc:	0003      	movs	r3, r0
    28ce:	3b28      	subs	r3, #40	; 0x28
    28d0:	409f      	lsls	r7, r3
    28d2:	2300      	movs	r3, #0
    28d4:	46bb      	mov	fp, r7
    28d6:	4699      	mov	r9, r3
    28d8:	e68a      	b.n	25f0 <__aeabi_dmul+0x134>
    28da:	f000 fbf1 	bl	30c0 <__clzsi2>
    28de:	3020      	adds	r0, #32
    28e0:	e674      	b.n	25cc <__aeabi_dmul+0x110>
    28e2:	46b4      	mov	ip, r6
    28e4:	e7ad      	b.n	2842 <__aeabi_dmul+0x386>
    28e6:	2501      	movs	r5, #1
    28e8:	1a2a      	subs	r2, r5, r0
    28ea:	2a38      	cmp	r2, #56	; 0x38
    28ec:	dd06      	ble.n	28fc <__aeabi_dmul+0x440>
    28ee:	9b01      	ldr	r3, [sp, #4]
    28f0:	2400      	movs	r4, #0
    28f2:	401d      	ands	r5, r3
    28f4:	2300      	movs	r3, #0
    28f6:	2200      	movs	r2, #0
    28f8:	4699      	mov	r9, r3
    28fa:	e646      	b.n	258a <__aeabi_dmul+0xce>
    28fc:	2a1f      	cmp	r2, #31
    28fe:	dc21      	bgt.n	2944 <__aeabi_dmul+0x488>
    2900:	2520      	movs	r5, #32
    2902:	0020      	movs	r0, r4
    2904:	1aad      	subs	r5, r5, r2
    2906:	001e      	movs	r6, r3
    2908:	40ab      	lsls	r3, r5
    290a:	40a8      	lsls	r0, r5
    290c:	40d6      	lsrs	r6, r2
    290e:	1e5d      	subs	r5, r3, #1
    2910:	41ab      	sbcs	r3, r5
    2912:	4330      	orrs	r0, r6
    2914:	4318      	orrs	r0, r3
    2916:	40d4      	lsrs	r4, r2
    2918:	0743      	lsls	r3, r0, #29
    291a:	d009      	beq.n	2930 <__aeabi_dmul+0x474>
    291c:	230f      	movs	r3, #15
    291e:	4003      	ands	r3, r0
    2920:	2b04      	cmp	r3, #4
    2922:	d005      	beq.n	2930 <__aeabi_dmul+0x474>
    2924:	0003      	movs	r3, r0
    2926:	1d18      	adds	r0, r3, #4
    2928:	4298      	cmp	r0, r3
    292a:	419b      	sbcs	r3, r3
    292c:	425b      	negs	r3, r3
    292e:	18e4      	adds	r4, r4, r3
    2930:	0223      	lsls	r3, r4, #8
    2932:	d521      	bpl.n	2978 <__aeabi_dmul+0x4bc>
    2934:	2501      	movs	r5, #1
    2936:	9b01      	ldr	r3, [sp, #4]
    2938:	2401      	movs	r4, #1
    293a:	401d      	ands	r5, r3
    293c:	2300      	movs	r3, #0
    293e:	2200      	movs	r2, #0
    2940:	4699      	mov	r9, r3
    2942:	e622      	b.n	258a <__aeabi_dmul+0xce>
    2944:	251f      	movs	r5, #31
    2946:	0021      	movs	r1, r4
    2948:	426d      	negs	r5, r5
    294a:	1a28      	subs	r0, r5, r0
    294c:	40c1      	lsrs	r1, r0
    294e:	0008      	movs	r0, r1
    2950:	2a20      	cmp	r2, #32
    2952:	d01d      	beq.n	2990 <__aeabi_dmul+0x4d4>
    2954:	355f      	adds	r5, #95	; 0x5f
    2956:	1aaa      	subs	r2, r5, r2
    2958:	4094      	lsls	r4, r2
    295a:	4323      	orrs	r3, r4
    295c:	1e5c      	subs	r4, r3, #1
    295e:	41a3      	sbcs	r3, r4
    2960:	2507      	movs	r5, #7
    2962:	4303      	orrs	r3, r0
    2964:	401d      	ands	r5, r3
    2966:	2200      	movs	r2, #0
    2968:	2d00      	cmp	r5, #0
    296a:	d009      	beq.n	2980 <__aeabi_dmul+0x4c4>
    296c:	220f      	movs	r2, #15
    296e:	2400      	movs	r4, #0
    2970:	401a      	ands	r2, r3
    2972:	0018      	movs	r0, r3
    2974:	2a04      	cmp	r2, #4
    2976:	d1d6      	bne.n	2926 <__aeabi_dmul+0x46a>
    2978:	0003      	movs	r3, r0
    297a:	0765      	lsls	r5, r4, #29
    297c:	0264      	lsls	r4, r4, #9
    297e:	0b22      	lsrs	r2, r4, #12
    2980:	08db      	lsrs	r3, r3, #3
    2982:	432b      	orrs	r3, r5
    2984:	2501      	movs	r5, #1
    2986:	4699      	mov	r9, r3
    2988:	9b01      	ldr	r3, [sp, #4]
    298a:	2400      	movs	r4, #0
    298c:	401d      	ands	r5, r3
    298e:	e5fc      	b.n	258a <__aeabi_dmul+0xce>
    2990:	2400      	movs	r4, #0
    2992:	e7e2      	b.n	295a <__aeabi_dmul+0x49e>
    2994:	2280      	movs	r2, #128	; 0x80
    2996:	2501      	movs	r5, #1
    2998:	0312      	lsls	r2, r2, #12
    299a:	4322      	orrs	r2, r4
    299c:	9901      	ldr	r1, [sp, #4]
    299e:	0312      	lsls	r2, r2, #12
    29a0:	0b12      	lsrs	r2, r2, #12
    29a2:	400d      	ands	r5, r1
    29a4:	4699      	mov	r9, r3
    29a6:	4c04      	ldr	r4, [pc, #16]	; (29b8 <__aeabi_dmul+0x4fc>)
    29a8:	e5ef      	b.n	258a <__aeabi_dmul+0xce>
    29aa:	46c0      	nop			; (mov r8, r8)
    29ac:	000003ff 	.word	0x000003ff
    29b0:	feffffff 	.word	0xfeffffff
    29b4:	000007fe 	.word	0x000007fe
    29b8:	000007ff 	.word	0x000007ff

000029bc <__aeabi_dsub>:
    29bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    29be:	4646      	mov	r6, r8
    29c0:	46d6      	mov	lr, sl
    29c2:	464f      	mov	r7, r9
    29c4:	030c      	lsls	r4, r1, #12
    29c6:	b5c0      	push	{r6, r7, lr}
    29c8:	0fcd      	lsrs	r5, r1, #31
    29ca:	004e      	lsls	r6, r1, #1
    29cc:	0a61      	lsrs	r1, r4, #9
    29ce:	0f44      	lsrs	r4, r0, #29
    29d0:	430c      	orrs	r4, r1
    29d2:	00c1      	lsls	r1, r0, #3
    29d4:	0058      	lsls	r0, r3, #1
    29d6:	0d40      	lsrs	r0, r0, #21
    29d8:	4684      	mov	ip, r0
    29da:	468a      	mov	sl, r1
    29dc:	000f      	movs	r7, r1
    29de:	0319      	lsls	r1, r3, #12
    29e0:	0f50      	lsrs	r0, r2, #29
    29e2:	0a49      	lsrs	r1, r1, #9
    29e4:	4301      	orrs	r1, r0
    29e6:	48c6      	ldr	r0, [pc, #792]	; (2d00 <__aeabi_dsub+0x344>)
    29e8:	0d76      	lsrs	r6, r6, #21
    29ea:	46a8      	mov	r8, r5
    29ec:	0fdb      	lsrs	r3, r3, #31
    29ee:	00d2      	lsls	r2, r2, #3
    29f0:	4584      	cmp	ip, r0
    29f2:	d100      	bne.n	29f6 <__aeabi_dsub+0x3a>
    29f4:	e0d8      	b.n	2ba8 <__aeabi_dsub+0x1ec>
    29f6:	2001      	movs	r0, #1
    29f8:	4043      	eors	r3, r0
    29fa:	42ab      	cmp	r3, r5
    29fc:	d100      	bne.n	2a00 <__aeabi_dsub+0x44>
    29fe:	e0a6      	b.n	2b4e <__aeabi_dsub+0x192>
    2a00:	4660      	mov	r0, ip
    2a02:	1a35      	subs	r5, r6, r0
    2a04:	2d00      	cmp	r5, #0
    2a06:	dc00      	bgt.n	2a0a <__aeabi_dsub+0x4e>
    2a08:	e105      	b.n	2c16 <__aeabi_dsub+0x25a>
    2a0a:	2800      	cmp	r0, #0
    2a0c:	d110      	bne.n	2a30 <__aeabi_dsub+0x74>
    2a0e:	000b      	movs	r3, r1
    2a10:	4313      	orrs	r3, r2
    2a12:	d100      	bne.n	2a16 <__aeabi_dsub+0x5a>
    2a14:	e0d7      	b.n	2bc6 <__aeabi_dsub+0x20a>
    2a16:	1e6b      	subs	r3, r5, #1
    2a18:	2b00      	cmp	r3, #0
    2a1a:	d000      	beq.n	2a1e <__aeabi_dsub+0x62>
    2a1c:	e14b      	b.n	2cb6 <__aeabi_dsub+0x2fa>
    2a1e:	4653      	mov	r3, sl
    2a20:	1a9f      	subs	r7, r3, r2
    2a22:	45ba      	cmp	sl, r7
    2a24:	4180      	sbcs	r0, r0
    2a26:	1a64      	subs	r4, r4, r1
    2a28:	4240      	negs	r0, r0
    2a2a:	1a24      	subs	r4, r4, r0
    2a2c:	2601      	movs	r6, #1
    2a2e:	e01e      	b.n	2a6e <__aeabi_dsub+0xb2>
    2a30:	4bb3      	ldr	r3, [pc, #716]	; (2d00 <__aeabi_dsub+0x344>)
    2a32:	429e      	cmp	r6, r3
    2a34:	d048      	beq.n	2ac8 <__aeabi_dsub+0x10c>
    2a36:	2380      	movs	r3, #128	; 0x80
    2a38:	041b      	lsls	r3, r3, #16
    2a3a:	4319      	orrs	r1, r3
    2a3c:	2d38      	cmp	r5, #56	; 0x38
    2a3e:	dd00      	ble.n	2a42 <__aeabi_dsub+0x86>
    2a40:	e119      	b.n	2c76 <__aeabi_dsub+0x2ba>
    2a42:	2d1f      	cmp	r5, #31
    2a44:	dd00      	ble.n	2a48 <__aeabi_dsub+0x8c>
    2a46:	e14c      	b.n	2ce2 <__aeabi_dsub+0x326>
    2a48:	2320      	movs	r3, #32
    2a4a:	000f      	movs	r7, r1
    2a4c:	1b5b      	subs	r3, r3, r5
    2a4e:	0010      	movs	r0, r2
    2a50:	409a      	lsls	r2, r3
    2a52:	409f      	lsls	r7, r3
    2a54:	40e8      	lsrs	r0, r5
    2a56:	1e53      	subs	r3, r2, #1
    2a58:	419a      	sbcs	r2, r3
    2a5a:	40e9      	lsrs	r1, r5
    2a5c:	4307      	orrs	r7, r0
    2a5e:	4317      	orrs	r7, r2
    2a60:	4653      	mov	r3, sl
    2a62:	1bdf      	subs	r7, r3, r7
    2a64:	1a61      	subs	r1, r4, r1
    2a66:	45ba      	cmp	sl, r7
    2a68:	41a4      	sbcs	r4, r4
    2a6a:	4264      	negs	r4, r4
    2a6c:	1b0c      	subs	r4, r1, r4
    2a6e:	0223      	lsls	r3, r4, #8
    2a70:	d400      	bmi.n	2a74 <__aeabi_dsub+0xb8>
    2a72:	e0c5      	b.n	2c00 <__aeabi_dsub+0x244>
    2a74:	0264      	lsls	r4, r4, #9
    2a76:	0a65      	lsrs	r5, r4, #9
    2a78:	2d00      	cmp	r5, #0
    2a7a:	d100      	bne.n	2a7e <__aeabi_dsub+0xc2>
    2a7c:	e0f6      	b.n	2c6c <__aeabi_dsub+0x2b0>
    2a7e:	0028      	movs	r0, r5
    2a80:	f000 fb1e 	bl	30c0 <__clzsi2>
    2a84:	0003      	movs	r3, r0
    2a86:	3b08      	subs	r3, #8
    2a88:	2b1f      	cmp	r3, #31
    2a8a:	dd00      	ble.n	2a8e <__aeabi_dsub+0xd2>
    2a8c:	e0e9      	b.n	2c62 <__aeabi_dsub+0x2a6>
    2a8e:	2220      	movs	r2, #32
    2a90:	003c      	movs	r4, r7
    2a92:	1ad2      	subs	r2, r2, r3
    2a94:	409d      	lsls	r5, r3
    2a96:	40d4      	lsrs	r4, r2
    2a98:	409f      	lsls	r7, r3
    2a9a:	4325      	orrs	r5, r4
    2a9c:	429e      	cmp	r6, r3
    2a9e:	dd00      	ble.n	2aa2 <__aeabi_dsub+0xe6>
    2aa0:	e0db      	b.n	2c5a <__aeabi_dsub+0x29e>
    2aa2:	1b9e      	subs	r6, r3, r6
    2aa4:	1c73      	adds	r3, r6, #1
    2aa6:	2b1f      	cmp	r3, #31
    2aa8:	dd00      	ble.n	2aac <__aeabi_dsub+0xf0>
    2aaa:	e10a      	b.n	2cc2 <__aeabi_dsub+0x306>
    2aac:	2220      	movs	r2, #32
    2aae:	0038      	movs	r0, r7
    2ab0:	1ad2      	subs	r2, r2, r3
    2ab2:	0029      	movs	r1, r5
    2ab4:	4097      	lsls	r7, r2
    2ab6:	002c      	movs	r4, r5
    2ab8:	4091      	lsls	r1, r2
    2aba:	40d8      	lsrs	r0, r3
    2abc:	1e7a      	subs	r2, r7, #1
    2abe:	4197      	sbcs	r7, r2
    2ac0:	40dc      	lsrs	r4, r3
    2ac2:	2600      	movs	r6, #0
    2ac4:	4301      	orrs	r1, r0
    2ac6:	430f      	orrs	r7, r1
    2ac8:	077b      	lsls	r3, r7, #29
    2aca:	d009      	beq.n	2ae0 <__aeabi_dsub+0x124>
    2acc:	230f      	movs	r3, #15
    2ace:	403b      	ands	r3, r7
    2ad0:	2b04      	cmp	r3, #4
    2ad2:	d005      	beq.n	2ae0 <__aeabi_dsub+0x124>
    2ad4:	1d3b      	adds	r3, r7, #4
    2ad6:	42bb      	cmp	r3, r7
    2ad8:	41bf      	sbcs	r7, r7
    2ada:	427f      	negs	r7, r7
    2adc:	19e4      	adds	r4, r4, r7
    2ade:	001f      	movs	r7, r3
    2ae0:	0223      	lsls	r3, r4, #8
    2ae2:	d525      	bpl.n	2b30 <__aeabi_dsub+0x174>
    2ae4:	4b86      	ldr	r3, [pc, #536]	; (2d00 <__aeabi_dsub+0x344>)
    2ae6:	3601      	adds	r6, #1
    2ae8:	429e      	cmp	r6, r3
    2aea:	d100      	bne.n	2aee <__aeabi_dsub+0x132>
    2aec:	e0af      	b.n	2c4e <__aeabi_dsub+0x292>
    2aee:	4b85      	ldr	r3, [pc, #532]	; (2d04 <__aeabi_dsub+0x348>)
    2af0:	2501      	movs	r5, #1
    2af2:	401c      	ands	r4, r3
    2af4:	4643      	mov	r3, r8
    2af6:	0762      	lsls	r2, r4, #29
    2af8:	08ff      	lsrs	r7, r7, #3
    2afa:	0264      	lsls	r4, r4, #9
    2afc:	0576      	lsls	r6, r6, #21
    2afe:	4317      	orrs	r7, r2
    2b00:	0b24      	lsrs	r4, r4, #12
    2b02:	0d76      	lsrs	r6, r6, #21
    2b04:	401d      	ands	r5, r3
    2b06:	2100      	movs	r1, #0
    2b08:	0324      	lsls	r4, r4, #12
    2b0a:	0b23      	lsrs	r3, r4, #12
    2b0c:	0d0c      	lsrs	r4, r1, #20
    2b0e:	4a7e      	ldr	r2, [pc, #504]	; (2d08 <__aeabi_dsub+0x34c>)
    2b10:	0524      	lsls	r4, r4, #20
    2b12:	431c      	orrs	r4, r3
    2b14:	4014      	ands	r4, r2
    2b16:	0533      	lsls	r3, r6, #20
    2b18:	4323      	orrs	r3, r4
    2b1a:	005b      	lsls	r3, r3, #1
    2b1c:	07ed      	lsls	r5, r5, #31
    2b1e:	085b      	lsrs	r3, r3, #1
    2b20:	432b      	orrs	r3, r5
    2b22:	0038      	movs	r0, r7
    2b24:	0019      	movs	r1, r3
    2b26:	bc1c      	pop	{r2, r3, r4}
    2b28:	4690      	mov	r8, r2
    2b2a:	4699      	mov	r9, r3
    2b2c:	46a2      	mov	sl, r4
    2b2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2b30:	2501      	movs	r5, #1
    2b32:	4643      	mov	r3, r8
    2b34:	0762      	lsls	r2, r4, #29
    2b36:	08ff      	lsrs	r7, r7, #3
    2b38:	4317      	orrs	r7, r2
    2b3a:	08e4      	lsrs	r4, r4, #3
    2b3c:	401d      	ands	r5, r3
    2b3e:	4b70      	ldr	r3, [pc, #448]	; (2d00 <__aeabi_dsub+0x344>)
    2b40:	429e      	cmp	r6, r3
    2b42:	d036      	beq.n	2bb2 <__aeabi_dsub+0x1f6>
    2b44:	0324      	lsls	r4, r4, #12
    2b46:	0576      	lsls	r6, r6, #21
    2b48:	0b24      	lsrs	r4, r4, #12
    2b4a:	0d76      	lsrs	r6, r6, #21
    2b4c:	e7db      	b.n	2b06 <__aeabi_dsub+0x14a>
    2b4e:	4663      	mov	r3, ip
    2b50:	1af3      	subs	r3, r6, r3
    2b52:	2b00      	cmp	r3, #0
    2b54:	dc00      	bgt.n	2b58 <__aeabi_dsub+0x19c>
    2b56:	e094      	b.n	2c82 <__aeabi_dsub+0x2c6>
    2b58:	4660      	mov	r0, ip
    2b5a:	2800      	cmp	r0, #0
    2b5c:	d035      	beq.n	2bca <__aeabi_dsub+0x20e>
    2b5e:	4868      	ldr	r0, [pc, #416]	; (2d00 <__aeabi_dsub+0x344>)
    2b60:	4286      	cmp	r6, r0
    2b62:	d0b1      	beq.n	2ac8 <__aeabi_dsub+0x10c>
    2b64:	2780      	movs	r7, #128	; 0x80
    2b66:	043f      	lsls	r7, r7, #16
    2b68:	4339      	orrs	r1, r7
    2b6a:	2b38      	cmp	r3, #56	; 0x38
    2b6c:	dc00      	bgt.n	2b70 <__aeabi_dsub+0x1b4>
    2b6e:	e0fd      	b.n	2d6c <__aeabi_dsub+0x3b0>
    2b70:	430a      	orrs	r2, r1
    2b72:	0017      	movs	r7, r2
    2b74:	2100      	movs	r1, #0
    2b76:	1e7a      	subs	r2, r7, #1
    2b78:	4197      	sbcs	r7, r2
    2b7a:	4457      	add	r7, sl
    2b7c:	4557      	cmp	r7, sl
    2b7e:	4180      	sbcs	r0, r0
    2b80:	1909      	adds	r1, r1, r4
    2b82:	4244      	negs	r4, r0
    2b84:	190c      	adds	r4, r1, r4
    2b86:	0223      	lsls	r3, r4, #8
    2b88:	d53a      	bpl.n	2c00 <__aeabi_dsub+0x244>
    2b8a:	4b5d      	ldr	r3, [pc, #372]	; (2d00 <__aeabi_dsub+0x344>)
    2b8c:	3601      	adds	r6, #1
    2b8e:	429e      	cmp	r6, r3
    2b90:	d100      	bne.n	2b94 <__aeabi_dsub+0x1d8>
    2b92:	e14b      	b.n	2e2c <__aeabi_dsub+0x470>
    2b94:	2201      	movs	r2, #1
    2b96:	4b5b      	ldr	r3, [pc, #364]	; (2d04 <__aeabi_dsub+0x348>)
    2b98:	401c      	ands	r4, r3
    2b9a:	087b      	lsrs	r3, r7, #1
    2b9c:	4017      	ands	r7, r2
    2b9e:	431f      	orrs	r7, r3
    2ba0:	07e2      	lsls	r2, r4, #31
    2ba2:	4317      	orrs	r7, r2
    2ba4:	0864      	lsrs	r4, r4, #1
    2ba6:	e78f      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2ba8:	0008      	movs	r0, r1
    2baa:	4310      	orrs	r0, r2
    2bac:	d000      	beq.n	2bb0 <__aeabi_dsub+0x1f4>
    2bae:	e724      	b.n	29fa <__aeabi_dsub+0x3e>
    2bb0:	e721      	b.n	29f6 <__aeabi_dsub+0x3a>
    2bb2:	0023      	movs	r3, r4
    2bb4:	433b      	orrs	r3, r7
    2bb6:	d100      	bne.n	2bba <__aeabi_dsub+0x1fe>
    2bb8:	e1b9      	b.n	2f2e <__aeabi_dsub+0x572>
    2bba:	2280      	movs	r2, #128	; 0x80
    2bbc:	0312      	lsls	r2, r2, #12
    2bbe:	4314      	orrs	r4, r2
    2bc0:	0324      	lsls	r4, r4, #12
    2bc2:	0b24      	lsrs	r4, r4, #12
    2bc4:	e79f      	b.n	2b06 <__aeabi_dsub+0x14a>
    2bc6:	002e      	movs	r6, r5
    2bc8:	e77e      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2bca:	0008      	movs	r0, r1
    2bcc:	4310      	orrs	r0, r2
    2bce:	d100      	bne.n	2bd2 <__aeabi_dsub+0x216>
    2bd0:	e0ca      	b.n	2d68 <__aeabi_dsub+0x3ac>
    2bd2:	1e58      	subs	r0, r3, #1
    2bd4:	4684      	mov	ip, r0
    2bd6:	2800      	cmp	r0, #0
    2bd8:	d000      	beq.n	2bdc <__aeabi_dsub+0x220>
    2bda:	e0e7      	b.n	2dac <__aeabi_dsub+0x3f0>
    2bdc:	4452      	add	r2, sl
    2bde:	4552      	cmp	r2, sl
    2be0:	4180      	sbcs	r0, r0
    2be2:	1864      	adds	r4, r4, r1
    2be4:	4240      	negs	r0, r0
    2be6:	1824      	adds	r4, r4, r0
    2be8:	0017      	movs	r7, r2
    2bea:	2601      	movs	r6, #1
    2bec:	0223      	lsls	r3, r4, #8
    2bee:	d507      	bpl.n	2c00 <__aeabi_dsub+0x244>
    2bf0:	2602      	movs	r6, #2
    2bf2:	e7cf      	b.n	2b94 <__aeabi_dsub+0x1d8>
    2bf4:	4664      	mov	r4, ip
    2bf6:	432c      	orrs	r4, r5
    2bf8:	d100      	bne.n	2bfc <__aeabi_dsub+0x240>
    2bfa:	e1b3      	b.n	2f64 <__aeabi_dsub+0x5a8>
    2bfc:	002c      	movs	r4, r5
    2bfe:	4667      	mov	r7, ip
    2c00:	077b      	lsls	r3, r7, #29
    2c02:	d000      	beq.n	2c06 <__aeabi_dsub+0x24a>
    2c04:	e762      	b.n	2acc <__aeabi_dsub+0x110>
    2c06:	0763      	lsls	r3, r4, #29
    2c08:	08ff      	lsrs	r7, r7, #3
    2c0a:	431f      	orrs	r7, r3
    2c0c:	2501      	movs	r5, #1
    2c0e:	4643      	mov	r3, r8
    2c10:	08e4      	lsrs	r4, r4, #3
    2c12:	401d      	ands	r5, r3
    2c14:	e793      	b.n	2b3e <__aeabi_dsub+0x182>
    2c16:	2d00      	cmp	r5, #0
    2c18:	d178      	bne.n	2d0c <__aeabi_dsub+0x350>
    2c1a:	1c75      	adds	r5, r6, #1
    2c1c:	056d      	lsls	r5, r5, #21
    2c1e:	0d6d      	lsrs	r5, r5, #21
    2c20:	2d01      	cmp	r5, #1
    2c22:	dc00      	bgt.n	2c26 <__aeabi_dsub+0x26a>
    2c24:	e0f2      	b.n	2e0c <__aeabi_dsub+0x450>
    2c26:	4650      	mov	r0, sl
    2c28:	1a80      	subs	r0, r0, r2
    2c2a:	4582      	cmp	sl, r0
    2c2c:	41bf      	sbcs	r7, r7
    2c2e:	1a65      	subs	r5, r4, r1
    2c30:	427f      	negs	r7, r7
    2c32:	1bed      	subs	r5, r5, r7
    2c34:	4684      	mov	ip, r0
    2c36:	0228      	lsls	r0, r5, #8
    2c38:	d400      	bmi.n	2c3c <__aeabi_dsub+0x280>
    2c3a:	e08c      	b.n	2d56 <__aeabi_dsub+0x39a>
    2c3c:	4650      	mov	r0, sl
    2c3e:	1a17      	subs	r7, r2, r0
    2c40:	42ba      	cmp	r2, r7
    2c42:	4192      	sbcs	r2, r2
    2c44:	1b0c      	subs	r4, r1, r4
    2c46:	4255      	negs	r5, r2
    2c48:	1b65      	subs	r5, r4, r5
    2c4a:	4698      	mov	r8, r3
    2c4c:	e714      	b.n	2a78 <__aeabi_dsub+0xbc>
    2c4e:	2501      	movs	r5, #1
    2c50:	4643      	mov	r3, r8
    2c52:	2400      	movs	r4, #0
    2c54:	401d      	ands	r5, r3
    2c56:	2700      	movs	r7, #0
    2c58:	e755      	b.n	2b06 <__aeabi_dsub+0x14a>
    2c5a:	4c2a      	ldr	r4, [pc, #168]	; (2d04 <__aeabi_dsub+0x348>)
    2c5c:	1af6      	subs	r6, r6, r3
    2c5e:	402c      	ands	r4, r5
    2c60:	e732      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2c62:	003d      	movs	r5, r7
    2c64:	3828      	subs	r0, #40	; 0x28
    2c66:	4085      	lsls	r5, r0
    2c68:	2700      	movs	r7, #0
    2c6a:	e717      	b.n	2a9c <__aeabi_dsub+0xe0>
    2c6c:	0038      	movs	r0, r7
    2c6e:	f000 fa27 	bl	30c0 <__clzsi2>
    2c72:	3020      	adds	r0, #32
    2c74:	e706      	b.n	2a84 <__aeabi_dsub+0xc8>
    2c76:	430a      	orrs	r2, r1
    2c78:	0017      	movs	r7, r2
    2c7a:	2100      	movs	r1, #0
    2c7c:	1e7a      	subs	r2, r7, #1
    2c7e:	4197      	sbcs	r7, r2
    2c80:	e6ee      	b.n	2a60 <__aeabi_dsub+0xa4>
    2c82:	2b00      	cmp	r3, #0
    2c84:	d000      	beq.n	2c88 <__aeabi_dsub+0x2cc>
    2c86:	e0e5      	b.n	2e54 <__aeabi_dsub+0x498>
    2c88:	1c73      	adds	r3, r6, #1
    2c8a:	469c      	mov	ip, r3
    2c8c:	055b      	lsls	r3, r3, #21
    2c8e:	0d5b      	lsrs	r3, r3, #21
    2c90:	2b01      	cmp	r3, #1
    2c92:	dc00      	bgt.n	2c96 <__aeabi_dsub+0x2da>
    2c94:	e09f      	b.n	2dd6 <__aeabi_dsub+0x41a>
    2c96:	4b1a      	ldr	r3, [pc, #104]	; (2d00 <__aeabi_dsub+0x344>)
    2c98:	459c      	cmp	ip, r3
    2c9a:	d100      	bne.n	2c9e <__aeabi_dsub+0x2e2>
    2c9c:	e0c5      	b.n	2e2a <__aeabi_dsub+0x46e>
    2c9e:	4452      	add	r2, sl
    2ca0:	4552      	cmp	r2, sl
    2ca2:	4180      	sbcs	r0, r0
    2ca4:	1864      	adds	r4, r4, r1
    2ca6:	4240      	negs	r0, r0
    2ca8:	1824      	adds	r4, r4, r0
    2caa:	07e7      	lsls	r7, r4, #31
    2cac:	0852      	lsrs	r2, r2, #1
    2cae:	4317      	orrs	r7, r2
    2cb0:	0864      	lsrs	r4, r4, #1
    2cb2:	4666      	mov	r6, ip
    2cb4:	e708      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2cb6:	4812      	ldr	r0, [pc, #72]	; (2d00 <__aeabi_dsub+0x344>)
    2cb8:	4285      	cmp	r5, r0
    2cba:	d100      	bne.n	2cbe <__aeabi_dsub+0x302>
    2cbc:	e085      	b.n	2dca <__aeabi_dsub+0x40e>
    2cbe:	001d      	movs	r5, r3
    2cc0:	e6bc      	b.n	2a3c <__aeabi_dsub+0x80>
    2cc2:	0029      	movs	r1, r5
    2cc4:	3e1f      	subs	r6, #31
    2cc6:	40f1      	lsrs	r1, r6
    2cc8:	2b20      	cmp	r3, #32
    2cca:	d100      	bne.n	2cce <__aeabi_dsub+0x312>
    2ccc:	e07f      	b.n	2dce <__aeabi_dsub+0x412>
    2cce:	2240      	movs	r2, #64	; 0x40
    2cd0:	1ad3      	subs	r3, r2, r3
    2cd2:	409d      	lsls	r5, r3
    2cd4:	432f      	orrs	r7, r5
    2cd6:	1e7d      	subs	r5, r7, #1
    2cd8:	41af      	sbcs	r7, r5
    2cda:	2400      	movs	r4, #0
    2cdc:	430f      	orrs	r7, r1
    2cde:	2600      	movs	r6, #0
    2ce0:	e78e      	b.n	2c00 <__aeabi_dsub+0x244>
    2ce2:	002b      	movs	r3, r5
    2ce4:	000f      	movs	r7, r1
    2ce6:	3b20      	subs	r3, #32
    2ce8:	40df      	lsrs	r7, r3
    2cea:	2d20      	cmp	r5, #32
    2cec:	d071      	beq.n	2dd2 <__aeabi_dsub+0x416>
    2cee:	2340      	movs	r3, #64	; 0x40
    2cf0:	1b5d      	subs	r5, r3, r5
    2cf2:	40a9      	lsls	r1, r5
    2cf4:	430a      	orrs	r2, r1
    2cf6:	1e51      	subs	r1, r2, #1
    2cf8:	418a      	sbcs	r2, r1
    2cfa:	2100      	movs	r1, #0
    2cfc:	4317      	orrs	r7, r2
    2cfe:	e6af      	b.n	2a60 <__aeabi_dsub+0xa4>
    2d00:	000007ff 	.word	0x000007ff
    2d04:	ff7fffff 	.word	0xff7fffff
    2d08:	800fffff 	.word	0x800fffff
    2d0c:	2e00      	cmp	r6, #0
    2d0e:	d03e      	beq.n	2d8e <__aeabi_dsub+0x3d2>
    2d10:	4eb3      	ldr	r6, [pc, #716]	; (2fe0 <__aeabi_dsub+0x624>)
    2d12:	45b4      	cmp	ip, r6
    2d14:	d045      	beq.n	2da2 <__aeabi_dsub+0x3e6>
    2d16:	2680      	movs	r6, #128	; 0x80
    2d18:	0436      	lsls	r6, r6, #16
    2d1a:	426d      	negs	r5, r5
    2d1c:	4334      	orrs	r4, r6
    2d1e:	2d38      	cmp	r5, #56	; 0x38
    2d20:	dd00      	ble.n	2d24 <__aeabi_dsub+0x368>
    2d22:	e0a8      	b.n	2e76 <__aeabi_dsub+0x4ba>
    2d24:	2d1f      	cmp	r5, #31
    2d26:	dd00      	ble.n	2d2a <__aeabi_dsub+0x36e>
    2d28:	e11f      	b.n	2f6a <__aeabi_dsub+0x5ae>
    2d2a:	2620      	movs	r6, #32
    2d2c:	0027      	movs	r7, r4
    2d2e:	4650      	mov	r0, sl
    2d30:	1b76      	subs	r6, r6, r5
    2d32:	40b7      	lsls	r7, r6
    2d34:	40e8      	lsrs	r0, r5
    2d36:	4307      	orrs	r7, r0
    2d38:	4650      	mov	r0, sl
    2d3a:	40b0      	lsls	r0, r6
    2d3c:	1e46      	subs	r6, r0, #1
    2d3e:	41b0      	sbcs	r0, r6
    2d40:	40ec      	lsrs	r4, r5
    2d42:	4338      	orrs	r0, r7
    2d44:	1a17      	subs	r7, r2, r0
    2d46:	42ba      	cmp	r2, r7
    2d48:	4192      	sbcs	r2, r2
    2d4a:	1b0c      	subs	r4, r1, r4
    2d4c:	4252      	negs	r2, r2
    2d4e:	1aa4      	subs	r4, r4, r2
    2d50:	4666      	mov	r6, ip
    2d52:	4698      	mov	r8, r3
    2d54:	e68b      	b.n	2a6e <__aeabi_dsub+0xb2>
    2d56:	4664      	mov	r4, ip
    2d58:	4667      	mov	r7, ip
    2d5a:	432c      	orrs	r4, r5
    2d5c:	d000      	beq.n	2d60 <__aeabi_dsub+0x3a4>
    2d5e:	e68b      	b.n	2a78 <__aeabi_dsub+0xbc>
    2d60:	2500      	movs	r5, #0
    2d62:	2600      	movs	r6, #0
    2d64:	2700      	movs	r7, #0
    2d66:	e6ea      	b.n	2b3e <__aeabi_dsub+0x182>
    2d68:	001e      	movs	r6, r3
    2d6a:	e6ad      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2d6c:	2b1f      	cmp	r3, #31
    2d6e:	dc60      	bgt.n	2e32 <__aeabi_dsub+0x476>
    2d70:	2720      	movs	r7, #32
    2d72:	1af8      	subs	r0, r7, r3
    2d74:	000f      	movs	r7, r1
    2d76:	4684      	mov	ip, r0
    2d78:	4087      	lsls	r7, r0
    2d7a:	0010      	movs	r0, r2
    2d7c:	40d8      	lsrs	r0, r3
    2d7e:	4307      	orrs	r7, r0
    2d80:	4660      	mov	r0, ip
    2d82:	4082      	lsls	r2, r0
    2d84:	1e50      	subs	r0, r2, #1
    2d86:	4182      	sbcs	r2, r0
    2d88:	40d9      	lsrs	r1, r3
    2d8a:	4317      	orrs	r7, r2
    2d8c:	e6f5      	b.n	2b7a <__aeabi_dsub+0x1be>
    2d8e:	0026      	movs	r6, r4
    2d90:	4650      	mov	r0, sl
    2d92:	4306      	orrs	r6, r0
    2d94:	d005      	beq.n	2da2 <__aeabi_dsub+0x3e6>
    2d96:	43ed      	mvns	r5, r5
    2d98:	2d00      	cmp	r5, #0
    2d9a:	d0d3      	beq.n	2d44 <__aeabi_dsub+0x388>
    2d9c:	4e90      	ldr	r6, [pc, #576]	; (2fe0 <__aeabi_dsub+0x624>)
    2d9e:	45b4      	cmp	ip, r6
    2da0:	d1bd      	bne.n	2d1e <__aeabi_dsub+0x362>
    2da2:	000c      	movs	r4, r1
    2da4:	0017      	movs	r7, r2
    2da6:	4666      	mov	r6, ip
    2da8:	4698      	mov	r8, r3
    2daa:	e68d      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2dac:	488c      	ldr	r0, [pc, #560]	; (2fe0 <__aeabi_dsub+0x624>)
    2dae:	4283      	cmp	r3, r0
    2db0:	d00b      	beq.n	2dca <__aeabi_dsub+0x40e>
    2db2:	4663      	mov	r3, ip
    2db4:	e6d9      	b.n	2b6a <__aeabi_dsub+0x1ae>
    2db6:	2d00      	cmp	r5, #0
    2db8:	d000      	beq.n	2dbc <__aeabi_dsub+0x400>
    2dba:	e096      	b.n	2eea <__aeabi_dsub+0x52e>
    2dbc:	0008      	movs	r0, r1
    2dbe:	4310      	orrs	r0, r2
    2dc0:	d100      	bne.n	2dc4 <__aeabi_dsub+0x408>
    2dc2:	e0e2      	b.n	2f8a <__aeabi_dsub+0x5ce>
    2dc4:	000c      	movs	r4, r1
    2dc6:	0017      	movs	r7, r2
    2dc8:	4698      	mov	r8, r3
    2dca:	4e85      	ldr	r6, [pc, #532]	; (2fe0 <__aeabi_dsub+0x624>)
    2dcc:	e67c      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2dce:	2500      	movs	r5, #0
    2dd0:	e780      	b.n	2cd4 <__aeabi_dsub+0x318>
    2dd2:	2100      	movs	r1, #0
    2dd4:	e78e      	b.n	2cf4 <__aeabi_dsub+0x338>
    2dd6:	0023      	movs	r3, r4
    2dd8:	4650      	mov	r0, sl
    2dda:	4303      	orrs	r3, r0
    2ddc:	2e00      	cmp	r6, #0
    2dde:	d000      	beq.n	2de2 <__aeabi_dsub+0x426>
    2de0:	e0a8      	b.n	2f34 <__aeabi_dsub+0x578>
    2de2:	2b00      	cmp	r3, #0
    2de4:	d100      	bne.n	2de8 <__aeabi_dsub+0x42c>
    2de6:	e0de      	b.n	2fa6 <__aeabi_dsub+0x5ea>
    2de8:	000b      	movs	r3, r1
    2dea:	4313      	orrs	r3, r2
    2dec:	d100      	bne.n	2df0 <__aeabi_dsub+0x434>
    2dee:	e66b      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2df0:	4452      	add	r2, sl
    2df2:	4552      	cmp	r2, sl
    2df4:	4180      	sbcs	r0, r0
    2df6:	1864      	adds	r4, r4, r1
    2df8:	4240      	negs	r0, r0
    2dfa:	1824      	adds	r4, r4, r0
    2dfc:	0017      	movs	r7, r2
    2dfe:	0223      	lsls	r3, r4, #8
    2e00:	d400      	bmi.n	2e04 <__aeabi_dsub+0x448>
    2e02:	e6fd      	b.n	2c00 <__aeabi_dsub+0x244>
    2e04:	4b77      	ldr	r3, [pc, #476]	; (2fe4 <__aeabi_dsub+0x628>)
    2e06:	4666      	mov	r6, ip
    2e08:	401c      	ands	r4, r3
    2e0a:	e65d      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2e0c:	0025      	movs	r5, r4
    2e0e:	4650      	mov	r0, sl
    2e10:	4305      	orrs	r5, r0
    2e12:	2e00      	cmp	r6, #0
    2e14:	d1cf      	bne.n	2db6 <__aeabi_dsub+0x3fa>
    2e16:	2d00      	cmp	r5, #0
    2e18:	d14f      	bne.n	2eba <__aeabi_dsub+0x4fe>
    2e1a:	000c      	movs	r4, r1
    2e1c:	4314      	orrs	r4, r2
    2e1e:	d100      	bne.n	2e22 <__aeabi_dsub+0x466>
    2e20:	e0a0      	b.n	2f64 <__aeabi_dsub+0x5a8>
    2e22:	000c      	movs	r4, r1
    2e24:	0017      	movs	r7, r2
    2e26:	4698      	mov	r8, r3
    2e28:	e64e      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2e2a:	4666      	mov	r6, ip
    2e2c:	2400      	movs	r4, #0
    2e2e:	2700      	movs	r7, #0
    2e30:	e685      	b.n	2b3e <__aeabi_dsub+0x182>
    2e32:	001f      	movs	r7, r3
    2e34:	0008      	movs	r0, r1
    2e36:	3f20      	subs	r7, #32
    2e38:	40f8      	lsrs	r0, r7
    2e3a:	0007      	movs	r7, r0
    2e3c:	2b20      	cmp	r3, #32
    2e3e:	d100      	bne.n	2e42 <__aeabi_dsub+0x486>
    2e40:	e08e      	b.n	2f60 <__aeabi_dsub+0x5a4>
    2e42:	2040      	movs	r0, #64	; 0x40
    2e44:	1ac3      	subs	r3, r0, r3
    2e46:	4099      	lsls	r1, r3
    2e48:	430a      	orrs	r2, r1
    2e4a:	1e51      	subs	r1, r2, #1
    2e4c:	418a      	sbcs	r2, r1
    2e4e:	2100      	movs	r1, #0
    2e50:	4317      	orrs	r7, r2
    2e52:	e692      	b.n	2b7a <__aeabi_dsub+0x1be>
    2e54:	2e00      	cmp	r6, #0
    2e56:	d114      	bne.n	2e82 <__aeabi_dsub+0x4c6>
    2e58:	0026      	movs	r6, r4
    2e5a:	4650      	mov	r0, sl
    2e5c:	4306      	orrs	r6, r0
    2e5e:	d062      	beq.n	2f26 <__aeabi_dsub+0x56a>
    2e60:	43db      	mvns	r3, r3
    2e62:	2b00      	cmp	r3, #0
    2e64:	d15c      	bne.n	2f20 <__aeabi_dsub+0x564>
    2e66:	1887      	adds	r7, r0, r2
    2e68:	4297      	cmp	r7, r2
    2e6a:	4192      	sbcs	r2, r2
    2e6c:	1864      	adds	r4, r4, r1
    2e6e:	4252      	negs	r2, r2
    2e70:	18a4      	adds	r4, r4, r2
    2e72:	4666      	mov	r6, ip
    2e74:	e687      	b.n	2b86 <__aeabi_dsub+0x1ca>
    2e76:	4650      	mov	r0, sl
    2e78:	4320      	orrs	r0, r4
    2e7a:	1e44      	subs	r4, r0, #1
    2e7c:	41a0      	sbcs	r0, r4
    2e7e:	2400      	movs	r4, #0
    2e80:	e760      	b.n	2d44 <__aeabi_dsub+0x388>
    2e82:	4e57      	ldr	r6, [pc, #348]	; (2fe0 <__aeabi_dsub+0x624>)
    2e84:	45b4      	cmp	ip, r6
    2e86:	d04e      	beq.n	2f26 <__aeabi_dsub+0x56a>
    2e88:	2680      	movs	r6, #128	; 0x80
    2e8a:	0436      	lsls	r6, r6, #16
    2e8c:	425b      	negs	r3, r3
    2e8e:	4334      	orrs	r4, r6
    2e90:	2b38      	cmp	r3, #56	; 0x38
    2e92:	dd00      	ble.n	2e96 <__aeabi_dsub+0x4da>
    2e94:	e07f      	b.n	2f96 <__aeabi_dsub+0x5da>
    2e96:	2b1f      	cmp	r3, #31
    2e98:	dd00      	ble.n	2e9c <__aeabi_dsub+0x4e0>
    2e9a:	e08b      	b.n	2fb4 <__aeabi_dsub+0x5f8>
    2e9c:	2620      	movs	r6, #32
    2e9e:	0027      	movs	r7, r4
    2ea0:	4650      	mov	r0, sl
    2ea2:	1af6      	subs	r6, r6, r3
    2ea4:	40b7      	lsls	r7, r6
    2ea6:	40d8      	lsrs	r0, r3
    2ea8:	4307      	orrs	r7, r0
    2eaa:	4650      	mov	r0, sl
    2eac:	40b0      	lsls	r0, r6
    2eae:	1e46      	subs	r6, r0, #1
    2eb0:	41b0      	sbcs	r0, r6
    2eb2:	4307      	orrs	r7, r0
    2eb4:	40dc      	lsrs	r4, r3
    2eb6:	18bf      	adds	r7, r7, r2
    2eb8:	e7d6      	b.n	2e68 <__aeabi_dsub+0x4ac>
    2eba:	000d      	movs	r5, r1
    2ebc:	4315      	orrs	r5, r2
    2ebe:	d100      	bne.n	2ec2 <__aeabi_dsub+0x506>
    2ec0:	e602      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2ec2:	4650      	mov	r0, sl
    2ec4:	1a80      	subs	r0, r0, r2
    2ec6:	4582      	cmp	sl, r0
    2ec8:	41bf      	sbcs	r7, r7
    2eca:	1a65      	subs	r5, r4, r1
    2ecc:	427f      	negs	r7, r7
    2ece:	1bed      	subs	r5, r5, r7
    2ed0:	4684      	mov	ip, r0
    2ed2:	0228      	lsls	r0, r5, #8
    2ed4:	d400      	bmi.n	2ed8 <__aeabi_dsub+0x51c>
    2ed6:	e68d      	b.n	2bf4 <__aeabi_dsub+0x238>
    2ed8:	4650      	mov	r0, sl
    2eda:	1a17      	subs	r7, r2, r0
    2edc:	42ba      	cmp	r2, r7
    2ede:	4192      	sbcs	r2, r2
    2ee0:	1b0c      	subs	r4, r1, r4
    2ee2:	4252      	negs	r2, r2
    2ee4:	1aa4      	subs	r4, r4, r2
    2ee6:	4698      	mov	r8, r3
    2ee8:	e5ee      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2eea:	000d      	movs	r5, r1
    2eec:	4315      	orrs	r5, r2
    2eee:	d100      	bne.n	2ef2 <__aeabi_dsub+0x536>
    2ef0:	e76b      	b.n	2dca <__aeabi_dsub+0x40e>
    2ef2:	4650      	mov	r0, sl
    2ef4:	0767      	lsls	r7, r4, #29
    2ef6:	08c0      	lsrs	r0, r0, #3
    2ef8:	4307      	orrs	r7, r0
    2efa:	2080      	movs	r0, #128	; 0x80
    2efc:	08e4      	lsrs	r4, r4, #3
    2efe:	0300      	lsls	r0, r0, #12
    2f00:	4204      	tst	r4, r0
    2f02:	d007      	beq.n	2f14 <__aeabi_dsub+0x558>
    2f04:	08cd      	lsrs	r5, r1, #3
    2f06:	4205      	tst	r5, r0
    2f08:	d104      	bne.n	2f14 <__aeabi_dsub+0x558>
    2f0a:	002c      	movs	r4, r5
    2f0c:	4698      	mov	r8, r3
    2f0e:	08d7      	lsrs	r7, r2, #3
    2f10:	0749      	lsls	r1, r1, #29
    2f12:	430f      	orrs	r7, r1
    2f14:	0f7b      	lsrs	r3, r7, #29
    2f16:	00e4      	lsls	r4, r4, #3
    2f18:	431c      	orrs	r4, r3
    2f1a:	00ff      	lsls	r7, r7, #3
    2f1c:	4e30      	ldr	r6, [pc, #192]	; (2fe0 <__aeabi_dsub+0x624>)
    2f1e:	e5d3      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2f20:	4e2f      	ldr	r6, [pc, #188]	; (2fe0 <__aeabi_dsub+0x624>)
    2f22:	45b4      	cmp	ip, r6
    2f24:	d1b4      	bne.n	2e90 <__aeabi_dsub+0x4d4>
    2f26:	000c      	movs	r4, r1
    2f28:	0017      	movs	r7, r2
    2f2a:	4666      	mov	r6, ip
    2f2c:	e5cc      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2f2e:	2700      	movs	r7, #0
    2f30:	2400      	movs	r4, #0
    2f32:	e5e8      	b.n	2b06 <__aeabi_dsub+0x14a>
    2f34:	2b00      	cmp	r3, #0
    2f36:	d039      	beq.n	2fac <__aeabi_dsub+0x5f0>
    2f38:	000b      	movs	r3, r1
    2f3a:	4313      	orrs	r3, r2
    2f3c:	d100      	bne.n	2f40 <__aeabi_dsub+0x584>
    2f3e:	e744      	b.n	2dca <__aeabi_dsub+0x40e>
    2f40:	08c0      	lsrs	r0, r0, #3
    2f42:	0767      	lsls	r7, r4, #29
    2f44:	4307      	orrs	r7, r0
    2f46:	2080      	movs	r0, #128	; 0x80
    2f48:	08e4      	lsrs	r4, r4, #3
    2f4a:	0300      	lsls	r0, r0, #12
    2f4c:	4204      	tst	r4, r0
    2f4e:	d0e1      	beq.n	2f14 <__aeabi_dsub+0x558>
    2f50:	08cb      	lsrs	r3, r1, #3
    2f52:	4203      	tst	r3, r0
    2f54:	d1de      	bne.n	2f14 <__aeabi_dsub+0x558>
    2f56:	08d7      	lsrs	r7, r2, #3
    2f58:	0749      	lsls	r1, r1, #29
    2f5a:	430f      	orrs	r7, r1
    2f5c:	001c      	movs	r4, r3
    2f5e:	e7d9      	b.n	2f14 <__aeabi_dsub+0x558>
    2f60:	2100      	movs	r1, #0
    2f62:	e771      	b.n	2e48 <__aeabi_dsub+0x48c>
    2f64:	2500      	movs	r5, #0
    2f66:	2700      	movs	r7, #0
    2f68:	e5e9      	b.n	2b3e <__aeabi_dsub+0x182>
    2f6a:	002e      	movs	r6, r5
    2f6c:	0027      	movs	r7, r4
    2f6e:	3e20      	subs	r6, #32
    2f70:	40f7      	lsrs	r7, r6
    2f72:	2d20      	cmp	r5, #32
    2f74:	d02f      	beq.n	2fd6 <__aeabi_dsub+0x61a>
    2f76:	2640      	movs	r6, #64	; 0x40
    2f78:	1b75      	subs	r5, r6, r5
    2f7a:	40ac      	lsls	r4, r5
    2f7c:	4650      	mov	r0, sl
    2f7e:	4320      	orrs	r0, r4
    2f80:	1e44      	subs	r4, r0, #1
    2f82:	41a0      	sbcs	r0, r4
    2f84:	2400      	movs	r4, #0
    2f86:	4338      	orrs	r0, r7
    2f88:	e6dc      	b.n	2d44 <__aeabi_dsub+0x388>
    2f8a:	2480      	movs	r4, #128	; 0x80
    2f8c:	2500      	movs	r5, #0
    2f8e:	0324      	lsls	r4, r4, #12
    2f90:	4e13      	ldr	r6, [pc, #76]	; (2fe0 <__aeabi_dsub+0x624>)
    2f92:	2700      	movs	r7, #0
    2f94:	e5d3      	b.n	2b3e <__aeabi_dsub+0x182>
    2f96:	4650      	mov	r0, sl
    2f98:	4320      	orrs	r0, r4
    2f9a:	0007      	movs	r7, r0
    2f9c:	1e78      	subs	r0, r7, #1
    2f9e:	4187      	sbcs	r7, r0
    2fa0:	2400      	movs	r4, #0
    2fa2:	18bf      	adds	r7, r7, r2
    2fa4:	e760      	b.n	2e68 <__aeabi_dsub+0x4ac>
    2fa6:	000c      	movs	r4, r1
    2fa8:	0017      	movs	r7, r2
    2faa:	e58d      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2fac:	000c      	movs	r4, r1
    2fae:	0017      	movs	r7, r2
    2fb0:	4e0b      	ldr	r6, [pc, #44]	; (2fe0 <__aeabi_dsub+0x624>)
    2fb2:	e589      	b.n	2ac8 <__aeabi_dsub+0x10c>
    2fb4:	001e      	movs	r6, r3
    2fb6:	0027      	movs	r7, r4
    2fb8:	3e20      	subs	r6, #32
    2fba:	40f7      	lsrs	r7, r6
    2fbc:	2b20      	cmp	r3, #32
    2fbe:	d00c      	beq.n	2fda <__aeabi_dsub+0x61e>
    2fc0:	2640      	movs	r6, #64	; 0x40
    2fc2:	1af3      	subs	r3, r6, r3
    2fc4:	409c      	lsls	r4, r3
    2fc6:	4650      	mov	r0, sl
    2fc8:	4320      	orrs	r0, r4
    2fca:	1e44      	subs	r4, r0, #1
    2fcc:	41a0      	sbcs	r0, r4
    2fce:	4307      	orrs	r7, r0
    2fd0:	2400      	movs	r4, #0
    2fd2:	18bf      	adds	r7, r7, r2
    2fd4:	e748      	b.n	2e68 <__aeabi_dsub+0x4ac>
    2fd6:	2400      	movs	r4, #0
    2fd8:	e7d0      	b.n	2f7c <__aeabi_dsub+0x5c0>
    2fda:	2400      	movs	r4, #0
    2fdc:	e7f3      	b.n	2fc6 <__aeabi_dsub+0x60a>
    2fde:	46c0      	nop			; (mov r8, r8)
    2fe0:	000007ff 	.word	0x000007ff
    2fe4:	ff7fffff 	.word	0xff7fffff

00002fe8 <__aeabi_d2iz>:
    2fe8:	b530      	push	{r4, r5, lr}
    2fea:	4d13      	ldr	r5, [pc, #76]	; (3038 <__aeabi_d2iz+0x50>)
    2fec:	030a      	lsls	r2, r1, #12
    2fee:	004b      	lsls	r3, r1, #1
    2ff0:	0b12      	lsrs	r2, r2, #12
    2ff2:	0d5b      	lsrs	r3, r3, #21
    2ff4:	0fc9      	lsrs	r1, r1, #31
    2ff6:	2400      	movs	r4, #0
    2ff8:	42ab      	cmp	r3, r5
    2ffa:	dd10      	ble.n	301e <__aeabi_d2iz+0x36>
    2ffc:	4c0f      	ldr	r4, [pc, #60]	; (303c <__aeabi_d2iz+0x54>)
    2ffe:	42a3      	cmp	r3, r4
    3000:	dc0f      	bgt.n	3022 <__aeabi_d2iz+0x3a>
    3002:	2480      	movs	r4, #128	; 0x80
    3004:	4d0e      	ldr	r5, [pc, #56]	; (3040 <__aeabi_d2iz+0x58>)
    3006:	0364      	lsls	r4, r4, #13
    3008:	4322      	orrs	r2, r4
    300a:	1aed      	subs	r5, r5, r3
    300c:	2d1f      	cmp	r5, #31
    300e:	dd0b      	ble.n	3028 <__aeabi_d2iz+0x40>
    3010:	480c      	ldr	r0, [pc, #48]	; (3044 <__aeabi_d2iz+0x5c>)
    3012:	1ac3      	subs	r3, r0, r3
    3014:	40da      	lsrs	r2, r3
    3016:	4254      	negs	r4, r2
    3018:	2900      	cmp	r1, #0
    301a:	d100      	bne.n	301e <__aeabi_d2iz+0x36>
    301c:	0014      	movs	r4, r2
    301e:	0020      	movs	r0, r4
    3020:	bd30      	pop	{r4, r5, pc}
    3022:	4b09      	ldr	r3, [pc, #36]	; (3048 <__aeabi_d2iz+0x60>)
    3024:	18cc      	adds	r4, r1, r3
    3026:	e7fa      	b.n	301e <__aeabi_d2iz+0x36>
    3028:	4c08      	ldr	r4, [pc, #32]	; (304c <__aeabi_d2iz+0x64>)
    302a:	40e8      	lsrs	r0, r5
    302c:	46a4      	mov	ip, r4
    302e:	4463      	add	r3, ip
    3030:	409a      	lsls	r2, r3
    3032:	4302      	orrs	r2, r0
    3034:	e7ef      	b.n	3016 <__aeabi_d2iz+0x2e>
    3036:	46c0      	nop			; (mov r8, r8)
    3038:	000003fe 	.word	0x000003fe
    303c:	0000041d 	.word	0x0000041d
    3040:	00000433 	.word	0x00000433
    3044:	00000413 	.word	0x00000413
    3048:	7fffffff 	.word	0x7fffffff
    304c:	fffffbed 	.word	0xfffffbed

00003050 <__aeabi_ui2d>:
    3050:	b510      	push	{r4, lr}
    3052:	1e04      	subs	r4, r0, #0
    3054:	d028      	beq.n	30a8 <__aeabi_ui2d+0x58>
    3056:	f000 f833 	bl	30c0 <__clzsi2>
    305a:	4b15      	ldr	r3, [pc, #84]	; (30b0 <__aeabi_ui2d+0x60>)
    305c:	4a15      	ldr	r2, [pc, #84]	; (30b4 <__aeabi_ui2d+0x64>)
    305e:	1a1b      	subs	r3, r3, r0
    3060:	1ad2      	subs	r2, r2, r3
    3062:	2a1f      	cmp	r2, #31
    3064:	dd15      	ble.n	3092 <__aeabi_ui2d+0x42>
    3066:	4a14      	ldr	r2, [pc, #80]	; (30b8 <__aeabi_ui2d+0x68>)
    3068:	1ad2      	subs	r2, r2, r3
    306a:	4094      	lsls	r4, r2
    306c:	2200      	movs	r2, #0
    306e:	0324      	lsls	r4, r4, #12
    3070:	055b      	lsls	r3, r3, #21
    3072:	0b24      	lsrs	r4, r4, #12
    3074:	0d5b      	lsrs	r3, r3, #21
    3076:	2100      	movs	r1, #0
    3078:	0010      	movs	r0, r2
    307a:	0324      	lsls	r4, r4, #12
    307c:	0d0a      	lsrs	r2, r1, #20
    307e:	0b24      	lsrs	r4, r4, #12
    3080:	0512      	lsls	r2, r2, #20
    3082:	4322      	orrs	r2, r4
    3084:	4c0d      	ldr	r4, [pc, #52]	; (30bc <__aeabi_ui2d+0x6c>)
    3086:	051b      	lsls	r3, r3, #20
    3088:	4022      	ands	r2, r4
    308a:	4313      	orrs	r3, r2
    308c:	005b      	lsls	r3, r3, #1
    308e:	0859      	lsrs	r1, r3, #1
    3090:	bd10      	pop	{r4, pc}
    3092:	0021      	movs	r1, r4
    3094:	4091      	lsls	r1, r2
    3096:	000a      	movs	r2, r1
    3098:	210b      	movs	r1, #11
    309a:	1a08      	subs	r0, r1, r0
    309c:	40c4      	lsrs	r4, r0
    309e:	055b      	lsls	r3, r3, #21
    30a0:	0324      	lsls	r4, r4, #12
    30a2:	0b24      	lsrs	r4, r4, #12
    30a4:	0d5b      	lsrs	r3, r3, #21
    30a6:	e7e6      	b.n	3076 <__aeabi_ui2d+0x26>
    30a8:	2300      	movs	r3, #0
    30aa:	2400      	movs	r4, #0
    30ac:	2200      	movs	r2, #0
    30ae:	e7e2      	b.n	3076 <__aeabi_ui2d+0x26>
    30b0:	0000041e 	.word	0x0000041e
    30b4:	00000433 	.word	0x00000433
    30b8:	00000413 	.word	0x00000413
    30bc:	800fffff 	.word	0x800fffff

000030c0 <__clzsi2>:
    30c0:	211c      	movs	r1, #28
    30c2:	2301      	movs	r3, #1
    30c4:	041b      	lsls	r3, r3, #16
    30c6:	4298      	cmp	r0, r3
    30c8:	d301      	bcc.n	30ce <__clzsi2+0xe>
    30ca:	0c00      	lsrs	r0, r0, #16
    30cc:	3910      	subs	r1, #16
    30ce:	0a1b      	lsrs	r3, r3, #8
    30d0:	4298      	cmp	r0, r3
    30d2:	d301      	bcc.n	30d8 <__clzsi2+0x18>
    30d4:	0a00      	lsrs	r0, r0, #8
    30d6:	3908      	subs	r1, #8
    30d8:	091b      	lsrs	r3, r3, #4
    30da:	4298      	cmp	r0, r3
    30dc:	d301      	bcc.n	30e2 <__clzsi2+0x22>
    30de:	0900      	lsrs	r0, r0, #4
    30e0:	3904      	subs	r1, #4
    30e2:	a202      	add	r2, pc, #8	; (adr r2, 30ec <__clzsi2+0x2c>)
    30e4:	5c10      	ldrb	r0, [r2, r0]
    30e6:	1840      	adds	r0, r0, r1
    30e8:	4770      	bx	lr
    30ea:	46c0      	nop			; (mov r8, r8)
    30ec:	02020304 	.word	0x02020304
    30f0:	01010101 	.word	0x01010101
	...

000030fc <__libc_init_array>:
    30fc:	b570      	push	{r4, r5, r6, lr}
    30fe:	2600      	movs	r6, #0
    3100:	4d0c      	ldr	r5, [pc, #48]	; (3134 <__libc_init_array+0x38>)
    3102:	4c0d      	ldr	r4, [pc, #52]	; (3138 <__libc_init_array+0x3c>)
    3104:	1b64      	subs	r4, r4, r5
    3106:	10a4      	asrs	r4, r4, #2
    3108:	42a6      	cmp	r6, r4
    310a:	d109      	bne.n	3120 <__libc_init_array+0x24>
    310c:	2600      	movs	r6, #0
    310e:	f000 f891 	bl	3234 <_init>
    3112:	4d0a      	ldr	r5, [pc, #40]	; (313c <__libc_init_array+0x40>)
    3114:	4c0a      	ldr	r4, [pc, #40]	; (3140 <__libc_init_array+0x44>)
    3116:	1b64      	subs	r4, r4, r5
    3118:	10a4      	asrs	r4, r4, #2
    311a:	42a6      	cmp	r6, r4
    311c:	d105      	bne.n	312a <__libc_init_array+0x2e>
    311e:	bd70      	pop	{r4, r5, r6, pc}
    3120:	00b3      	lsls	r3, r6, #2
    3122:	58eb      	ldr	r3, [r5, r3]
    3124:	4798      	blx	r3
    3126:	3601      	adds	r6, #1
    3128:	e7ee      	b.n	3108 <__libc_init_array+0xc>
    312a:	00b3      	lsls	r3, r6, #2
    312c:	58eb      	ldr	r3, [r5, r3]
    312e:	4798      	blx	r3
    3130:	3601      	adds	r6, #1
    3132:	e7f2      	b.n	311a <__libc_init_array+0x1e>
    3134:	00003240 	.word	0x00003240
    3138:	00003240 	.word	0x00003240
    313c:	00003240 	.word	0x00003240
    3140:	00003244 	.word	0x00003244

00003144 <memset>:
    3144:	0003      	movs	r3, r0
    3146:	1882      	adds	r2, r0, r2
    3148:	4293      	cmp	r3, r2
    314a:	d100      	bne.n	314e <memset+0xa>
    314c:	4770      	bx	lr
    314e:	7019      	strb	r1, [r3, #0]
    3150:	3301      	adds	r3, #1
    3152:	e7f9      	b.n	3148 <memset+0x4>
    3154:	42000800 	.word	0x42000800
    3158:	42000c00 	.word	0x42000c00
    315c:	42001000 	.word	0x42001000
    3160:	42001400 	.word	0x42001400
    3164:	42001800 	.word	0x42001800
    3168:	42001c00 	.word	0x42001c00
    316c:	00000caa 	.word	0x00000caa
    3170:	00000ca6 	.word	0x00000ca6
    3174:	00000ca6 	.word	0x00000ca6
    3178:	00000d08 	.word	0x00000d08
    317c:	00000d08 	.word	0x00000d08
    3180:	00000cbe 	.word	0x00000cbe
    3184:	00000cb0 	.word	0x00000cb0
    3188:	00000cc4 	.word	0x00000cc4
    318c:	00000cf6 	.word	0x00000cf6
    3190:	00000d90 	.word	0x00000d90
    3194:	00000d70 	.word	0x00000d70
    3198:	00000d70 	.word	0x00000d70
    319c:	00000dfc 	.word	0x00000dfc
    31a0:	00000d82 	.word	0x00000d82
    31a4:	00000d9e 	.word	0x00000d9e
    31a8:	00000d74 	.word	0x00000d74
    31ac:	00000dac 	.word	0x00000dac
    31b0:	00000dec 	.word	0x00000dec
    31b4:	0000204c 	.word	0x0000204c
    31b8:	0000202e 	.word	0x0000202e
    31bc:	00001fe8 	.word	0x00001fe8
    31c0:	00001f06 	.word	0x00001f06
    31c4:	00001fe8 	.word	0x00001fe8
    31c8:	00002020 	.word	0x00002020
    31cc:	00001fe8 	.word	0x00001fe8
    31d0:	00001f06 	.word	0x00001f06
    31d4:	0000202e 	.word	0x0000202e
    31d8:	0000202e 	.word	0x0000202e
    31dc:	00002020 	.word	0x00002020
    31e0:	00001f06 	.word	0x00001f06
    31e4:	00001efe 	.word	0x00001efe
    31e8:	00001efe 	.word	0x00001efe
    31ec:	00001efe 	.word	0x00001efe
    31f0:	00002264 	.word	0x00002264
    31f4:	000026ac 	.word	0x000026ac
    31f8:	0000256c 	.word	0x0000256c
    31fc:	0000256c 	.word	0x0000256c
    3200:	00002568 	.word	0x00002568
    3204:	00002684 	.word	0x00002684
    3208:	00002684 	.word	0x00002684
    320c:	00002676 	.word	0x00002676
    3210:	00002568 	.word	0x00002568
    3214:	00002684 	.word	0x00002684
    3218:	00002676 	.word	0x00002676
    321c:	00002684 	.word	0x00002684
    3220:	00002568 	.word	0x00002568
    3224:	0000268c 	.word	0x0000268c
    3228:	0000268c 	.word	0x0000268c
    322c:	0000268c 	.word	0x0000268c
    3230:	00002890 	.word	0x00002890

00003234 <_init>:
    3234:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3236:	46c0      	nop			; (mov r8, r8)
    3238:	bcf8      	pop	{r3, r4, r5, r6, r7}
    323a:	bc08      	pop	{r3}
    323c:	469e      	mov	lr, r3
    323e:	4770      	bx	lr

00003240 <__init_array_start>:
    3240:	000000dd 	.word	0x000000dd

00003244 <_fini>:
    3244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3246:	46c0      	nop			; (mov r8, r8)
    3248:	bcf8      	pop	{r3, r4, r5, r6, r7}
    324a:	bc08      	pop	{r3}
    324c:	469e      	mov	lr, r3
    324e:	4770      	bx	lr

00003250 <__fini_array_start>:
    3250:	000000b5 	.word	0x000000b5
